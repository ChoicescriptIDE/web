nav = new SceneNavigator([ "startup" ]), stats = {}, isHeadless = !0;

var scope = (window.opener ? window.opener.parent : parent).window, thisProject = scope.cside.getActiveProject();

function findScene(sceneName) {
    if (sceneName) for (var projectSceneList = thisProject.getScenes(), i = 0; i < projectSceneList.length; i++) if (projectSceneList[i].getName().toLowerCase() === sceneName.toLowerCase()) return projectSceneList[i];
    return !1;
}

function printImage(source, alignment, alt, invert) {
    var img = document.createElement("img");
    scope && scope.cside && "web-dropbox" === scope.cside.getPlatform() ? parent.cside.getDropboxImageUrl(thisProject.getPath() + source, function(err, path) {
        if (err) throw new Error(err.message);
        img.src = path;
    }) : img.src = source.match("data:image") ? source : cside.server + source, 
    null !== alt && 0 < String(alt).length && img.setAttribute("alt", alt), invert ? setClass(img, "invert align" + alignment) : setClass(img, "align" + alignment), 
    document.getElementById("text").appendChild(img);
}

function printLink(target, href, anchorText, onclick) {
    target = target || document.getElementById("text");
    var link = document.createElement("a");
    link.setAttribute("href", href), link.setAttribute("target", "_blank"), link.appendChild(document.createTextNode(anchorText)), 
    onclick && (link.addEventListener ? link.addEventListener("click", onclick, !0) : link.onclick = onclick), 
    target.appendChild(link), target.appendChild(document.createTextNode(" "));
}

function popOutWindow() {
    "web-dropbox" != scope.cside.getPlatform() ? thisProject.window ? thisProject.window.focus() : parent.nw.Window.open("run_index.html?persistence=CSIDE", {
        focus: !0,
        width: 500,
        height: 500,
        title: ""
    }, function(new_win) {
        (thisProject.window = new_win).on("loaded", function() {
            new_win.window.storeName = null;
        }), new_win.on("closed", function() {
            thisProject.window.leaveFullscreen(), thisProject.window.hide(), thisProject.window.close(!0), 
            thisProject.window = null;
        });
    }) : thisProject.window = window.open("run_index.html?persistence=CSIDE", thisProject.getName(), "height=500,width=500,scrollbars=1");
}

window.allScenes = scope.cside.allScenes, Scene.prototype.lineMsg = function() {
    return "line " + (this.lineNum + 1) + " of " + stats.sceneName + ": ";
}, Scene.prototype.script = function() {
    Scene.validCommands.script = !1;
}, window.onerror = function(msg, file, line, stack) {
    var e = {};
    (e.message = msg) && (/file/i.test(msg) && /exist/i.test(msg) ? thisProject.logIssue(e) : (msg = findScene(stats.sceneName), 
    e.message.match(/line [0-9]+/) ? e.lineNumber = parseInt(e.message.match(/line ([0-9]+)/)[1]) : e.lineNumber = "undefined", 
    msg ? thisProject.logIssue(e, msg) : scope.cside.openScene(thisProject.getPath() + stats.sceneName + ".txt", function(err, scene) {
        err ? thisProject.logIssue(e) : thisProject.logIssue(e, scene);
    })));
}, Scene.prototype.sound = function(source) {
    var scene, e;
    ".mp3" === (source = "file://" + thisProject.getPath() + source).substring(source.length - 4, source.length) && (scene = findScene(stats.sceneName)) && ((e = {}).lineNumber = stats.scene.lineNum + 1, 
    e.message = "Unable to play proprietary format.\nPlease export game to test .mp3 audio.", 
    thisProject.logIssue(e, scene)), "function" == typeof playSound && playSound(source), 
    this.verifyImage && this.verifyImage(source);
}, "web-dropbox" != scope.cside.getPlatform() && setTimeout(function() {
    window.$("body").on("click", "a", function(e) {
        return e.preventDefault(), $(this).hasClass("alertify-button") || scope.nw.Shell.openExternal(this.href), 
        !1;
    });
}, 1e3), $(document).ready(function() {
    var button;
    scope === window.parent && ((button = document.createElement("button")).innerHTML = "Popout", 
    button.setAttribute("title", "Pop out window"), button.setAttribute("class", "spacedLink"), 
    button.setAttribute("onclick", "popOutWindow();"), document.getElementById("buttons").appendChild(button));
});
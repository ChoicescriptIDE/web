nav = new SceneNavigator([ "startup" ]), stats = {}, isHeadless = !0;

var parentWindow = (window.opener ? window.opener.parent : parent).window, scope = parentWindow ? parentWindow.cside : void 0, cside = scope || {
    project: {},
    getPlatform: () => {},
    popout: {
        is: window.opener,
        window: null
    },
    server: null,
    parent: () => {}
};

function printImage(source, alignment, alt, invert) {
    var img = document.createElement("img");
    "web-dropbox" === cside.getPlatform() ? cside.getDropboxImageUrl(cside.getActiveProject().getPath() + source, function(err, path) {
        if (err) throw img.src = cside.getActiveProject().getPath() + source, new Error(err.message);
        img.src = path;
    }) : img.src = source.match("data:image") ? source : cside.server + source, 
    null !== alt && 0 < String(alt).length && img.setAttribute("alt", alt), invert ? setClass(img, "invert align" + alignment) : setClass(img, "align" + alignment), 
    document.getElementById("text").appendChild(img);
}

function printLink(target, href, anchorText, onclick) {
    target = target || document.getElementById("text");
    var link = document.createElement("a");
    link.setAttribute("href", href), link.setAttribute("target", "_blank"), link.appendChild(document.createTextNode(anchorText)), 
    onclick && (link.addEventListener ? link.addEventListener("click", onclick, !0) : link.onclick = onclick), 
    target.appendChild(link), target.appendChild(document.createTextNode(" "));
}

function popOutWindow() {
    cside.popout.window ? cside.popout.window.focus() : cside.popout.window = window.open("run_index.html?persistence=CSIDE", cside.project.name, "height=500,width=500,scrollbars=1");
}

scope && scope.allScenes ? window.allScenes = scope.allScenes : window.alreadyLoaded = !0, 
Scene.prototype.lineMsg = function() {
    return "line " + (this.lineNum + 1) + " of " + stats.sceneName + ": ";
}, window.addEventListener("message", event => {
    if ("startGame" === event.data.type) window.allScenes = event.data.allScenes, 
    cside.project = event.data.project, cside.server = event.data.server, cside.getPlatform = () => event.data.platform, 
    event.data.allowScript || (Scene.prototype.script = function(code) {
        throw new Error("*script usage is disabled.");
    }), window.alreadyLoaded = !1, window.onload(), cside.parent = event.source;
}, !1), cside.popout && cside.popout.is && (window.allScenes = window.opener.allScenes), 
window.onerror = function(msg, file, line, stack) {
    var e = {};
    (e.message = msg) && (/file/i.test(msg) && /exist/i.test(msg) ? scope ? parentWindow.dispatchEvent(new CustomEvent("message", {
        detail: {
            type: "logIssue",
            project: {
                path: cside.getActiveProject().getPath(),
                name: cside.getActiveProject().getName()
            },
            error: e
        }
    })) : cside.parent.postMessage({
        type: "logIssue",
        project: cside.project,
        error: e
    }) : (e.message.match(/line [0-9]+/) ? e.lineNumber = parseInt(e.message.match(/line ([0-9]+)/)[1]) : e.lineNumber = "undefined", 
    scope ? parentWindow.dispatchEvent(new CustomEvent("message", {
        detail: {
            type: "logIssue",
            project: {
                path: cside.getActiveProject().getPath(),
                name: cside.getActiveProject().getName()
            },
            error: e,
            file: {
                name: stats.sceneName
            }
        }
    })) : cside.parent.postMessage({
        type: "logIssue",
        error: e,
        project: cside.project,
        file: {
            name: stats.sceneName
        }
    })));
}, Scene.prototype.sound = function(source) {
    source = cside.server + source, "function" == typeof playSound && playSound(source), 
    this.verifyImage && this.verifyImage(source);
}, "web-dropbox" != cside.platform && setTimeout(function() {
    window.$("body").on("click", "a", function(e) {
        return e.preventDefault(), $(this).hasClass("alertify-button") || cside.parent.postMessage({
            type: "handleLink",
            url: this.href
        }), !1;
    });
}, 1e3), $(document).ready(function() {
    cside.popout && cside.popout.is;
});
{"version":3,"sources":["out-vscode-web/vs/code/browser/workbench/fake","out-vscode-web/vs/code/browser/workbench/file:/Users/carey/Documents/Work/Github/vscode/src/vs/code/browser/workbench/workbench.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isStandalone } from 'vs/base/browser/browser';\nimport { parse } from 'vs/base/common/marshalling';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/window/common/window';\nimport { create } from 'vs/workbench/workbench.web.main';\nimport { posix } from 'vs/base/common/path';\nimport { ltrim } from 'vs/base/common/strings';\nimport type { IURLCallbackProvider } from 'vs/workbench/services/url/browser/urlService';\nimport type { IWorkbenchConstructionOptions } from 'vs/workbench/browser/web.api';\nimport type { IWorkspace, IWorkspaceProvider } from 'vs/workbench/services/host/browser/browserHostService';\nimport { ISecretStorageProvider } from 'vs/platform/secrets/common/secrets';\nimport { AuthenticationSessionInfo } from 'vs/workbench/services/authentication/browser/authenticationService';\n\nclass LocalStorageSecretStorageProvider implements ISecretStorageProvider {\n\tprivate static readonly STORAGE_KEY = 'secrets.provider';\n\n\tprivate _secrets: Record<string, string> | undefined;\n\n\ttype: 'in-memory' | 'persisted' | 'unknown' = 'persisted';\n\n\tconstructor() {\n\t\tlet authSessionInfo: (AuthenticationSessionInfo & { scopes: string[][] }) | undefined;\n\t\tconst authSessionElement = document.getElementById('vscode-workbench-auth-session');\n\t\tconst authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;\n\t\tif (authSessionElementAttribute) {\n\t\t\ttry {\n\t\t\t\tauthSessionInfo = JSON.parse(authSessionElementAttribute);\n\t\t\t} catch (error) { /* Invalid session is passed. Ignore. */ }\n\t\t}\n\n\t\tif (authSessionInfo) {\n\t\t\t// Settings Sync Entry\n\t\t\tthis.set(`${product.urlProtocol}.loginAccount`, JSON.stringify(authSessionInfo));\n\n\t\t\t// Auth extension Entry\n\t\t\tif (authSessionInfo.providerId !== 'github') {\n\t\t\t\tconsole.error(`Unexpected auth provider: ${authSessionInfo.providerId}. Expected 'github'.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst authAccount = JSON.stringify({ extensionId: 'vscode.github-authentication', key: 'github.auth' });\n\t\t\tthis.set(authAccount, JSON.stringify(authSessionInfo.scopes.map(scopes => ({\n\t\t\t\tid: authSessionInfo!.id,\n\t\t\t\tscopes,\n\t\t\t\taccessToken: authSessionInfo!.accessToken\n\t\t\t}))));\n\t\t}\n\t}\n\n\tget(key: string): Promise<string | undefined> {\n\t\treturn Promise.resolve(this.secrets[key]);\n\t}\n\tset(key: string, value: string): Promise<void> {\n\t\tthis.secrets[key] = value;\n\t\tthis.save();\n\n\t\treturn Promise.resolve();\n\t}\n\tasync delete(key: string): Promise<void> {\n\t\tdelete this.secrets[key];\n\n\t\tthis.save();\n\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate get secrets(): Record<string, string> {\n\t\tif (!this._secrets) {\n\t\t\ttry {\n\t\t\t\tconst serializedCredentials = window.localStorage.getItem(LocalStorageSecretStorageProvider.STORAGE_KEY);\n\t\t\t\tif (serializedCredentials) {\n\t\t\t\t\tthis._secrets = JSON.parse(serializedCredentials);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\tif (!(this._secrets instanceof Object)) {\n\t\t\t\tthis._secrets = {};\n\t\t\t}\n\t\t}\n\n\t\treturn this._secrets;\n\t}\n\n\tprivate save(): void {\n\t\twindow.localStorage.setItem(LocalStorageSecretStorageProvider.STORAGE_KEY, JSON.stringify(this.secrets));\n\t}\n}\n\nclass LocalStorageURLCallbackProvider extends Disposable implements IURLCallbackProvider {\n\n\tprivate static REQUEST_ID = 0;\n\n\tprivate static QUERY_KEYS: ('scheme' | 'authority' | 'path' | 'query' | 'fragment')[] = [\n\t\t'scheme',\n\t\t'authority',\n\t\t'path',\n\t\t'query',\n\t\t'fragment'\n\t];\n\n\tprivate readonly _onCallback = this._register(new Emitter<URI>());\n\treadonly onCallback = this._onCallback.event;\n\n\tprivate pendingCallbacks = new Set<number>();\n\tprivate lastTimeChecked = Date.now();\n\tprivate checkCallbacksTimeout: unknown | undefined = undefined;\n\tprivate onDidChangeLocalStorageDisposable: IDisposable | undefined;\n\n\tconstructor(private readonly _callbackRoute: string) {\n\t\tsuper();\n\t}\n\n\tcreate(options: Partial<UriComponents> = {}): URI {\n\t\tconst id = ++LocalStorageURLCallbackProvider.REQUEST_ID;\n\t\tconst queryParams: string[] = [`vscode-reqid=${id}`];\n\n\t\tfor (const key of LocalStorageURLCallbackProvider.QUERY_KEYS) {\n\t\t\tconst value = options[key];\n\n\t\t\tif (value) {\n\t\t\t\tqueryParams.push(`vscode-${key}=${encodeURIComponent(value)}`);\n\t\t\t}\n\t\t}\n\n\t\t// TODO@joao remove eventually\n\t\t// https://github.com/microsoft/vscode-dev/issues/62\n\t\t// https://github.com/microsoft/vscode/blob/159479eb5ae451a66b5dac3c12d564f32f454796/extensions/github-authentication/src/githubServer.ts#L50-L50\n\t\tif (!(options.authority === 'vscode.github-authentication' && options.path === '/dummy')) {\n\t\t\tconst key = `vscode-web.url-callbacks[${id}]`;\n\t\t\twindow.localStorage.removeItem(key);\n\n\t\t\tthis.pendingCallbacks.add(id);\n\t\t\tthis.startListening();\n\t\t}\n\n\t\treturn URI.parse(window.location.href).with({ path: this._callbackRoute, query: queryParams.join('&') });\n\t}\n\n\tprivate startListening(): void {\n\t\tif (this.onDidChangeLocalStorageDisposable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fn = () => this.onDidChangeLocalStorage();\n\t\twindow.addEventListener('storage', fn);\n\t\tthis.onDidChangeLocalStorageDisposable = { dispose: () => window.removeEventListener('storage', fn) };\n\t}\n\n\tprivate stopListening(): void {\n\t\tthis.onDidChangeLocalStorageDisposable?.dispose();\n\t\tthis.onDidChangeLocalStorageDisposable = undefined;\n\t}\n\n\t// this fires every time local storage changes, but we\n\t// don't want to check more often than once a second\n\tprivate async onDidChangeLocalStorage(): Promise<void> {\n\t\tconst ellapsed = Date.now() - this.lastTimeChecked;\n\n\t\tif (ellapsed > 1000) {\n\t\t\tthis.checkCallbacks();\n\t\t} else if (this.checkCallbacksTimeout === undefined) {\n\t\t\tthis.checkCallbacksTimeout = setTimeout(() => {\n\t\t\t\tthis.checkCallbacksTimeout = undefined;\n\t\t\t\tthis.checkCallbacks();\n\t\t\t}, 1000 - ellapsed);\n\t\t}\n\t}\n\n\tprivate checkCallbacks(): void {\n\t\tlet pendingCallbacks: Set<number> | undefined;\n\n\t\tfor (const id of this.pendingCallbacks) {\n\t\t\tconst key = `vscode-web.url-callbacks[${id}]`;\n\t\t\tconst result = window.localStorage.getItem(key);\n\n\t\t\tif (result !== null) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._onCallback.fire(URI.revive(JSON.parse(result)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\n\t\t\t\tpendingCallbacks = pendingCallbacks ?? new Set(this.pendingCallbacks);\n\t\t\t\tpendingCallbacks.delete(id);\n\t\t\t\twindow.localStorage.removeItem(key);\n\t\t\t}\n\t\t}\n\n\t\tif (pendingCallbacks) {\n\t\t\tthis.pendingCallbacks = pendingCallbacks;\n\n\t\t\tif (this.pendingCallbacks.size === 0) {\n\t\t\t\tthis.stopListening();\n\t\t\t}\n\t\t}\n\n\t\tthis.lastTimeChecked = Date.now();\n\t}\n}\n\nclass WorkspaceProvider implements IWorkspaceProvider {\n\n\tprivate static QUERY_PARAM_EMPTY_WINDOW = 'ew';\n\tprivate static QUERY_PARAM_FOLDER = 'folder';\n\tprivate static QUERY_PARAM_WORKSPACE = 'workspace';\n\n\tprivate static QUERY_PARAM_PAYLOAD = 'payload';\n\n\tstatic create(config: IWorkbenchConstructionOptions & { folderUri?: UriComponents; workspaceUri?: UriComponents }) {\n\t\tlet foundWorkspace = false;\n\t\tlet workspace: IWorkspace;\n\t\tlet payload = Object.create(null);\n\n\t\tconst query = new URL(document.location.href).searchParams;\n\t\tquery.forEach((value, key) => {\n\t\t\tswitch (key) {\n\n\t\t\t\t// Folder\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_FOLDER:\n\t\t\t\t\tif (config.remoteAuthority && value.startsWith(posix.sep)) {\n\t\t\t\t\t\t// when connected to a remote and having a value\n\t\t\t\t\t\t// that is a path (begins with a `/`), assume this\n\t\t\t\t\t\t// is a vscode-remote resource as simplified URL.\n\t\t\t\t\t\tworkspace = { folderUri: URI.from({ scheme: Schemas.vscodeRemote, path: value, authority: config.remoteAuthority }) };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkspace = { folderUri: URI.parse(value) };\n\t\t\t\t\t}\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Workspace\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_WORKSPACE:\n\t\t\t\t\tif (config.remoteAuthority && value.startsWith(posix.sep)) {\n\t\t\t\t\t\t// when connected to a remote and having a value\n\t\t\t\t\t\t// that is a path (begins with a `/`), assume this\n\t\t\t\t\t\t// is a vscode-remote resource as simplified URL.\n\t\t\t\t\t\tworkspace = { workspaceUri: URI.from({ scheme: Schemas.vscodeRemote, path: value, authority: config.remoteAuthority }) };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkspace = { workspaceUri: URI.parse(value) };\n\t\t\t\t\t}\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Empty\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW:\n\t\t\t\t\tworkspace = undefined;\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Payload\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_PAYLOAD:\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpayload = parse(value); // use marshalling#parse() to revive potential URIs\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(error); // possible invalid JSON\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t// If no workspace is provided through the URL, check for config\n\t\t// attribute from server\n\t\tif (!foundWorkspace) {\n\t\t\tif (config.folderUri) {\n\t\t\t\tworkspace = { folderUri: URI.revive(config.folderUri) };\n\t\t\t} else if (config.workspaceUri) {\n\t\t\t\tworkspace = { workspaceUri: URI.revive(config.workspaceUri) };\n\t\t\t}\n\t\t}\n\n\t\treturn new WorkspaceProvider(workspace, payload, config);\n\t}\n\n\treadonly trusted = true;\n\n\tprivate constructor(\n\t\treadonly workspace: IWorkspace,\n\t\treadonly payload: object,\n\t\tprivate readonly config: IWorkbenchConstructionOptions\n\t) {\n\t}\n\n\tasync open(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): Promise<boolean> {\n\t\tif (options?.reuse && !options.payload && this.isSame(this.workspace, workspace)) {\n\t\t\treturn true; // return early if workspace and environment is not changing and we are reusing window\n\t\t}\n\n\t\tconst targetHref = this.createTargetUrl(workspace, options);\n\t\tif (targetHref) {\n\t\t\tif (options?.reuse) {\n\t\t\t\twindow.location.href = targetHref;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet result;\n\t\t\t\tif (isStandalone()) {\n\t\t\t\t\tresult = window.open(targetHref, '_blank', 'toolbar=no'); // ensures to open another 'standalone' window!\n\t\t\t\t} else {\n\t\t\t\t\tresult = window.open(targetHref);\n\t\t\t\t}\n\n\t\t\t\treturn !!result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate createTargetUrl(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): string | undefined {\n\n\t\t// Empty\n\t\tlet targetHref: string | undefined = undefined;\n\t\tif (!workspace) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW}=true`;\n\t\t}\n\n\t\t// Folder\n\t\telse if (isFolderToOpen(workspace)) {\n\t\t\tconst queryParamFolder = this.encodeWorkspacePath(workspace.folderUri);\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_FOLDER}=${queryParamFolder}`;\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(workspace)) {\n\t\t\tconst queryParamWorkspace = this.encodeWorkspacePath(workspace.workspaceUri);\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_WORKSPACE}=${queryParamWorkspace}`;\n\t\t}\n\n\t\t// Append payload if any\n\t\tif (options?.payload) {\n\t\t\ttargetHref += `&${WorkspaceProvider.QUERY_PARAM_PAYLOAD}=${encodeURIComponent(JSON.stringify(options.payload))}`;\n\t\t}\n\n\t\treturn targetHref;\n\t}\n\n\tprivate encodeWorkspacePath(uri: URI): string {\n\t\tif (this.config.remoteAuthority && uri.scheme === Schemas.vscodeRemote) {\n\n\t\t\t// when connected to a remote and having a folder\n\t\t\t// or workspace for that remote, only use the path\n\t\t\t// as query value to form shorter, nicer URLs.\n\t\t\t// however, we still need to `encodeURIComponent`\n\t\t\t// to ensure to preserve special characters, such\n\t\t\t// as `+` in the path.\n\n\t\t\treturn encodeURIComponent(`${posix.sep}${ltrim(uri.path, posix.sep)}`).replaceAll('%2F', '/');\n\t\t}\n\n\t\treturn encodeURIComponent(uri.toString(true));\n\t}\n\n\tprivate isSame(workspaceA: IWorkspace, workspaceB: IWorkspace): boolean {\n\t\tif (!workspaceA || !workspaceB) {\n\t\t\treturn workspaceA === workspaceB; // both empty\n\t\t}\n\n\t\tif (isFolderToOpen(workspaceA) && isFolderToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.folderUri, workspaceB.folderUri); // same workspace\n\t\t}\n\n\t\tif (isWorkspaceToOpen(workspaceA) && isWorkspaceToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.workspaceUri, workspaceB.workspaceUri); // same workspace\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasRemote(): boolean {\n\t\tif (this.workspace) {\n\t\t\tif (isFolderToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.folderUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\n\t\t\tif (isWorkspaceToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.workspaceUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\n(function () {\n\n\t// Find config by checking for DOM\n\tconst configElement = document.getElementById('vscode-workbench-web-configuration');\n\tconst configElementAttribute = configElement ? configElement.getAttribute('data-settings') : undefined;\n\tif (!configElement || !configElementAttribute) {\n\t\tthrow new Error('Missing web configuration element');\n\t}\n\tconst config: IWorkbenchConstructionOptions & { folderUri?: UriComponents; workspaceUri?: UriComponents; callbackRoute: string } = JSON.parse(configElementAttribute);\n\n\t// Create workbench\n\tcreate(document.body, {\n\t\t...config,\n\t\twindowIndicator: config.windowIndicator ?? { label: '$(remote)', tooltip: `${product.nameShort} Web` },\n\t\tsettingsSyncOptions: config.settingsSyncOptions ? { enabled: config.settingsSyncOptions.enabled, } : undefined,\n\t\tworkspaceProvider: WorkspaceProvider.create(config),\n\t\turlCallbackProvider: new LocalStorageURLCallbackProvider(config.callbackRoute),\n\t\tsecretStorageProvider: config.remoteAuthority ? undefined /* with a remote, we don't use a local secret storage provider */ : new LocalStorageSecretStorageProvider()\n\t});\n})();\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","LocalStorageSecretStorageProvider","authSessionInfo","authSessionElement","authSessionElementAttribute","product_1","authAccount","scopes","key","value","serializedCredentials","LocalStorageURLCallbackProvider","lifecycle_1","j","event_1","options","id","queryParams","uri_1","fn","ellapsed","pendingCallbacks","error","WorkspaceProvider","config","foundWorkspace","workspace","payload","path_1","network_1","marshalling_1","e","targetHref","browser_1","window_1","queryParamFolder","queryParamWorkspace","uri","strings_1","workspaceA","workspaceB","resources_1","configElement","configElementAttribute","workbench_web_main_1"],"file":"workbench.js"}
{"version":3,"sources":["fake","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/map.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/stream.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/buffer.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/symbols.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/core/eolCounter.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/extpath.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/mime.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/network.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/resources.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/async.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/glob.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/core/stringBuilder.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/core/textChange.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/platform/contextkey/common/scanner.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/platform/instantiation/common/instantiation.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/platform/contextkey/common/contextkey.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/contrib/notebook/common/services/notebookSimpleWorker.ts"],"names":[],"mappings":"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","file":"notebookSimpleWorker.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\nexport class CounterSet<T> {\n\n\tprivate map = new Map<T, number>();\n\n\tadd(value: T): CounterSet<T> {\n\t\tthis.map.set(value, (this.map.get(value) || 0) + 1);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\tlet counter = this.map.get(value) || 0;\n\n\t\tif (counter === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcounter--;\n\n\t\tif (counter === 0) {\n\t\t\tthis.map.delete(value);\n\t\t} else {\n\t\t\tthis.map.set(value, counter);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this.map.has(value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): IDisposable {\n\tlet destroyed = false;\n\n\tstream.on('error', error => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n\n\treturn toDisposable(() => destroyed = true);\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from 'vs/base/common/lazy';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n\n\tindexOf(subarray: VSBuffer | Uint8Array, offset = 0) {\n\t\treturn binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n\t}\n}\n\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack: Uint8Array, needle: Uint8Array, offset = 0): number {\n\tconst needleLen = needle.byteLength;\n\tconst haystackLen = haystack.byteLength;\n\n\tif (needleLen === 0) {\n\t\treturn 0;\n\t}\n\n\tif (needleLen === 1) {\n\t\treturn haystack.indexOf(needle[0]);\n\t}\n\n\tif (needleLen > haystackLen - offset) {\n\t\treturn -1;\n\t}\n\n\t// find index of the subarray using boyer-moore-horspool algorithm\n\tconst table = indexOfTable.value;\n\ttable.fill(needle.length);\n\tfor (let i = 0; i < needle.length; i++) {\n\t\ttable[needle[i]] = needle.length - i - 1;\n\t}\n\n\tlet i = offset + needle.length - 1;\n\tlet j = i;\n\tlet result = -1;\n\twhile (i < haystackLen) {\n\t\tif (haystack[i] === needle[j]) {\n\t\t\tif (j === 0) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti--;\n\t\t\tj--;\n\t\t} else {\n\t\t\ti += Math.max(needle.length - j, table[haystack[i]]);\n\t\t\tj = needle.length - 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Piece, PieceTreeBase } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\n\nexport class TreeNode {\n\tparent: TreeNode;\n\tleft: TreeNode;\n\tright: TreeNode;\n\tcolor: NodeColor;\n\n\t// Piece\n\tpiece: Piece;\n\tsize_left: number; // size of the left subtree (not inorder)\n\tlf_left: number; // line feeds cnt in the left subtree (not in order)\n\n\tconstructor(piece: Piece, color: NodeColor) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.size_left = 0;\n\t\tthis.lf_left = 0;\n\t\tthis.parent = this;\n\t\tthis.left = this;\n\t\tthis.right = this;\n\t}\n\n\tpublic next(): TreeNode {\n\t\tif (this.right !== SENTINEL) {\n\t\t\treturn leftest(this.right);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.left === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic prev(): TreeNode {\n\t\tif (this.left !== SENTINEL) {\n\t\t\treturn righttest(this.left);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic detach(): void {\n\t\tthis.parent = null!;\n\t\tthis.left = null!;\n\t\tthis.right = null!;\n\t}\n}\n\nexport const enum NodeColor {\n\tBlack = 0,\n\tRed = 1,\n}\n\nexport const SENTINEL: TreeNode = new TreeNode(null!, NodeColor.Black);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = NodeColor.Black;\n\nexport function leftest(node: TreeNode): TreeNode {\n\twhile (node.left !== SENTINEL) {\n\t\tnode = node.left;\n\t}\n\treturn node;\n}\n\nexport function righttest(node: TreeNode): TreeNode {\n\twhile (node.right !== SENTINEL) {\n\t\tnode = node.right;\n\t}\n\treturn node;\n}\n\nfunction calculateSize(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.size_left + node.piece.length + calculateSize(node.right);\n}\n\nfunction calculateLF(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\n\nfunction resetSentinel(): void {\n\tSENTINEL.parent = SENTINEL;\n}\n\nexport function leftRotate(tree: PieceTreeBase, x: TreeNode) {\n\tconst y = x.right;\n\n\t// fix size_left\n\ty.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\tx.right = y.left;\n\n\tif (y.left !== SENTINEL) {\n\t\ty.left.parent = x;\n\t}\n\ty.parent = x.parent;\n\tif (x.parent === SENTINEL) {\n\t\ttree.root = y;\n\t} else if (x.parent.left === x) {\n\t\tx.parent.left = y;\n\t} else {\n\t\tx.parent.right = y;\n\t}\n\ty.left = x;\n\tx.parent = y;\n}\n\nexport function rightRotate(tree: PieceTreeBase, y: TreeNode) {\n\tconst x = y.left;\n\ty.left = x.right;\n\tif (x.right !== SENTINEL) {\n\t\tx.right.parent = y;\n\t}\n\tx.parent = y.parent;\n\n\t// fix size_left\n\ty.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\n\tif (y.parent === SENTINEL) {\n\t\ttree.root = x;\n\t} else if (y === y.parent.right) {\n\t\ty.parent.right = x;\n\t} else {\n\t\ty.parent.left = x;\n\t}\n\n\tx.right = y;\n\ty.parent = x;\n}\n\nexport function rbDelete(tree: PieceTreeBase, z: TreeNode) {\n\tlet x: TreeNode;\n\tlet y: TreeNode;\n\n\tif (z.left === SENTINEL) {\n\t\ty = z;\n\t\tx = y.right;\n\t} else if (z.right === SENTINEL) {\n\t\ty = z;\n\t\tx = y.left;\n\t} else {\n\t\ty = leftest(z.right);\n\t\tx = y.right;\n\t}\n\n\tif (y === tree.root) {\n\t\ttree.root = x;\n\n\t\t// if x is null, we are removing the only node\n\t\tx.color = NodeColor.Black;\n\t\tz.detach();\n\t\tresetSentinel();\n\t\ttree.root.parent = SENTINEL;\n\n\t\treturn;\n\t}\n\n\tconst yWasRed = (y.color === NodeColor.Red);\n\n\tif (y === y.parent.left) {\n\t\ty.parent.left = x;\n\t} else {\n\t\ty.parent.right = x;\n\t}\n\n\tif (y === z) {\n\t\tx.parent = y.parent;\n\t\trecomputeTreeMetadata(tree, x);\n\t} else {\n\t\tif (y.parent === z) {\n\t\t\tx.parent = y;\n\t\t} else {\n\t\t\tx.parent = y.parent;\n\t\t}\n\n\t\t// as we make changes to x's hierarchy, update size_left of subtree first\n\t\trecomputeTreeMetadata(tree, x);\n\n\t\ty.left = z.left;\n\t\ty.right = z.right;\n\t\ty.parent = z.parent;\n\t\ty.color = z.color;\n\n\t\tif (z === tree.root) {\n\t\t\ttree.root = y;\n\t\t} else {\n\t\t\tif (z === z.parent.left) {\n\t\t\t\tz.parent.left = y;\n\t\t\t} else {\n\t\t\t\tz.parent.right = y;\n\t\t\t}\n\t\t}\n\n\t\tif (y.left !== SENTINEL) {\n\t\t\ty.left.parent = y;\n\t\t}\n\t\tif (y.right !== SENTINEL) {\n\t\t\ty.right.parent = y;\n\t\t}\n\t\t// update metadata\n\t\t// we replace z with y, so in this sub tree, the length change is z.item.length\n\t\ty.size_left = z.size_left;\n\t\ty.lf_left = z.lf_left;\n\t\trecomputeTreeMetadata(tree, y);\n\t}\n\n\tz.detach();\n\n\tif (x.parent.left === x) {\n\t\tconst newSizeLeft = calculateSize(x);\n\t\tconst newLFLeft = calculateLF(x);\n\t\tif (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n\t\t\tconst delta = newSizeLeft - x.parent.size_left;\n\t\t\tconst lf_delta = newLFLeft - x.parent.lf_left;\n\t\t\tx.parent.size_left = newSizeLeft;\n\t\t\tx.parent.lf_left = newLFLeft;\n\t\t\tupdateTreeMetadata(tree, x.parent, delta, lf_delta);\n\t\t}\n\t}\n\n\trecomputeTreeMetadata(tree, x.parent);\n\n\tif (yWasRed) {\n\t\tresetSentinel();\n\t\treturn;\n\t}\n\n\t// RB-DELETE-FIXUP\n\tlet w: TreeNode;\n\twhile (x !== tree.root && x.color === NodeColor.Black) {\n\t\tif (x === x.parent.left) {\n\t\t\tw = x.parent.right;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tw = x.parent.right;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\t\t\t} else {\n\t\t\t\tif (w.right.color === NodeColor.Black) {\n\t\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\trightRotate(tree, w);\n\t\t\t\t\tw = x.parent.right;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t} else {\n\t\t\tw = x.parent.left;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tw = x.parent.left;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\n\t\t\t} else {\n\t\t\t\tif (w.left.color === NodeColor.Black) {\n\t\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\tleftRotate(tree, w);\n\t\t\t\t\tw = x.parent.left;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t}\n\t}\n\tx.color = NodeColor.Black;\n\tresetSentinel();\n}\n\nexport function fixInsert(tree: PieceTreeBase, x: TreeNode) {\n\trecomputeTreeMetadata(tree, x);\n\n\twhile (x !== tree.root && x.parent.color === NodeColor.Red) {\n\t\tif (x.parent === x.parent.parent.left) {\n\t\t\tconst y = x.parent.parent.right;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.right) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\tleftRotate(tree, x);\n\t\t\t\t}\n\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t} else {\n\t\t\tconst y = x.parent.parent.left;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.left) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\trightRotate(tree, x);\n\t\t\t\t}\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t}\n\t}\n\n\ttree.root.color = NodeColor.Black;\n}\n\nexport function updateTreeMetadata(tree: PieceTreeBase, x: TreeNode, delta: number, lineFeedCntDelta: number): void {\n\t// node length change or line feed count change\n\twhile (x !== tree.root && x !== SENTINEL) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lineFeedCntDelta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n\nexport function recomputeTreeMetadata(tree: PieceTreeBase, x: TreeNode) {\n\tlet delta = 0;\n\tlet lf_delta = 0;\n\tif (x === tree.root) {\n\t\treturn;\n\t}\n\n\t// go upwards till the node whose left subtree is changed.\n\twhile (x !== tree.root && x === x.parent.right) {\n\t\tx = x.parent;\n\t}\n\n\tif (x === tree.root) {\n\t\t// well, it means we add a node to the end (inorder)\n\t\treturn;\n\t}\n\n\t// x is the node whose right subtree is changed.\n\tx = x.parent;\n\n\tdelta = calculateSize(x.left) - x.size_left;\n\tlf_delta = calculateLF(x.left) - x.lf_left;\n\tx.size_left += delta;\n\tx.lf_left += lf_delta;\n\n\n\t// go upwards till root. O(logN)\n\twhile (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lf_delta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, ITextSnapshot, SearchData } from 'vs/editor/common/model';\nimport { NodeColor, SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from 'vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase';\nimport { Searcher, createFindMatch, isValidMatch } from 'vs/editor/common/model/textModelSearch';\n\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nconst AverageBufferSize = 65535;\n\nfunction createUintArray(arr: number[]): Uint32Array | Uint16Array {\n\tlet r;\n\tif (arr[arr.length - 1] < 65536) {\n\t\tr = new Uint16Array(arr.length);\n\t} else {\n\t\tr = new Uint32Array(arr.length);\n\t}\n\tr.set(arr, 0);\n\treturn r;\n}\n\nclass LineStarts {\n\tconstructor(\n\t\tpublic readonly lineStarts: Uint32Array | Uint16Array | number[],\n\t\tpublic readonly cr: number,\n\t\tpublic readonly lf: number,\n\t\tpublic readonly crlf: number,\n\t\tpublic readonly isBasicASCII: boolean\n\t) { }\n}\n\nexport function createLineStartsFast(str: string, readonly: boolean = true): Uint32Array | Uint16Array | number[] {\n\tconst r: number[] = [0];\n\tlet rLength = 1;\n\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tr[rLength++] = i + 1;\n\t\t}\n\t}\n\tif (readonly) {\n\t\treturn createUintArray(r);\n\t} else {\n\t\treturn r;\n\t}\n}\n\nexport function createLineStarts(r: number[], str: string): LineStarts {\n\tr.length = 0;\n\tr[0] = 0;\n\tlet rLength = 1;\n\tlet cr = 0, lf = 0, crlf = 0;\n\tlet isBasicASCII = true;\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tcrlf++;\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\tcr++;\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tlf++;\n\t\t\tr[rLength++] = i + 1;\n\t\t} else {\n\t\t\tif (isBasicASCII) {\n\t\t\t\tif (chr !== CharCode.Tab && (chr < 32 || chr > 126)) {\n\t\t\t\t\tisBasicASCII = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n\tr.length = 0;\n\n\treturn result;\n}\n\ninterface NodePosition {\n\t/**\n\t * Piece Index\n\t */\n\tnode: TreeNode;\n\t/**\n\t * remainder in current piece.\n\t*/\n\tremainder: number;\n\t/**\n\t * node start offset in document.\n\t */\n\tnodeStartOffset: number;\n}\n\ninterface BufferCursor {\n\t/**\n\t * Line number in current buffer\n\t */\n\tline: number;\n\t/**\n\t * Column number in current buffer\n\t */\n\tcolumn: number;\n}\n\nexport class Piece {\n\treadonly bufferIndex: number;\n\treadonly start: BufferCursor;\n\treadonly end: BufferCursor;\n\treadonly length: number;\n\treadonly lineFeedCnt: number;\n\n\tconstructor(bufferIndex: number, start: BufferCursor, end: BufferCursor, lineFeedCnt: number, length: number) {\n\t\tthis.bufferIndex = bufferIndex;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.lineFeedCnt = lineFeedCnt;\n\t\tthis.length = length;\n\t}\n}\n\nexport class StringBuffer {\n\tbuffer: string;\n\tlineStarts: Uint32Array | Uint16Array | number[];\n\n\tconstructor(buffer: string, lineStarts: Uint32Array | Uint16Array | number[]) {\n\t\tthis.buffer = buffer;\n\t\tthis.lineStarts = lineStarts;\n\t}\n}\n\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot implements ITextSnapshot {\n\tprivate readonly _pieces: Piece[];\n\tprivate _index: number;\n\tprivate readonly _tree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\n\tconstructor(tree: PieceTreeBase, BOM: string) {\n\t\tthis._pieces = [];\n\t\tthis._tree = tree;\n\t\tthis._BOM = BOM;\n\t\tthis._index = 0;\n\t\tif (tree.root !== SENTINEL) {\n\t\t\ttree.iterate(tree.root, node => {\n\t\t\t\tif (node !== SENTINEL) {\n\t\t\t\t\tthis._pieces.push(node.piece);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\tread(): string | null {\n\t\tif (this._pieces.length === 0) {\n\t\t\tif (this._index === 0) {\n\t\t\t\tthis._index++;\n\t\t\t\treturn this._BOM;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this._index > this._pieces.length - 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._index === 0) {\n\t\t\treturn this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n\t\t}\n\t\treturn this._tree.getPieceContent(this._pieces[this._index++]);\n\t}\n}\n\ninterface CacheEntry {\n\tnode: TreeNode;\n\tnodeStartOffset: number;\n\tnodeStartLineNumber?: number;\n}\n\nclass PieceTreeSearchCache {\n\tprivate readonly _limit: number;\n\tprivate _cache: CacheEntry[];\n\n\tconstructor(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis._cache = [];\n\t}\n\n\tpublic get(offset: number): CacheEntry | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n\t\t\t\treturn nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get2(lineNumber: number): { node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number } | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n\t\t\t\treturn <{ node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number }>nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(nodePosition: CacheEntry) {\n\t\tif (this._cache.length >= this._limit) {\n\t\t\tthis._cache.shift();\n\t\t}\n\t\tthis._cache.push(nodePosition);\n\t}\n\n\tpublic validate(offset: number) {\n\t\tlet hasInvalidVal = false;\n\t\tconst tmp: Array<CacheEntry | null> = this._cache;\n\t\tfor (let i = 0; i < tmp.length; i++) {\n\t\t\tconst nodePos = tmp[i]!;\n\t\t\tif (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n\t\t\t\ttmp[i] = null;\n\t\t\t\thasInvalidVal = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (hasInvalidVal) {\n\t\t\tconst newArr: CacheEntry[] = [];\n\t\t\tfor (const entry of tmp) {\n\t\t\t\tif (entry !== null) {\n\t\t\t\t\tnewArr.push(entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cache = newArr;\n\t\t}\n\t}\n}\n\nexport class PieceTreeBase {\n\troot!: TreeNode;\n\tprotected _buffers!: StringBuffer[]; // 0 is change buffer, others are readonly original buffer.\n\tprotected _lineCnt!: number;\n\tprotected _length!: number;\n\tprotected _EOL!: '\\r\\n' | '\\n';\n\tprotected _EOLLength!: number;\n\tprotected _EOLNormalized!: boolean;\n\tprivate _lastChangeBufferPos!: BufferCursor;\n\tprivate _searchCache!: PieceTreeSearchCache;\n\tprivate _lastVisitedLine!: { lineNumber: number; value: string };\n\n\tconstructor(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis.create(chunks, eol, eolNormalized);\n\t}\n\n\tcreate(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis._buffers = [\n\t\t\tnew StringBuffer('', [0])\n\t\t];\n\t\tthis._lastChangeBufferPos = { line: 0, column: 0 };\n\t\tthis.root = SENTINEL;\n\t\tthis._lineCnt = 1;\n\t\tthis._length = 0;\n\t\tthis._EOL = eol;\n\t\tthis._EOLLength = eol.length;\n\t\tthis._EOLNormalized = eolNormalized;\n\n\t\tlet lastNode: TreeNode | null = null;\n\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\tif (chunks[i].buffer.length > 0) {\n\t\t\t\tif (!chunks[i].lineStarts) {\n\t\t\t\t\tchunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n\t\t\t\t}\n\n\t\t\t\tconst piece = new Piece(\n\t\t\t\t\ti + 1,\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] },\n\t\t\t\t\tchunks[i].lineStarts.length - 1,\n\t\t\t\t\tchunks[i].buffer.length\n\t\t\t\t);\n\t\t\t\tthis._buffers.push(chunks[i]);\n\t\t\t\tlastNode = this.rbInsertRight(lastNode, piece);\n\t\t\t}\n\t\t}\n\n\t\tthis._searchCache = new PieceTreeSearchCache(1);\n\t\tthis._lastVisitedLine = { lineNumber: 0, value: '' };\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tnormalizeEOL(eol: '\\r\\n' | '\\n') {\n\t\tconst averageBufferSize = AverageBufferSize;\n\t\tconst min = averageBufferSize - Math.floor(averageBufferSize / 3);\n\t\tconst max = min * 2;\n\n\t\tlet tempChunk = '';\n\t\tlet tempChunkLen = 0;\n\t\tconst chunks: StringBuffer[] = [];\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tif (tempChunkLen <= min || tempChunkLen + len < max) {\n\t\t\t\ttempChunk += str;\n\t\t\t\ttempChunkLen += len;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// flush anyways\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t\ttempChunk = str;\n\t\t\ttempChunkLen = len;\n\t\t\treturn true;\n\t\t});\n\n\t\tif (tempChunkLen > 0) {\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t}\n\n\t\tthis.create(chunks, eol, true);\n\t}\n\n\t// #region Buffer API\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._EOL = newEOL;\n\t\tthis._EOLLength = this._EOL.length;\n\t\tthis.normalizeEOL(newEOL);\n\t}\n\n\tpublic createSnapshot(BOM: string): ITextSnapshot {\n\t\treturn new PieceTreeSnapshot(this, BOM);\n\t}\n\n\tpublic equal(other: PieceTreeBase): boolean {\n\t\tif (this.getLength() !== other.getLength()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getLineCount() !== other.getLineCount()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet offset = 0;\n\t\tconst ret = this.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tconst startPosition = other.nodeAt(offset);\n\t\t\tconst endPosition = other.nodeAt(offset + len);\n\t\t\tconst val = other.getValueInRange2(startPosition, endPosition);\n\n\t\t\toffset += len;\n\t\t\treturn str === val;\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\tlet leftLen = 0; // inorder\n\n\t\tlet x = this.root;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n\t\t\t\tleftLen += x.size_left;\n\t\t\t\t// lineNumber >= 2\n\t\t\t\tconst accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\treturn leftLen += accumualtedValInCurrentIndex + column - 1;\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tleftLen += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn leftLen;\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tlet x = this.root;\n\t\tlet lfCnt = 0;\n\t\tconst originalOffset = offset;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left !== 0 && x.size_left >= offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tconst out = this.getIndexOf(x, offset - x.size_left);\n\n\t\t\t\tlfCnt += x.lf_left + out.index;\n\n\t\t\t\tif (out.index === 0) {\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t}\n\n\t\t\t\treturn new Position(lfCnt + 1, out.remainder + 1);\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\n\t\t\t\tif (x.right === SENTINEL) {\n\t\t\t\t\t// last node\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - offset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t} else {\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(1, 1);\n\t}\n\n\tpublic getValueInRange(range: Range, eol?: string): string {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n\t\tconst endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n\n\t\tconst value = this.getValueInRange2(startPosition, endPosition);\n\t\tif (eol) {\n\t\t\tif (eol !== this._EOL || !this._EOLNormalized) {\n\t\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t}\n\n\t\t\tif (eol === this.getEOL() && this._EOLNormalized) {\n\t\t\t\tif (eol === '\\r\\n') {\n\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic getValueInRange2(startPosition: NodePosition, endPosition: NodePosition): string {\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tconst node = startPosition.node;\n\t\t\tconst buffer = this._buffers[node.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\t\treturn buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n\t\t}\n\n\t\tlet x = startPosition.node;\n\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\tlet ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\tif (x === endPosition.node) {\n\t\t\t\tret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tconst lines: string[] = [];\n\t\tlet linesLength = 0;\n\t\tlet currentLine = '';\n\t\tlet danglingCR = false;\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst piece = node.piece;\n\t\t\tlet pieceLength = piece.length;\n\t\t\tif (pieceLength === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[piece.bufferIndex].buffer;\n\t\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\n\t\t\tconst pieceStartLine = piece.start.line;\n\t\t\tconst pieceEndLine = piece.end.line;\n\t\t\tlet pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n\n\t\t\tif (danglingCR) {\n\t\t\t\tif (buffer.charCodeAt(pieceStartOffset) === CharCode.LineFeed) {\n\t\t\t\t\t// pretend the \\n was in the previous piece..\n\t\t\t\t\tpieceStartOffset++;\n\t\t\t\t\tpieceLength--;\n\t\t\t\t}\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t\tcurrentLine = '';\n\t\t\t\tdanglingCR = false;\n\t\t\t\tif (pieceLength === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pieceStartLine === pieceEndLine) {\n\t\t\t\t// this piece has no new lines\n\t\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === CharCode.CarriageReturn) {\n\t\t\t\t\tdanglingCR = true;\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// add the text before the first line start in this piece\n\t\t\tcurrentLine += (\n\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n\t\t\t\t\t: buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t);\n\t\t\tlines[linesLength++] = currentLine;\n\n\t\t\tfor (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n\t\t\t\tcurrentLine = (\n\t\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t\t? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n\t\t\t\t\t\t: buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t\t);\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t}\n\n\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === CharCode.CarriageReturn) {\n\t\t\t\tdanglingCR = true;\n\t\t\t\tif (piece.end.column === 0) {\n\t\t\t\t\t// The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n\t\t\t\t\tlinesLength--;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (danglingCR) {\n\t\t\tlines[linesLength++] = currentLine;\n\t\t\tcurrentLine = '';\n\t\t}\n\n\t\tlines[linesLength++] = currentLine;\n\t\treturn lines;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._length;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lineCnt;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._lastVisitedLine.lineNumber === lineNumber) {\n\t\t\treturn this._lastVisitedLine.value;\n\t\t}\n\n\t\tthis._lastVisitedLine.lineNumber = lineNumber;\n\n\t\tif (lineNumber === this._lineCnt) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n\t\t} else if (this._EOLNormalized) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n\t\t} else {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n\t\t}\n\n\t\treturn this._lastVisitedLine.value;\n\t}\n\n\tprivate _getCharCode(nodePos: NodePosition): number {\n\t\tif (nodePos.remainder === nodePos.node.piece.length) {\n\t\t\t// the char we want to fetch is at the head of next node.\n\t\t\tconst matchingNode = nodePos.node.next();\n\t\t\tif (!matchingNode) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[matchingNode.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n\t\t\treturn buffer.buffer.charCodeAt(startOffset);\n\t\t} else {\n\t\t\tconst buffer = this._buffers[nodePos.node.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n\t\t\tconst targetOffset = startOffset + nodePos.remainder;\n\n\t\t\treturn buffer.buffer.charCodeAt(targetOffset);\n\t\t}\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\tconst nodePos = this.nodeAt2(lineNumber, index + 1);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tif (lineNumber === this.getLineCount()) {\n\t\t\tconst startOffset = this.getOffsetAt(lineNumber, 1);\n\t\t\treturn this.getLength() - startOffset;\n\t\t}\n\t\treturn this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\tconst nodePos = this.nodeAt(offset);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic findMatchesInNode(node: TreeNode, searcher: Searcher, startLineNumber: number, startColumn: number, startCursor: BufferCursor, endCursor: BufferCursor, searchData: SearchData, captureMatches: boolean, limitResultCount: number, resultLen: number, result: FindMatch[]) {\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\tconst start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n\t\tconst end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tconst ret: BufferCursor = { line: 0, column: 0 };\n\t\tlet searchText: string;\n\t\tlet offsetInBuffer: (offset: number) => number;\n\n\t\tif (searcher._wordSeparators) {\n\t\t\tsearchText = buffer.buffer.substring(start, end);\n\t\t\toffsetInBuffer = (offset: number) => offset + start;\n\t\t\tsearcher.reset(0);\n\t\t} else {\n\t\t\tsearchText = buffer.buffer;\n\t\t\toffsetInBuffer = (offset: number) => offset;\n\t\t\tsearcher.reset(start);\n\t\t}\n\n\t\tdo {\n\t\t\tm = searcher.next(searchText);\n\n\t\t\tif (m) {\n\t\t\t\tif (offsetInBuffer(m.index) >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tthis.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n\t\t\t\tconst lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n\t\t\t\tconst retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n\t\t\t\tconst retEndColumn = retStartColumn + m[0].length;\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n\n\t\t\t\tif (offsetInBuffer(m.index) + m[0].length >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn resultLen;\n\t}\n\n\tpublic findMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tlet startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n\t\tif (startPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n\t\tif (endPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tlet start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\tconst end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tthis.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\t\treturn result;\n\t\t}\n\n\t\tlet startLineNumber = searchRange.startLineNumber;\n\n\t\tlet currentNode = startPosition.node;\n\t\twhile (currentNode !== endPosition.node) {\n\t\t\tconst lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n\n\t\t\tif (lineBreakCnt >= 1) {\n\t\t\t\t// last line break position\n\t\t\t\tconst lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n\t\t\t\tconst startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n\t\t\t\tconst nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n\t\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\t\t\tresultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tstartLineNumber += lineBreakCnt;\n\t\t\t}\n\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\t// search for the remaining content\n\t\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\n\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tstartLineNumber++;\n\t\t\tstartPosition = this.nodeAt2(startLineNumber, 1);\n\t\t\tcurrentNode = startPosition.node;\n\t\t\tstart = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\t}\n\n\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\tresultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\treturn result;\n\t}\n\n\tprivate _findMatchesInLine(searchData: SearchData, searcher: Searcher, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\t// #endregion\n\n\t// #region Piece Table\n\tpublic insert(offset: number, value: string, eolNormalized: boolean = false): void {\n\t\tthis._EOLNormalized = this._EOLNormalized && eolNormalized;\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (this.root !== SENTINEL) {\n\t\t\tconst { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n\t\t\tconst piece = node.piece;\n\t\t\tconst bufferIndex = piece.bufferIndex;\n\t\t\tconst insertPosInBuffer = this.positionInBuffer(node, remainder);\n\t\t\tif (node.piece.bufferIndex === 0 &&\n\t\t\t\tpiece.end.line === this._lastChangeBufferPos.line &&\n\t\t\t\tpiece.end.column === this._lastChangeBufferPos.column &&\n\t\t\t\t(nodeStartOffset + piece.length === offset) &&\n\t\t\t\tvalue.length < AverageBufferSize\n\t\t\t) {\n\t\t\t\t// changed buffer\n\t\t\t\tthis.appendToNode(node, value);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (nodeStartOffset === offset) {\n\t\t\t\tthis.insertContentToNodeLeft(value, node);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t} else if (nodeStartOffset + node.piece.length > offset) {\n\t\t\t\t// we are inserting into the middle of a node.\n\t\t\t\tconst nodesToDel: TreeNode[] = [];\n\t\t\t\tlet newRightPiece = new Piece(\n\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\tinsertPosInBuffer,\n\t\t\t\t\tpiece.end,\n\t\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end),\n\t\t\t\t\tthis.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer)\n\t\t\t\t);\n\n\t\t\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\t\t\tconst headOfRight = this.nodeCharCodeAt(node, remainder);\n\n\t\t\t\t\tif (headOfRight === 10 /** \\n */) {\n\t\t\t\t\t\tconst newStart: BufferCursor = { line: newRightPiece.start.line + 1, column: 0 };\n\t\t\t\t\t\tnewRightPiece = new Piece(\n\t\t\t\t\t\t\tnewRightPiece.bufferIndex,\n\t\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\t\tnewRightPiece.end,\n\t\t\t\t\t\t\tthis.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end),\n\t\t\t\t\t\t\tnewRightPiece.length - 1\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvalue += '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reuse node for content before insertion point.\n\t\t\t\tif (this.shouldCheckCRLF() && this.startWithLF(value)) {\n\t\t\t\t\tconst tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n\t\t\t\t\tif (tailOfLeft === 13 /** \\r */) {\n\t\t\t\t\t\tconst previousPos = this.positionInBuffer(node, remainder - 1);\n\t\t\t\t\t\tthis.deleteNodeTail(node, previousPos);\n\t\t\t\t\t\tvalue = '\\r' + value;\n\n\t\t\t\t\t\tif (node.piece.length === 0) {\n\t\t\t\t\t\t\tnodesToDel.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t}\n\n\t\t\t\tconst newPieces = this.createNewPieces(value);\n\t\t\t\tif (newRightPiece.length > 0) {\n\t\t\t\t\tthis.rbInsertRight(node, newRightPiece);\n\t\t\t\t}\n\n\t\t\t\tlet tmpNode = node;\n\t\t\t\tfor (let k = 0; k < newPieces.length; k++) {\n\t\t\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t\t\t}\n\t\t\t\tthis.deleteNodes(nodesToDel);\n\t\t\t} else {\n\t\t\t\tthis.insertContentToNodeRight(value, node);\n\t\t\t}\n\t\t} else {\n\t\t\t// insert new node\n\t\t\tconst pieces = this.createNewPieces(value);\n\t\t\tlet node = this.rbInsertLeft(null, pieces[0]);\n\n\t\t\tfor (let k = 1; k < pieces.length; k++) {\n\t\t\t\tnode = this.rbInsertRight(node, pieces[k]);\n\t\t\t}\n\t\t}\n\n\t\t// todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tpublic delete(offset: number, cnt: number): void {\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (cnt <= 0 || this.root === SENTINEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst startPosition = this.nodeAt(offset);\n\t\tconst endPosition = this.nodeAt(offset + cnt);\n\t\tconst startNode = startPosition.node;\n\t\tconst endNode = endPosition.node;\n\n\t\tif (startNode === endNode) {\n\t\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\t\tconst endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n\n\t\t\tif (startPosition.nodeStartOffset === offset) {\n\t\t\t\tif (cnt === startNode.piece.length) { // delete node\n\t\t\t\t\tconst next = startNode.next();\n\t\t\t\t\trbDelete(this, startNode);\n\t\t\t\t\tthis.validateCRLFWithPrevNode(next);\n\t\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.deleteNodeHead(startNode, endSplitPosInBuffer);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t\tthis.validateCRLFWithPrevNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n\t\t\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\t\t\tthis.validateCRLFWithNextNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// delete content in the middle, this node will be splitted to nodes\n\t\t\tthis.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n\t\t\tthis.computeBufferMetadata();\n\t\t\treturn;\n\t\t}\n\n\t\tconst nodesToDel: TreeNode[] = [];\n\n\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\tthis._searchCache.validate(offset);\n\t\tif (startNode.piece.length === 0) {\n\t\t\tnodesToDel.push(startNode);\n\t\t}\n\n\t\t// update last touched node\n\t\tconst endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n\t\tthis.deleteNodeHead(endNode, endSplitPosInBuffer);\n\t\tif (endNode.piece.length === 0) {\n\t\t\tnodesToDel.push(endNode);\n\t\t}\n\n\t\t// delete nodes in between\n\t\tconst secondNode = startNode.next();\n\t\tfor (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n\t\t\tnodesToDel.push(node);\n\t\t}\n\n\t\tconst prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n\t\tthis.deleteNodes(nodesToDel);\n\t\tthis.validateCRLFWithNextNode(prev);\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tprivate insertContentToNodeLeft(value: string, node: TreeNode) {\n\t\t// we are inserting content to the beginning of node\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n\t\t\t// move `\\n` to new node.\n\n\t\t\tconst piece = node.piece;\n\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\tconst nPiece = new Piece(\n\t\t\t\tpiece.bufferIndex,\n\t\t\t\tnewStart,\n\t\t\t\tpiece.end,\n\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, newStart, piece.end),\n\t\t\t\tpiece.length - 1\n\t\t\t);\n\n\t\t\tnode.piece = nPiece;\n\n\t\t\tvalue += '\\n';\n\t\t\tupdateTreeMetadata(this, node, -1, -1);\n\n\t\t\tif (node.piece.length === 0) {\n\t\t\t\tnodesToDel.push(node);\n\t\t\t}\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tlet newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n\t\tfor (let k = newPieces.length - 2; k >= 0; k--) {\n\t\t\tnewNode = this.rbInsertLeft(newNode, newPieces[k]);\n\t\t}\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t\tthis.deleteNodes(nodesToDel);\n\t}\n\n\tprivate insertContentToNodeRight(value: string, node: TreeNode) {\n\t\t// we are inserting to the right of this node.\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\t// move \\n to the new node.\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tconst newNode = this.rbInsertRight(node, newPieces[0]);\n\t\tlet tmpNode = newNode;\n\n\t\tfor (let k = 1; k < newPieces.length; k++) {\n\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t}\n\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate positionInBuffer(node: TreeNode, remainder: number): BufferCursor;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret: BufferCursor): null;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret?: BufferCursor): BufferCursor | null {\n\t\tconst piece = node.piece;\n\t\tconst bufferIndex = node.piece.bufferIndex;\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\n\t\tconst startOffset = lineStarts[piece.start.line] + piece.start.column;\n\n\t\tconst offset = startOffset + remainder;\n\n\t\t// binary search offset between startOffset and endOffset\n\t\tlet low = piece.start.line;\n\t\tlet high = piece.end.line;\n\n\t\tlet mid: number = 0;\n\t\tlet midStop: number = 0;\n\t\tlet midStart: number = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\t\t\tmidStart = lineStarts[mid];\n\n\t\t\tif (mid === high) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmidStop = lineStarts[mid + 1];\n\n\t\t\tif (offset < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (offset >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret.line = mid;\n\t\t\tret.column = offset - midStart;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tline: mid,\n\t\t\tcolumn: offset - midStart\n\t\t};\n\t}\n\n\tprivate getLineFeedCnt(bufferIndex: number, start: BufferCursor, end: BufferCursor): number {\n\t\t// we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n\t\t// now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n\t\tif (end.column === 0) {\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\tif (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst nextLineStartOffset = lineStarts[end.line + 1];\n\t\tconst endOffset = lineStarts[end.line] + end.column;\n\t\tif (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n\t\t\treturn end.line - start.line;\n\t\t}\n\t\t// endOffset + 1 === nextLineStartOffset\n\t\t// character at endOffset is \\n, so we check the character before first\n\t\t// if character at endOffset is \\r, end.column is 0 and we can't get here.\n\t\tconst previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n\t\tconst buffer = this._buffers[bufferIndex].buffer;\n\n\t\tif (buffer.charCodeAt(previousCharOffset) === 13) {\n\t\t\treturn end.line - start.line + 1;\n\t\t} else {\n\t\t\treturn end.line - start.line;\n\t\t}\n\t}\n\n\tprivate offsetInBuffer(bufferIndex: number, cursor: BufferCursor): number {\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\treturn lineStarts[cursor.line] + cursor.column;\n\t}\n\n\tprivate deleteNodes(nodes: TreeNode[]): void {\n\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\trbDelete(this, nodes[i]);\n\t\t}\n\t}\n\n\tprivate createNewPieces(text: string): Piece[] {\n\t\tif (text.length > AverageBufferSize) {\n\t\t\t// the content is large, operations like substring, charCode becomes slow\n\t\t\t// so here we split it into smaller chunks, just like what we did for CR/LF normalization\n\t\t\tconst newPieces: Piece[] = [];\n\t\t\twhile (text.length > AverageBufferSize) {\n\t\t\t\tconst lastChar = text.charCodeAt(AverageBufferSize - 1);\n\t\t\t\tlet splitText;\n\t\t\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize - 1);\n\t\t\t\t\ttext = text.substring(AverageBufferSize - 1);\n\t\t\t\t} else {\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize);\n\t\t\t\t\ttext = text.substring(AverageBufferSize);\n\t\t\t\t}\n\n\t\t\t\tconst lineStarts = createLineStartsFast(splitText);\n\t\t\t\tnewPieces.push(new Piece(\n\t\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\t\tlineStarts.length - 1,\n\t\t\t\t\tsplitText.length\n\t\t\t\t));\n\t\t\t\tthis._buffers.push(new StringBuffer(splitText, lineStarts));\n\t\t\t}\n\n\t\t\tconst lineStarts = createLineStartsFast(text);\n\t\t\tnewPieces.push(new Piece(\n\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t{ line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\tlineStarts.length - 1,\n\t\t\t\ttext.length\n\t\t\t));\n\t\t\tthis._buffers.push(new StringBuffer(text, lineStarts));\n\n\t\t\treturn newPieces;\n\t\t}\n\n\t\tlet startOffset = this._buffers[0].buffer.length;\n\t\tconst lineStarts = createLineStartsFast(text, false);\n\n\t\tlet start = this._lastChangeBufferPos;\n\t\tif (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n\t\t\t&& startOffset !== 0\n\t\t\t&& this.startWithLF(text)\n\t\t\t&& this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n\t\t) {\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n\t\t\tstart = this._lastChangeBufferPos;\n\n\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\tlineStarts[i] += startOffset + 1;\n\t\t\t}\n\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += '_' + text;\n\t\t\tstartOffset += 1;\n\t\t} else {\n\t\t\tif (startOffset !== 0) {\n\t\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\t\tlineStarts[i] += startOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += text;\n\t\t}\n\n\t\tconst endOffset = this._buffers[0].buffer.length;\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n\t\tconst endPos = { line: endIndex, column: endColumn };\n\t\tconst newPiece = new Piece(\n\t\t\t0, /** todo@peng */\n\t\t\tstart,\n\t\t\tendPos,\n\t\t\tthis.getLineFeedCnt(0, start, endPos),\n\t\t\tendOffset - startOffset\n\t\t);\n\t\tthis._lastChangeBufferPos = endPos;\n\t\treturn [newPiece];\n\t}\n\n\tpublic getLinesRawContent(): string {\n\t\treturn this.getContentOfSubTree(this.root);\n\t}\n\n\tpublic getLineRawContent(lineNumber: number, endOffset: number = 0): string {\n\t\tlet x = this.root;\n\n\t\tlet ret = '';\n\t\tconst cache = this._searchCache.get2(lineNumber);\n\t\tif (cache) {\n\t\t\tx = cache.node;\n\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\tif (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t} else {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t}\n\t\t} else {\n\t\t\tlet nodeStartOffset = 0;\n\t\t\tconst originalLineNumber = lineNumber;\n\t\t\twhile (x !== SENTINEL) {\n\t\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\t\tx = x.left;\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\t\tthis._searchCache.set({\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tnodeStartOffset,\n\t\t\t\t\t\tnodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n\t\t\t\t\t});\n\n\t\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains end column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\tret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate computeBufferMetadata() {\n\t\tlet x = this.root;\n\n\t\tlet lfCnt = 1;\n\t\tlet len = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\t\t\tlen += x.size_left + x.piece.length;\n\t\t\tx = x.right;\n\t\t}\n\n\t\tthis._lineCnt = lfCnt;\n\t\tthis._length = len;\n\t\tthis._searchCache.validate(this._length);\n\t}\n\n\t// #region node operations\n\tprivate getIndexOf(node: TreeNode, accumulatedValue: number): { index: number; remainder: number } {\n\t\tconst piece = node.piece;\n\t\tconst pos = this.positionInBuffer(node, accumulatedValue);\n\t\tconst lineCnt = pos.line - piece.start.line;\n\n\t\tif (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n\t\t\t// we are checking the end of this node, so a CRLF check is necessary.\n\t\t\tconst realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n\t\t\tif (realLineCnt !== lineCnt) {\n\t\t\t\t// aha yes, CRLF\n\t\t\t\treturn { index: realLineCnt, remainder: 0 };\n\t\t\t}\n\t\t}\n\n\t\treturn { index: lineCnt, remainder: pos.column };\n\t}\n\n\tprivate getAccumulatedValue(node: TreeNode, index: number) {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst piece = node.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst expectedLineStartIndex = piece.start.line + index + 1;\n\t\tif (expectedLineStartIndex > piece.end.line) {\n\t\t\treturn lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n\t\t} else {\n\t\t\treturn lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n\t\t}\n\t}\n\n\tprivate deleteNodeTail(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\n\t\tconst newEnd = pos;\n\t\tconst newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = newEndOffset - originalEndOffset;\n\t\tconst newLength = piece.length + size_delta;\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate deleteNodeHead(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\n\t\tconst newStart = pos;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\tconst newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = originalStartOffset - newStartOffset;\n\t\tconst newLength = piece.length + size_delta;\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tpiece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate shrinkNode(node: TreeNode, start: BufferCursor, end: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalStartPos = piece.start;\n\t\tconst originalEndPos = piece.end;\n\n\t\t// old piece, originalStartPos, start\n\t\tconst oldLength = piece.length;\n\t\tconst oldLFCnt = piece.lineFeedCnt;\n\t\tconst newEnd = start;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\t\tconst newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n\n\t\t// new right piece, end, originalEndPos\n\t\tconst newPiece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tend,\n\t\t\toriginalEndPos,\n\t\t\tthis.getLineFeedCnt(piece.bufferIndex, end, originalEndPos),\n\t\t\tthis.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end)\n\t\t);\n\n\t\tconst newNode = this.rbInsertRight(node, newPiece);\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate appendToNode(node: TreeNode, value: string): void {\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n\t\tconst startOffset = this._buffers[0].buffer.length;\n\t\tthis._buffers[0].buffer += value;\n\t\tconst lineStarts = createLineStartsFast(value, false);\n\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\tlineStarts[i] += startOffset;\n\t\t}\n\t\tif (hitCRLF) {\n\t\t\tconst prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n\t\t\t(<number[]>this._buffers[0].lineStarts).pop();\n\t\t\t// _lastChangeBufferPos is already wrong\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n\t\t}\n\n\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n\t\tconst newEnd = { line: endIndex, column: endColumn };\n\t\tconst newLength = node.piece.length + value.length;\n\t\tconst oldLineFeedCnt = node.piece.lineFeedCnt;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n\t\tconst lf_delta = newLineFeedCnt - oldLineFeedCnt;\n\n\t\tnode.piece = new Piece(\n\t\t\tnode.piece.bufferIndex,\n\t\t\tnode.piece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tthis._lastChangeBufferPos = newEnd;\n\t\tupdateTreeMetadata(this, node, value.length, lf_delta);\n\t}\n\n\tprivate nodeAt(offset: number): NodePosition {\n\t\tlet x = this.root;\n\t\tconst cache = this._searchCache.get(offset);\n\t\tif (cache) {\n\t\t\treturn {\n\t\t\t\tnode: cache.node,\n\t\t\t\tnodeStartOffset: cache.nodeStartOffset,\n\t\t\t\tremainder: offset - cache.nodeStartOffset\n\t\t\t};\n\t\t}\n\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left > offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\tconst ret = {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: offset - x.size_left,\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t\tthis._searchCache.set(ret);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeAt2(lineNumber: number, column: number): NodePosition {\n\t\tlet x = this.root;\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\tnodeStartOffset += x.size_left;\n\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tif (prevAccumualtedValue + column - 1 <= x.piece.length) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: prevAccumualtedValue + column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length - prevAccumualtedValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains position.column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (x.piece.length >= column - 1) {\n\t\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeCharCodeAt(node: TreeNode, offset: number): number {\n\t\tif (node.piece.lineFeedCnt < 1) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n\t\treturn buffer.buffer.charCodeAt(newOffset);\n\t}\n\n\tprivate offsetOfNode(node: TreeNode): number {\n\t\tif (!node) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet pos = node.size_left;\n\t\twhile (node !== this.root) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tpos += node.parent.size_left + node.parent.piece.length;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t// #endregion\n\n\t// #region CRLF\n\tprivate shouldCheckCRLF() {\n\t\treturn !(this._EOLNormalized && this._EOL === '\\n');\n\t}\n\n\tprivate startWithLF(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(0) === 10;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst piece = val.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst line = piece.start.line;\n\t\tconst startOffset = lineStarts[line] + piece.start.column;\n\t\tif (line === lineStarts.length - 1) {\n\t\t\t// last line, so there is no line feed at the end of this line\n\t\t\treturn false;\n\t\t}\n\t\tconst nextLineOffset = lineStarts[line + 1];\n\t\tif (nextLineOffset > startOffset + 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n\t}\n\n\tprivate endWithCR(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(val.length - 1) === 13;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n\t}\n\n\tprivate validateCRLFWithPrevNode(nextNode: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n\t\t\tconst node = nextNode.prev();\n\t\t\tif (this.endWithCR(node)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateCRLFWithNextNode(node: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(node)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate fixCRLF(prev: TreeNode, next: TreeNode) {\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\t// update node\n\t\tconst lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n\t\tlet newEnd: BufferCursor;\n\t\tif (prev.piece.end.column === 0) {\n\t\t\t// it means, last line ends with \\r, not \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n\t\t} else {\n\t\t\t// \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n\t\t}\n\n\t\tconst prevNewLength = prev.piece.length - 1;\n\t\tconst prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n\t\tprev.piece = new Piece(\n\t\t\tprev.piece.bufferIndex,\n\t\t\tprev.piece.start,\n\t\t\tnewEnd,\n\t\t\tprevNewLFCnt,\n\t\t\tprevNewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, prev, - 1, -1);\n\t\tif (prev.piece.length === 0) {\n\t\t\tnodesToDel.push(prev);\n\t\t}\n\n\t\t// update nextNode\n\t\tconst newStart: BufferCursor = { line: next.piece.start.line + 1, column: 0 };\n\t\tconst newLength = next.piece.length - 1;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n\t\tnext.piece = new Piece(\n\t\t\tnext.piece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tnext.piece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, next, - 1, -1);\n\t\tif (next.piece.length === 0) {\n\t\t\tnodesToDel.push(next);\n\t\t}\n\n\t\t// create new piece which contains \\r\\n\n\t\tconst pieces = this.createNewPieces('\\r\\n');\n\t\tthis.rbInsertRight(prev, pieces[0]);\n\t\t// delete empty nodes\n\n\t\tfor (let i = 0; i < nodesToDel.length; i++) {\n\t\t\trbDelete(this, nodesToDel[i]);\n\t\t}\n\t}\n\n\tprivate adjustCarriageReturnFromNext(value: string, node: TreeNode): boolean {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\t// move `\\n` forward\n\t\t\t\tvalue += '\\n';\n\n\t\t\t\tif (nextNode.piece.length === 1) {\n\t\t\t\t\trbDelete(this, nextNode);\n\t\t\t\t} else {\n\n\t\t\t\t\tconst piece = nextNode.piece;\n\t\t\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\t\t\tconst newLength = piece.length - 1;\n\t\t\t\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\t\t\t\tnextNode.piece = new Piece(\n\t\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\tpiece.end,\n\t\t\t\t\t\tnewLineFeedCnt,\n\t\t\t\t\t\tnewLength\n\t\t\t\t\t);\n\n\t\t\t\t\tupdateTreeMetadata(this, nextNode, -1, -1);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region Tree operations\n\titerate(node: TreeNode, callback: (node: TreeNode) => boolean): boolean {\n\t\tif (node === SENTINEL) {\n\t\t\treturn callback(SENTINEL);\n\t\t}\n\n\t\tconst leftRet = this.iterate(node.left, callback);\n\t\tif (!leftRet) {\n\t\t\treturn leftRet;\n\t\t}\n\n\t\treturn callback(node) && this.iterate(node.right, callback);\n\t}\n\n\tprivate getNodeContent(node: TreeNode) {\n\t\tif (node === SENTINEL) {\n\t\t\treturn '';\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst piece = node.piece;\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\tgetPieceContent(piece: Piece) {\n\t\tconst buffer = this._buffers[piece.bufferIndex];\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b    <----   a    b\n\t *                         /\n\t *                        z\n\t */\n\tprivate rbInsertRight(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tconst x = this.root;\n\t\tif (x === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.right === SENTINEL) {\n\t\t\tnode!.right = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst nextNode = leftest(node!.right);\n\t\t\tnextNode.left = z;\n\t\t\tz.parent = nextNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b     ---->   a    b\n\t *                       \\\n\t *                        z\n\t */\n\tprivate rbInsertLeft(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tif (this.root === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.left === SENTINEL) {\n\t\t\tnode!.left = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst prevNode = righttest(node!.left); // a\n\t\t\tprevNode.right = z;\n\t\t\tz.parent = prevNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\tprivate getContentOfSubTree(node: TreeNode): string {\n\t\tlet str = '';\n\n\t\tthis.iterate(node, node => {\n\t\t\tstr += this.getNodeContent(node);\n\t\t\treturn true;\n\t\t});\n\n\t\treturn str;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extname } from 'vs/base/common/path';\n\nexport const Mimes = Object.freeze({\n\ttext: 'text/plain',\n\tbinary: 'application/octet-stream',\n\tunknown: 'application/unknown',\n\tmarkdown: 'text/markdown',\n\tlatex: 'text/latex',\n\turiList: 'text/uri-list',\n});\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.opus': 'audio/opus',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _remoteResourcesPath: string = `/${Schemas.vscodeRemoteResource}`;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(serverRootPath: string): void {\n\t\tthis._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { MicrotaskDelay } from './symbols';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises resolves or rejects and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\ttry {\n\t\tconst result = await Promise.race(promises);\n\t\treturn result;\n\t} finally {\n\t\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\t\tif (index !== resolvedPromiseIndex) {\n\t\t\t\tcancellablePromise.cancel();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler implements IDisposable {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tprivate isDisposed = false;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.isDisposed) {\n\t\t\tthrow new Error('Throttler is disposed');\n\t\t}\n\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tif (this.isDisposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t\tthis.throttler.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T>{\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t * An event that fires when every promise in the queue\n\t * has started to execute. In other words: no work is\n\t * pending to be scheduled.\n\t *\n\t * This is NOT an event that signals when all promises\n\t * have finished though.\n\t */\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): ILimiter<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface INextTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithNextTask {\n\treadonly next: INextTask;\n}\n\nexport class TaskSequentializer {\n\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: INextTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending?.promise;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n\n\thasNext(): this is ITaskSequentializerWithNextTask {\n\t\treturn !!this._next;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._next?.promise ?? this._pending?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate outcome?: { outcome: DeferredOutcome.Rejected; value: any } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.outcome;\n\t}\n\n\tpublic get value() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\treturn this.error(new CancellationError());\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { isThenable } from 'vs/base/common/async';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { LRUCache } from 'vs/base/common/map';\nimport { basename, extname, posix, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters, ltrim } from 'vs/base/common/strings';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\t// For that we try to extract the portion of the `path`\n\t\t// that comes after the `base` portion. We have to account\n\t\t// for the fact that `base` might end in a path separator\n\t\t// (https://github.com/microsoft/vscode/issues/162498)\n\n\t\treturn parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', () => name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as platform from 'vs/base/common/platform';\nimport * as buffer from 'vs/base/common/buffer';\n\nlet _utf16LE_TextDecoder: TextDecoder | null;\nfunction getUTF16LE_TextDecoder(): TextDecoder {\n\tif (!_utf16LE_TextDecoder) {\n\t\t_utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n\t}\n\treturn _utf16LE_TextDecoder;\n}\n\nlet _utf16BE_TextDecoder: TextDecoder | null;\nfunction getUTF16BE_TextDecoder(): TextDecoder {\n\tif (!_utf16BE_TextDecoder) {\n\t\t_utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n\t}\n\treturn _utf16BE_TextDecoder;\n}\n\nlet _platformTextDecoder: TextDecoder | null;\nexport function getPlatformTextDecoder(): TextDecoder {\n\tif (!_platformTextDecoder) {\n\t\t_platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n\t}\n\treturn _platformTextDecoder;\n}\n\nexport function decodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst view = new Uint16Array(source.buffer, offset, len);\n\tif (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n\t\t// UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n\t\t// It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n\t\t// We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n\t\t// So we use the manual decoder\n\t\treturn compatDecodeUTF16LE(source, offset, len);\n\t}\n\treturn getUTF16LE_TextDecoder().decode(view);\n}\n\nfunction compatDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst result: string[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst charCode = buffer.readUInt16LE(source, offset); offset += 2;\n\t\tresult[resultLen++] = String.fromCharCode(charCode);\n\t}\n\treturn result.join('');\n}\n\nexport class StringBuilder {\n\n\tprivate readonly _capacity: number;\n\tprivate readonly _buffer: Uint16Array;\n\n\tprivate _completedStrings: string[] | null;\n\tprivate _bufferLength: number;\n\n\tconstructor(capacity: number) {\n\t\tthis._capacity = capacity | 0;\n\t\tthis._buffer = new Uint16Array(this._capacity);\n\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic build(): string {\n\t\tif (this._completedStrings !== null) {\n\t\t\tthis._flushBuffer();\n\t\t\treturn this._completedStrings.join('');\n\t\t}\n\t\treturn this._buildBuffer();\n\t}\n\n\tprivate _buildBuffer(): string {\n\t\tif (this._bufferLength === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n\t\treturn getPlatformTextDecoder().decode(view);\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tconst bufferString = this._buildBuffer();\n\t\tthis._bufferLength = 0;\n\n\t\tif (this._completedStrings === null) {\n\t\t\tthis._completedStrings = [bufferString];\n\t\t} else {\n\t\t\tthis._completedStrings[this._completedStrings.length] = bufferString;\n\t\t}\n\t}\n\n\t/**\n\t * Append a char code (<2^16)\n\t */\n\tpublic appendCharCode(charCode: number): void {\n\t\tconst remainingSpace = this._capacity - this._bufferLength;\n\n\t\tif (remainingSpace <= 1) {\n\t\t\tif (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n\t\t\t\tthis._flushBuffer();\n\t\t\t}\n\t\t}\n\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\t/**\n\t * Append an ASCII char code (<2^8)\n\t */\n\tpublic appendASCIICharCode(charCode: number): void {\n\t\tif (this._bufferLength === this._capacity) {\n\t\t\t// buffer is full\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendString(str: string): void {\n\t\tconst strLen = str.length;\n\n\t\tif (this._bufferLength + strLen >= this._capacity) {\n\t\t\t// This string does not fit in the remaining buffer space\n\n\t\t\tthis._flushBuffer();\n\t\t\tthis._completedStrings![this._completedStrings!.length] = str;\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < strLen; i++) {\n\t\t\tthis._buffer[this._bufferLength++] = str.charCodeAt(i);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as buffer from 'vs/base/common/buffer';\nimport { decodeUTF16LE } from 'vs/editor/common/core/stringBuilder';\n\nfunction escapeNewLine(str: string): string {\n\treturn (\n\t\tstr\n\t\t\t.replace(/\\n/g, '\\\\n')\n\t\t\t.replace(/\\r/g, '\\\\r')\n\t);\n}\n\nexport class TextChange {\n\n\tpublic get oldLength(): number {\n\t\treturn this.oldText.length;\n\t}\n\n\tpublic get oldEnd(): number {\n\t\treturn this.oldPosition + this.oldText.length;\n\t}\n\n\tpublic get newLength(): number {\n\t\treturn this.newText.length;\n\t}\n\n\tpublic get newEnd(): number {\n\t\treturn this.newPosition + this.newText.length;\n\t}\n\n\tconstructor(\n\t\tpublic readonly oldPosition: number,\n\t\tpublic readonly oldText: string,\n\t\tpublic readonly newPosition: number,\n\t\tpublic readonly newText: string\n\t) { }\n\n\tpublic toString(): string {\n\t\tif (this.oldText.length === 0) {\n\t\t\treturn `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n\t\t}\n\t\tif (this.newText.length === 0) {\n\t\t\treturn `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n\t\t}\n\t\treturn `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n\t}\n\n\tprivate static _writeStringSize(str: string): number {\n\t\treturn (\n\t\t\t4 + 2 * str.length\n\t\t);\n\t}\n\n\tprivate static _writeString(b: Uint8Array, str: string, offset: number): number {\n\t\tconst len = str.length;\n\t\tbuffer.writeUInt32BE(b, len, offset); offset += 4;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tbuffer.writeUInt16LE(b, str.charCodeAt(i), offset); offset += 2;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tprivate static _readString(b: Uint8Array, offset: number): string {\n\t\tconst len = buffer.readUInt32BE(b, offset); offset += 4;\n\t\treturn decodeUTF16LE(b, offset, len);\n\t}\n\n\tpublic writeSize(): number {\n\t\treturn (\n\t\t\t+ 4 // oldPosition\n\t\t\t+ 4 // newPosition\n\t\t\t+ TextChange._writeStringSize(this.oldText)\n\t\t\t+ TextChange._writeStringSize(this.newText)\n\t\t);\n\t}\n\n\tpublic write(b: Uint8Array, offset: number): number {\n\t\tbuffer.writeUInt32BE(b, this.oldPosition, offset); offset += 4;\n\t\tbuffer.writeUInt32BE(b, this.newPosition, offset); offset += 4;\n\t\toffset = TextChange._writeString(b, this.oldText, offset);\n\t\toffset = TextChange._writeString(b, this.newText, offset);\n\t\treturn offset;\n\t}\n\n\tpublic static read(b: Uint8Array, offset: number, dest: TextChange[]): number {\n\t\tconst oldPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst newPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst oldText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(oldText);\n\t\tconst newText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(newText);\n\t\tdest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n\t\treturn offset;\n\t}\n}\n\nexport function compressConsecutiveTextChanges(prevEdits: TextChange[] | null, currEdits: TextChange[]): TextChange[] {\n\tif (prevEdits === null || prevEdits.length === 0) {\n\t\treturn currEdits;\n\t}\n\tconst compressor = new TextChangeCompressor(prevEdits, currEdits);\n\treturn compressor.compress();\n}\n\nclass TextChangeCompressor {\n\n\tprivate _prevEdits: TextChange[];\n\tprivate _currEdits: TextChange[];\n\n\tprivate _result: TextChange[];\n\tprivate _resultLen: number;\n\n\tprivate _prevLen: number;\n\tprivate _prevDeltaOffset: number;\n\n\tprivate _currLen: number;\n\tprivate _currDeltaOffset: number;\n\n\tconstructor(prevEdits: TextChange[], currEdits: TextChange[]) {\n\t\tthis._prevEdits = prevEdits;\n\t\tthis._currEdits = currEdits;\n\n\t\tthis._result = [];\n\t\tthis._resultLen = 0;\n\n\t\tthis._prevLen = this._prevEdits.length;\n\t\tthis._prevDeltaOffset = 0;\n\n\t\tthis._currLen = this._currEdits.length;\n\t\tthis._currDeltaOffset = 0;\n\t}\n\n\tpublic compress(): TextChange[] {\n\t\tlet prevIndex = 0;\n\t\tlet currIndex = 0;\n\n\t\tlet prevEdit = this._getPrev(prevIndex);\n\t\tlet currEdit = this._getCurr(currIndex);\n\n\t\twhile (prevIndex < this._prevLen || currIndex < this._currLen) {\n\n\t\t\tif (prevEdit === null) {\n\t\t\t\tthis._acceptCurr(currEdit!);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit === null) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldEnd <= prevEdit.newPosition) {\n\t\t\t\tthis._acceptCurr(currEdit);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newEnd <= currEdit.oldPosition) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldPosition < prevEdit.newPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n\t\t\t\tthis._acceptCurr(e1);\n\t\t\t\tcurrEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newPosition < currEdit.oldPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n\t\t\t\tthis._acceptPrev(e1);\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point, currEdit.oldPosition === prevEdit.newPosition\n\n\t\t\tlet mergePrev: TextChange;\n\t\t\tlet mergeCurr: TextChange;\n\n\t\t\tif (currEdit.oldEnd === prevEdit.newEnd) {\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else if (currEdit.oldEnd < prevEdit.newEnd) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n\t\t\t\tmergePrev = e1;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = e1;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = e2;\n\t\t\t}\n\n\t\t\tthis._result[this._resultLen++] = new TextChange(\n\t\t\t\tmergePrev.oldPosition,\n\t\t\t\tmergePrev.oldText,\n\t\t\t\tmergeCurr.newPosition,\n\t\t\t\tmergeCurr.newText\n\t\t\t);\n\t\t\tthis._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n\t\t\tthis._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n\t\t}\n\n\t\tconst merged = TextChangeCompressor._merge(this._result);\n\t\tconst cleaned = TextChangeCompressor._removeNoOps(merged);\n\t\treturn cleaned;\n\t}\n\n\tprivate _acceptCurr(currEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n\t\tthis._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n\t}\n\n\tprivate _getCurr(currIndex: number): TextChange | null {\n\t\treturn (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n\t}\n\n\tprivate _acceptPrev(prevEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n\t\tthis._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n\t}\n\n\tprivate _getPrev(prevIndex: number): TextChange | null {\n\t\treturn (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n\t}\n\n\tprivate static _rebaseCurr(prevDeltaOffset: number, currEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tcurrEdit.oldPosition - prevDeltaOffset,\n\t\t\tcurrEdit.oldText,\n\t\t\tcurrEdit.newPosition,\n\t\t\tcurrEdit.newText\n\t\t);\n\t}\n\n\tprivate static _rebasePrev(currDeltaOffset: number, prevEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tprevEdit.oldPosition,\n\t\t\tprevEdit.oldText,\n\t\t\tprevEdit.newPosition + currDeltaOffset,\n\t\t\tprevEdit.newText\n\t\t);\n\t}\n\n\tprivate static _splitPrev(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.newText.substr(0, offset);\n\t\tconst postText = edit.newText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tedit.oldText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tpreText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldEnd,\n\t\t\t\t'',\n\t\t\t\tedit.newPosition + offset,\n\t\t\t\tpostText\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _splitCurr(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.oldText.substr(0, offset);\n\t\tconst postText = edit.oldText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tpreText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tedit.newText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition + offset,\n\t\t\t\tpostText,\n\t\t\t\tedit.newEnd,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _merge(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tlet prev = edits[0];\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst curr = edits[i];\n\n\t\t\tif (prev.oldEnd === curr.oldPosition) {\n\t\t\t\t// Merge into `prev`\n\t\t\t\tprev = new TextChange(\n\t\t\t\t\tprev.oldPosition,\n\t\t\t\t\tprev.oldText + curr.oldText,\n\t\t\t\t\tprev.newPosition,\n\t\t\t\t\tprev.newText + curr.newText\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = curr;\n\t\t\t}\n\t\t}\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _removeNoOps(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tfor (let i = 0; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\n\t\t\tif (edit.oldText === edit.newText) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult[resultLen++] = edit;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as strings from 'vs/base/common/strings';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ApplyEditsResult, EndOfLinePreference, FindMatch, IInternalModelContentChange, ISingleEditOperationIdentifier, ITextBuffer, ITextSnapshot, ValidAnnotatedEditOperation, IValidEditOperation, SearchData } from 'vs/editor/common/model';\nimport { PieceTreeBase, StringBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { countEOL, StringEOL } from 'vs/editor/common/core/eolCounter';\nimport { TextChange } from 'vs/editor/common/core/textChange';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport interface IValidatedEditOperation {\n\tsortIndex: number;\n\tidentifier: ISingleEditOperationIdentifier | null;\n\trange: Range;\n\trangeOffset: number;\n\trangeLength: number;\n\ttext: string;\n\teolCount: number;\n\tfirstLineLength: number;\n\tlastLineLength: number;\n\tforceMoveMarkers: boolean;\n\tisAutoWhitespaceEdit: boolean;\n}\n\ninterface IReverseSingleEditOperation extends IValidEditOperation {\n\tsortIndex: number;\n}\n\nexport class PieceTreeTextBuffer extends Disposable implements ITextBuffer {\n\tprivate _pieceTree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\tprivate _mightContainRTL: boolean;\n\tprivate _mightContainUnusualLineTerminators: boolean;\n\tprivate _mightContainNonBasicASCII: boolean;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tconstructor(chunks: StringBuffer[], BOM: string, eol: '\\r\\n' | '\\n', containsRTL: boolean, containsUnusualLineTerminators: boolean, isBasicASCII: boolean, eolNormalized: boolean) {\n\t\tsuper();\n\t\tthis._BOM = BOM;\n\t\tthis._mightContainNonBasicASCII = !isBasicASCII;\n\t\tthis._mightContainRTL = containsRTL;\n\t\tthis._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n\t\tthis._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n\t}\n\n\t// #region TextBuffer\n\tpublic equals(other: ITextBuffer): boolean {\n\t\tif (!(other instanceof PieceTreeTextBuffer)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._BOM !== other._BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getEOL() !== other.getEOL()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._pieceTree.equal(other._pieceTree);\n\t}\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._mightContainRTL;\n\t}\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._mightContainUnusualLineTerminators;\n\t}\n\tpublic resetMightContainUnusualLineTerminators(): void {\n\t\tthis._mightContainUnusualLineTerminators = false;\n\t}\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._mightContainNonBasicASCII;\n\t}\n\tpublic getBOM(): string {\n\t\treturn this._BOM;\n\t}\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._pieceTree.getEOL();\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean): ITextSnapshot {\n\t\treturn this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\treturn this._pieceTree.getOffsetAt(lineNumber, column);\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\treturn this._pieceTree.getPositionAt(offset);\n\t}\n\n\tpublic getRangeAt(start: number, length: number): Range {\n\t\tconst end = start + length;\n\t\tconst startPosition = this.getPositionAt(start);\n\t\tconst endPosition = this.getPositionAt(end);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): string {\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst lineEnding = this._getEndOfLine(eol);\n\t\treturn this._pieceTree.getValueInRange(range, lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tconst startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t// offsets use the text EOL, so we need to compensate for length differences\n\t\t// if the requested EOL doesn't match the text EOL\n\t\tlet eolOffsetCompensation = 0;\n\t\tconst desiredEOL = this._getEndOfLine(eol);\n\t\tconst actualEOL = this.getEOL();\n\t\tif (desiredEOL.length !== actualEOL.length) {\n\t\t\tconst delta = desiredEOL.length - actualEOL.length;\n\t\t\tconst eolCount = range.endLineNumber - range.startLineNumber;\n\t\t\teolOffsetCompensation = delta * eolCount;\n\t\t}\n\n\t\treturn endOffset - startOffset + eolOffsetCompensation;\n\t}\n\n\tpublic getCharacterCountInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (this._mightContainNonBasicASCII) {\n\t\t\t// we must count by iterating\n\n\t\t\tlet result = 0;\n\n\t\t\tconst fromLineNumber = range.startLineNumber;\n\t\t\tconst toLineNumber = range.endLineNumber;\n\t\t\tfor (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\t\t\t\tconst fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n\t\t\t\tconst toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n\n\t\t\t\tfor (let offset = fromOffset; offset < toOffset; offset++) {\n\t\t\t\t\tif (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t\toffset = offset + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.getValueLengthInRange(range, eol);\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._pieceTree.getLength();\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._pieceTree.getLineCount();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._pieceTree.getLinesContent();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._pieceTree.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\treturn this._pieceTree.getLineCharCode(lineNumber, index);\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\treturn this._pieceTree.getCharCode(offset);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._pieceTree.getLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tprivate _getEndOfLine(eol: EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown EOL preference');\n\t\t}\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._pieceTree.setEOL(newEOL);\n\t}\n\n\tpublic applyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult {\n\t\tlet mightContainRTL = this._mightContainRTL;\n\t\tlet mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n\t\tlet mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n\t\tlet canReduceOperations = true;\n\n\t\tlet operations: IValidatedEditOperation[] = [];\n\t\tfor (let i = 0; i < rawOperations.length; i++) {\n\t\t\tconst op = rawOperations[i];\n\t\t\tif (canReduceOperations && op._isTracked) {\n\t\t\t\tcanReduceOperations = false;\n\t\t\t}\n\t\t\tconst validatedRange = op.range;\n\t\t\tif (op.text) {\n\t\t\t\tlet textMightContainNonBasicASCII = true;\n\t\t\t\tif (!mightContainNonBasicASCII) {\n\t\t\t\t\ttextMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n\t\t\t\t\tmightContainNonBasicASCII = textMightContainNonBasicASCII;\n\t\t\t\t}\n\t\t\t\tif (!mightContainRTL && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains RTL\n\t\t\t\t\tmightContainRTL = strings.containsRTL(op.text);\n\t\t\t\t}\n\t\t\t\tif (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains unusual line terminators\n\t\t\t\t\tmightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet validText = '';\n\t\t\tlet eolCount = 0;\n\t\t\tlet firstLineLength = 0;\n\t\t\tlet lastLineLength = 0;\n\t\t\tif (op.text) {\n\t\t\t\tlet strEOL: StringEOL;\n\t\t\t\t[eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n\n\t\t\t\tconst bufferEOL = this.getEOL();\n\t\t\t\tconst expectedStrEOL = (bufferEOL === '\\r\\n' ? StringEOL.CRLF : StringEOL.LF);\n\t\t\t\tif (strEOL === StringEOL.Unknown || strEOL === expectedStrEOL) {\n\t\t\t\t\tvalidText = op.text;\n\t\t\t\t} else {\n\t\t\t\t\tvalidText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toperations[i] = {\n\t\t\t\tsortIndex: i,\n\t\t\t\tidentifier: op.identifier || null,\n\t\t\t\trange: validatedRange,\n\t\t\t\trangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n\t\t\t\trangeLength: this.getValueLengthInRange(validatedRange),\n\t\t\t\ttext: validText,\n\t\t\t\teolCount: eolCount,\n\t\t\t\tfirstLineLength: firstLineLength,\n\t\t\t\tlastLineLength: lastLineLength,\n\t\t\t\tforceMoveMarkers: Boolean(op.forceMoveMarkers),\n\t\t\t\tisAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n\t\t\t};\n\t\t}\n\n\t\t// Sort operations ascending\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsAscending);\n\n\t\tlet hasTouchingRanges = false;\n\t\tfor (let i = 0, count = operations.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = operations[i].range.getEndPosition();\n\t\t\tconst nextRangeStart = operations[i + 1].range.getStartPosition();\n\n\t\t\tif (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n\t\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t\t// overlapping ranges\n\t\t\t\t\tthrow new Error('Overlapping ranges are not allowed!');\n\t\t\t\t}\n\t\t\t\thasTouchingRanges = true;\n\t\t\t}\n\t\t}\n\n\t\tif (canReduceOperations) {\n\t\t\toperations = this._reduceOperations(operations);\n\t\t}\n\n\t\t// Delta encode operations\n\t\tconst reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n\t\tconst newTrimAutoWhitespaceCandidates: { lineNumber: number; oldContent: string }[] = [];\n\t\tif (recordTrimAutoWhitespace) {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\n\t\t\t\tif (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n\t\t\t\t\t// Record already the future line numbers that might be auto whitespace removal candidates on next edit\n\t\t\t\t\tfor (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n\t\t\t\t\t\tlet currentLineContent = '';\n\t\t\t\t\t\tif (lineNumber === reverseRange.startLineNumber) {\n\t\t\t\t\t\t\tcurrentLineContent = this.getLineContent(op.range.startLineNumber);\n\t\t\t\t\t\t\tif (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet reverseOperations: IReverseSingleEditOperation[] | null = null;\n\t\tif (computeUndoEdits) {\n\n\t\t\tlet reverseRangeDeltaOffset = 0;\n\t\t\treverseOperations = [];\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\t\t\t\tconst bufferText = this.getValueInRange(op.range);\n\t\t\t\tconst reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n\t\t\t\treverseRangeDeltaOffset += (op.text.length - bufferText.length);\n\n\t\t\t\treverseOperations[i] = {\n\t\t\t\t\tsortIndex: op.sortIndex,\n\t\t\t\t\tidentifier: op.identifier,\n\t\t\t\t\trange: reverseRange,\n\t\t\t\t\ttext: bufferText,\n\t\t\t\t\ttextChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Can only sort reverse operations when the order is not significant\n\t\t\tif (!hasTouchingRanges) {\n\t\t\t\treverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n\t\t\t}\n\t\t}\n\n\n\t\tthis._mightContainRTL = mightContainRTL;\n\t\tthis._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n\t\tthis._mightContainNonBasicASCII = mightContainNonBasicASCII;\n\n\t\tconst contentChanges = this._doApplyEdits(operations);\n\n\t\tlet trimAutoWhitespaceLineNumbers: number[] | null = null;\n\t\tif (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n\t\t\t// sort line numbers auto whitespace removal candidates for next edit descending\n\t\t\tnewTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n\n\t\t\ttrimAutoWhitespaceLineNumbers = [];\n\t\t\tfor (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n\t\t\t\tconst lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n\t\t\t\tif (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n\t\t\t\t\t// Do not have the same line number twice\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\n\t\t\t\tif (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttrimAutoWhitespaceLineNumbers.push(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeContent.fire();\n\n\t\treturn new ApplyEditsResult(\n\t\t\treverseOperations,\n\t\t\tcontentChanges,\n\t\t\ttrimAutoWhitespaceLineNumbers\n\t\t);\n\t}\n\n\t/**\n\t * Transform operations such that they represent the same logic edit,\n\t * but that they also do not cause OOM crashes.\n\t */\n\tprivate _reduceOperations(operations: IValidatedEditOperation[]): IValidatedEditOperation[] {\n\t\tif (operations.length < 1000) {\n\t\t\t// We know from empirical testing that a thousand edits work fine regardless of their shape.\n\t\t\treturn operations;\n\t\t}\n\n\t\t// At one point, due to how events are emitted and how each operation is handled,\n\t\t// some operations can trigger a high amount of temporary string allocations,\n\t\t// that will immediately get edited again.\n\t\t// e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n\t\t// Therefore, the strategy is to collapse all the operations into a huge single edit operation\n\t\treturn [this._toSingleEditOperation(operations)];\n\t}\n\n\t_toSingleEditOperation(operations: IValidatedEditOperation[]): IValidatedEditOperation {\n\t\tlet forceMoveMarkers = false;\n\t\tconst firstEditRange = operations[0].range;\n\t\tconst lastEditRange = operations[operations.length - 1].range;\n\t\tconst entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n\t\tlet lastEndLineNumber = firstEditRange.startLineNumber;\n\t\tlet lastEndColumn = firstEditRange.startColumn;\n\t\tconst result: string[] = [];\n\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst operation = operations[i];\n\t\t\tconst range = operation.range;\n\n\t\t\tforceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n\n\t\t\t// (1) -- Push old text\n\t\t\tresult.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n\n\t\t\t// (2) -- Push new text\n\t\t\tif (operation.text.length > 0) {\n\t\t\t\tresult.push(operation.text);\n\t\t\t}\n\n\t\t\tlastEndLineNumber = range.endLineNumber;\n\t\t\tlastEndColumn = range.endColumn;\n\t\t}\n\n\t\tconst text = result.join('');\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: operations[0].identifier,\n\t\t\trange: entireEditRange,\n\t\t\trangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n\t\t\trangeLength: this.getValueLengthInRange(entireEditRange, EndOfLinePreference.TextDefined),\n\t\t\ttext: text,\n\t\t\teolCount: eolCount,\n\t\t\tfirstLineLength: firstLineLength,\n\t\t\tlastLineLength: lastLineLength,\n\t\t\tforceMoveMarkers: forceMoveMarkers,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tprivate _doApplyEdits(operations: IValidatedEditOperation[]): IInternalModelContentChange[] {\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsDescending);\n\n\t\tconst contentChanges: IInternalModelContentChange[] = [];\n\n\t\t// operations are from bottom to top\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tconst startLineNumber = op.range.startLineNumber;\n\t\t\tconst startColumn = op.range.startColumn;\n\t\t\tconst endLineNumber = op.range.endLineNumber;\n\t\t\tconst endColumn = op.range.endColumn;\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n\t\t\t\t// no-op\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (op.text) {\n\t\t\t\t// replacement\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t\tthis._pieceTree.insert(op.rangeOffset, op.text, true);\n\n\t\t\t} else {\n\t\t\t\t// deletion\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t}\n\n\t\t\tconst contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\tcontentChanges.push({\n\t\t\t\trange: contentChangeRange,\n\t\t\t\trangeLength: op.rangeLength,\n\t\t\t\ttext: op.text,\n\t\t\t\trangeOffset: op.rangeOffset,\n\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t});\n\t\t}\n\t\treturn contentChanges;\n\t}\n\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\treturn this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t// #endregion\n\n\t// #region helper\n\t// testing purpose.\n\tpublic getPieceTree(): PieceTreeBase {\n\t\treturn this._pieceTree;\n\t}\n\n\tpublic static _getInverseEditRange(range: Range, text: string) {\n\t\tconst startLineNumber = range.startLineNumber;\n\t\tconst startColumn = range.startColumn;\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\t\tlet resultRange: Range;\n\n\t\tif (text.length > 0) {\n\t\t\t// the operation inserts something\n\t\t\tconst lineCount = eolCount + 1;\n\n\t\t\tif (lineCount === 1) {\n\t\t\t\t// single line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + firstLineLength);\n\t\t\t} else {\n\t\t\t\t// multi line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, lastLineLength + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// There is nothing to insert\n\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t}\n\n\t\treturn resultRange;\n\t}\n\n\t/**\n\t * Assumes `operations` are validated and sorted ascending\n\t */\n\tpublic static _getInverseEditRanges(operations: IValidatedEditOperation[]): Range[] {\n\t\tconst result: Range[] = [];\n\n\t\tlet prevOpEndLineNumber: number = 0;\n\t\tlet prevOpEndColumn: number = 0;\n\t\tlet prevOp: IValidatedEditOperation | null = null;\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tlet startLineNumber: number;\n\t\t\tlet startColumn: number;\n\n\t\t\tif (prevOp) {\n\t\t\t\tif (prevOp.range.endLineNumber === op.range.startLineNumber) {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber;\n\t\t\t\t\tstartColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n\t\t\t\t} else {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n\t\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstartLineNumber = op.range.startLineNumber;\n\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t}\n\n\t\t\tlet resultRange: Range;\n\n\t\t\tif (op.text.length > 0) {\n\t\t\t\t// the operation inserts something\n\t\t\t\tconst lineCount = op.eolCount + 1;\n\n\t\t\t\tif (lineCount === 1) {\n\t\t\t\t\t// single line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n\t\t\t\t} else {\n\t\t\t\t\t// multi line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is nothing to insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t\t}\n\n\t\t\tprevOpEndLineNumber = resultRange.endLineNumber;\n\t\t\tprevOpEndColumn = resultRange.endColumn;\n\n\t\t\tresult.push(resultRange);\n\t\t\tprevOp = op;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _sortOpsAscending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn a.sortIndex - b.sortIndex;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate static _sortOpsDescending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn b.sortIndex - a.sortIndex;\n\t\t}\n\t\treturn -r;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { DefaultEndOfLine, ITextBuffer, ITextBufferBuilder, ITextBufferFactory } from 'vs/editor/common/model';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\n\nclass PieceTreeTextBufferFactory implements ITextBufferFactory {\n\n\tconstructor(\n\t\tprivate readonly _chunks: StringBuffer[],\n\t\tprivate readonly _bom: string,\n\t\tprivate readonly _cr: number,\n\t\tprivate readonly _lf: number,\n\t\tprivate readonly _crlf: number,\n\t\tprivate readonly _containsRTL: boolean,\n\t\tprivate readonly _containsUnusualLineTerminators: boolean,\n\t\tprivate readonly _isBasicASCII: boolean,\n\t\tprivate readonly _normalizeEOL: boolean\n\t) { }\n\n\tprivate _getEOL(defaultEOL: DefaultEndOfLine): '\\r\\n' | '\\n' {\n\t\tconst totalEOLCount = this._cr + this._lf + this._crlf;\n\t\tconst totalCRCount = this._cr + this._crlf;\n\t\tif (totalEOLCount === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\treturn (defaultEOL === DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t}\n\t\tif (totalCRCount > totalEOLCount / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\treturn '\\r\\n';\n\t\t}\n\t\t// At least one line more ends in \\n\n\t\treturn '\\n';\n\t}\n\n\tpublic create(defaultEOL: DefaultEndOfLine): { textBuffer: ITextBuffer; disposable: IDisposable } {\n\t\tconst eol = this._getEOL(defaultEOL);\n\t\tconst chunks = this._chunks;\n\n\t\tif (this._normalizeEOL &&\n\t\t\t((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n\t\t\t\t|| (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))\n\t\t) {\n\t\t\t// Normalize pieces\n\t\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\t\tconst str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t\tconst newLineStart = createLineStartsFast(str);\n\t\t\t\tchunks[i] = new StringBuffer(str, newLineStart);\n\t\t\t}\n\t\t}\n\n\t\tconst textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n\t\treturn { textBuffer: textBuffer, disposable: textBuffer };\n\t}\n\n\tpublic getFirstLineText(lengthLimit: number): string {\n\t\treturn this._chunks[0].buffer.substr(0, lengthLimit).split(/\\r\\n|\\r|\\n/)[0];\n\t}\n}\n\nexport class PieceTreeTextBufferBuilder implements ITextBufferBuilder {\n\tprivate readonly chunks: StringBuffer[];\n\tprivate BOM: string;\n\n\tprivate _hasPreviousChar: boolean;\n\tprivate _previousChar: number;\n\tprivate readonly _tmpLineStarts: number[];\n\n\tprivate cr: number;\n\tprivate lf: number;\n\tprivate crlf: number;\n\tprivate containsRTL: boolean;\n\tprivate containsUnusualLineTerminators: boolean;\n\tprivate isBasicASCII: boolean;\n\n\tconstructor() {\n\t\tthis.chunks = [];\n\t\tthis.BOM = '';\n\n\t\tthis._hasPreviousChar = false;\n\t\tthis._previousChar = 0;\n\t\tthis._tmpLineStarts = [];\n\n\t\tthis.cr = 0;\n\t\tthis.lf = 0;\n\t\tthis.crlf = 0;\n\t\tthis.containsRTL = false;\n\t\tthis.containsUnusualLineTerminators = false;\n\t\tthis.isBasicASCII = true;\n\t}\n\n\tpublic acceptChunk(chunk: string): void {\n\t\tif (chunk.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.chunks.length === 0) {\n\t\t\tif (strings.startsWithUTF8BOM(chunk)) {\n\t\t\t\tthis.BOM = strings.UTF8_BOM_CHARACTER;\n\t\t\t\tchunk = chunk.substr(1);\n\t\t\t}\n\t\t}\n\n\t\tconst lastChar = chunk.charCodeAt(chunk.length - 1);\n\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\tthis._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n\t\t\tthis._hasPreviousChar = true;\n\t\t\tthis._previousChar = lastChar;\n\t\t} else {\n\t\t\tthis._acceptChunk1(chunk, false);\n\t\t\tthis._hasPreviousChar = false;\n\t\t\tthis._previousChar = lastChar;\n\t\t}\n\t}\n\n\tprivate _acceptChunk1(chunk: string, allowEmptyStrings: boolean): void {\n\t\tif (!allowEmptyStrings && chunk.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n\t\t} else {\n\t\t\tthis._acceptChunk2(chunk);\n\t\t}\n\t}\n\n\tprivate _acceptChunk2(chunk: string): void {\n\t\tconst lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n\n\t\tthis.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n\t\tthis.cr += lineStarts.cr;\n\t\tthis.lf += lineStarts.lf;\n\t\tthis.crlf += lineStarts.crlf;\n\n\t\tif (!lineStarts.isBasicASCII) {\n\t\t\t// this chunk contains non basic ASCII characters\n\t\t\tthis.isBasicASCII = false;\n\t\t\tif (!this.containsRTL) {\n\t\t\t\tthis.containsRTL = strings.containsRTL(chunk);\n\t\t\t}\n\t\t\tif (!this.containsUnusualLineTerminators) {\n\t\t\t\tthis.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic finish(normalizeEOL: boolean = true): PieceTreeTextBufferFactory {\n\t\tthis._finish();\n\t\treturn new PieceTreeTextBufferFactory(\n\t\t\tthis.chunks,\n\t\t\tthis.BOM,\n\t\t\tthis.cr,\n\t\t\tthis.lf,\n\t\t\tthis.crlf,\n\t\t\tthis.containsRTL,\n\t\t\tthis.containsUnusualLineTerminators,\n\t\t\tthis.isBasicASCII,\n\t\t\tnormalizeEOL\n\t\t);\n\t}\n\n\tprivate _finish(): void {\n\t\tif (this.chunks.length === 0) {\n\t\t\tthis._acceptChunk1('', true);\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._hasPreviousChar = false;\n\t\t\t// recreate last chunk\n\t\t\tconst lastChunk = this.chunks[this.chunks.length - 1];\n\t\t\tlastChunk.buffer += String.fromCharCode(this._previousChar);\n\t\t\tconst newLineStarts = createLineStartsFast(lastChunk.buffer);\n\t\t\tlastChunk.lineStarts = newLineStarts;\n\t\t\tif (this._previousChar === CharCode.CarriageReturn) {\n\t\t\t\tthis.cr++;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { illegalState } from 'vs/base/common/errors';\nimport { localize } from 'vs/nls';\n\nexport const enum TokenType {\n\tLParen,\n\tRParen,\n\tNeg,\n\tEq,\n\tNotEq,\n\tLt,\n\tLtEq,\n\tGt,\n\tGtEq,\n\tRegexOp,\n\tRegexStr,\n\tTrue,\n\tFalse,\n\tIn,\n\tNot,\n\tAnd,\n\tOr,\n\tStr,\n\tQuotedStr,\n\tError,\n\tEOF,\n}\n\nexport type Token =\n\t| { type: TokenType.LParen; offset: number }\n\t| { type: TokenType.RParen; offset: number }\n\t| { type: TokenType.Neg; offset: number }\n\t| { type: TokenType.Eq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.NotEq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.Lt; offset: number }\n\t| { type: TokenType.LtEq; offset: number }\n\t| { type: TokenType.Gt; offset: number }\n\t| { type: TokenType.GtEq; offset: number }\n\t| { type: TokenType.RegexOp; offset: number }\n\t| { type: TokenType.RegexStr; offset: number; lexeme: string }\n\t| { type: TokenType.True; offset: number }\n\t| { type: TokenType.False; offset: number }\n\t| { type: TokenType.In; offset: number }\n\t| { type: TokenType.Not; offset: number }\n\t| { type: TokenType.And; offset: number }\n\t| { type: TokenType.Or; offset: number }\n\t| { type: TokenType.Str; offset: number; lexeme: string }\n\t| { type: TokenType.QuotedStr; offset: number; lexeme: string }\n\t| { type: TokenType.Error; offset: number; lexeme: string }\n\t| { type: TokenType.EOF; offset: number };\n\ntype KeywordTokenType = TokenType.Not | TokenType.In | TokenType.False | TokenType.True;\ntype TokenTypeWithoutLexeme =\n\tTokenType.LParen |\n\tTokenType.RParen |\n\tTokenType.Neg |\n\tTokenType.Lt |\n\tTokenType.LtEq |\n\tTokenType.Gt |\n\tTokenType.GtEq |\n\tTokenType.RegexOp |\n\tTokenType.True |\n\tTokenType.False |\n\tTokenType.In |\n\tTokenType.Not |\n\tTokenType.And |\n\tTokenType.Or |\n\tTokenType.EOF;\n\n/**\n * Example:\n * `foo == bar'` - note how single quote doesn't have a corresponding closing quote,\n * so it's reported as unexpected\n */\nexport type LexingError = {\n\toffset: number; /** note that this doesn't take into account escape characters from the original encoding of the string, e.g., within an extension manifest file's JSON encoding  */\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nfunction hintDidYouMean(...meant: string[]) {\n\tswitch (meant.length) {\n\t\tcase 1:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n\t\tcase 2:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n\t\tcase 3:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n\t\tdefault: // we just don't expect that many\n\t\t\treturn undefined;\n\t}\n}\n\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n\n\tstatic getLexeme(token: Token): string {\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.LParen:\n\t\t\t\treturn '(';\n\t\t\tcase TokenType.RParen:\n\t\t\t\treturn ')';\n\t\t\tcase TokenType.Neg:\n\t\t\t\treturn '!';\n\t\t\tcase TokenType.Eq:\n\t\t\t\treturn token.isTripleEq ? '===' : '==';\n\t\t\tcase TokenType.NotEq:\n\t\t\t\treturn token.isTripleEq ? '!==' : '!=';\n\t\t\tcase TokenType.Lt:\n\t\t\t\treturn '<';\n\t\t\tcase TokenType.LtEq:\n\t\t\t\treturn '<=';\n\t\t\tcase TokenType.Gt:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.GtEq:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.RegexOp:\n\t\t\t\treturn '=~';\n\t\t\tcase TokenType.RegexStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In:\n\t\t\t\treturn 'in';\n\t\t\tcase TokenType.Not:\n\t\t\t\treturn 'not';\n\t\t\tcase TokenType.And:\n\t\t\t\treturn '&&';\n\t\t\tcase TokenType.Or:\n\t\t\t\treturn '||';\n\t\t\tcase TokenType.Str:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.Error:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.EOF:\n\t\t\t\treturn 'EOF';\n\t\t\tdefault:\n\t\t\t\tthrow illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n\t\t}\n\t}\n\n\tprivate static _regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\n\n\tprivate static _keywords = new Map<string, KeywordTokenType>([\n\t\t['not', TokenType.Not],\n\t\t['in', TokenType.In],\n\t\t['false', TokenType.False],\n\t\t['true', TokenType.True],\n\t]);\n\n\tprivate _input: string = '';\n\tprivate _start: number = 0;\n\tprivate _current: number = 0;\n\tprivate _tokens: Token[] = [];\n\tprivate _errors: LexingError[] = [];\n\n\tget errors(): Readonly<LexingError[]> {\n\t\treturn this._errors;\n\t}\n\n\treset(value: string) {\n\t\tthis._input = value;\n\n\t\tthis._start = 0;\n\t\tthis._current = 0;\n\t\tthis._tokens = [];\n\t\tthis._errors = [];\n\n\t\treturn this;\n\t}\n\n\tscan() {\n\t\twhile (!this._isAtEnd()) {\n\n\t\t\tthis._start = this._current;\n\n\t\t\tconst ch = this._advance();\n\t\t\tswitch (ch) {\n\t\t\t\tcase CharCode.OpenParen: this._addToken(TokenType.LParen); break;\n\t\t\t\tcase CharCode.CloseParen: this._addToken(TokenType.RParen); break;\n\n\t\t\t\tcase CharCode.ExclamationMark:\n\t\t\t\t\tif (this._match(CharCode.Equals)) {\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `!==`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.NotEq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._addToken(TokenType.Neg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.SingleQuote: this._quotedString(); break;\n\t\t\t\tcase CharCode.Slash: this._regex(); break;\n\n\t\t\t\tcase CharCode.Equals:\n\t\t\t\t\tif (this._match(CharCode.Equals)) { // support `==`\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `===`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.Eq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else if (this._match(CharCode.Tilde)) {\n\t\t\t\t\t\tthis._addToken(TokenType.RegexOp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('==', '=~'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.LessThan: this._addToken(this._match(CharCode.Equals) ? TokenType.LtEq : TokenType.Lt); break;\n\n\t\t\t\tcase CharCode.GreaterThan: this._addToken(this._match(CharCode.Equals) ? TokenType.GtEq : TokenType.Gt); break;\n\n\t\t\t\tcase CharCode.Ampersand:\n\t\t\t\t\tif (this._match(CharCode.Ampersand)) {\n\t\t\t\t\t\tthis._addToken(TokenType.And);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('&&'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\tif (this._match(CharCode.Pipe)) {\n\t\t\t\t\t\tthis._addToken(TokenType.Or);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('||'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n\t\t\t\tcase CharCode.Space:\n\t\t\t\tcase CharCode.CarriageReturn:\n\t\t\t\tcase CharCode.Tab:\n\t\t\t\tcase CharCode.LineFeed:\n\t\t\t\tcase CharCode.NoBreakSpace: // &nbsp\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._string();\n\t\t\t}\n\t\t}\n\n\t\tthis._start = this._current;\n\t\tthis._addToken(TokenType.EOF);\n\n\t\treturn Array.from(this._tokens);\n\t}\n\n\tprivate _match(expected: number): boolean {\n\t\tif (this._isAtEnd()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._input.charCodeAt(this._current) !== expected) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._current++;\n\t\treturn true;\n\t}\n\n\tprivate _advance(): number {\n\t\treturn this._input.charCodeAt(this._current++);\n\t}\n\n\tprivate _peek(): number {\n\t\treturn this._isAtEnd() ? CharCode.Null : this._input.charCodeAt(this._current);\n\t}\n\n\tprivate _addToken(type: TokenTypeWithoutLexeme) {\n\t\tthis._tokens.push({ type, offset: this._start });\n\t}\n\n\tprivate _error(additional?: string) {\n\t\tconst offset = this._start;\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tconst errToken: Token = { type: TokenType.Error, offset: this._start, lexeme };\n\t\tthis._errors.push({ offset, lexeme, additionalInfo: additional });\n\t\tthis._tokens.push(errToken);\n\t}\n\n\t// u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n\tprivate stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n\tprivate _string() {\n\t\tthis.stringRe.lastIndex = this._start;\n\t\tconst match = this.stringRe.exec(this._input);\n\t\tif (match) {\n\t\t\tthis._current = this._start + match[0].length;\n\t\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\t\tconst keyword = Scanner._keywords.get(lexeme);\n\t\t\tif (keyword) {\n\t\t\t\tthis._addToken(keyword);\n\t\t\t} else {\n\t\t\t\tthis._tokens.push({ type: TokenType.Str, lexeme, offset: this._start });\n\t\t\t}\n\t\t}\n\t}\n\n\t// captures the lexeme without the leading and trailing '\n\tprivate _quotedString() {\n\t\twhile (this._peek() !== CharCode.SingleQuote && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n\t\t\tthis._advance();\n\t\t}\n\n\t\tif (this._isAtEnd()) {\n\t\t\tthis._error(hintDidYouForgetToOpenOrCloseQuote);\n\t\t\treturn;\n\t\t}\n\n\t\t// consume the closing '\n\t\tthis._advance();\n\n\t\tthis._tokens.push({ type: TokenType.QuotedStr, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n\t}\n\n\t/*\n\t * Lexing a regex expression: /.../[igsmyu]*\n\t * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n\t *\n\t * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n\t */\n\tprivate _regex() {\n\t\tlet p = this._current;\n\n\t\tlet inEscape = false;\n\t\tlet inCharacterClass = false;\n\t\twhile (true) {\n\t\t\tif (p >= this._input.length) {\n\t\t\t\tthis._current = p;\n\t\t\t\tthis._error(hintDidYouForgetToEscapeSlash);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst ch = this._input.charCodeAt(p);\n\n\t\t\tif (inEscape) { // parsing an escape character\n\t\t\t\tinEscape = false;\n\t\t\t} else if (ch === CharCode.Slash && !inCharacterClass) { // end of regex\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t} else if (ch === CharCode.OpenSquareBracket) {\n\t\t\t\tinCharacterClass = true;\n\t\t\t} else if (ch === CharCode.Backslash) {\n\t\t\t\tinEscape = true;\n\t\t\t} else if (ch === CharCode.CloseSquareBracket) {\n\t\t\t\tinCharacterClass = false;\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\n\t\t// Consume flags // TODO@ulugbekna: use regex instead\n\t\twhile (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n\t\t\tp++;\n\t\t}\n\n\t\tthis._current = p;\n\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tthis._tokens.push({ type: TokenType.RegexStr, lexeme, offset: this._start });\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._current >= this._input.length;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\nexport type GetLeadingNonServiceArgs<TArgs extends any[]> =\n\tTArgs extends [] ? []\n\t: TArgs extends [...infer TFirst, BrandedService] ? GetLeadingNonServiceArgs<TFirst>\n\t: TArgs;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Event } from 'vs/base/common/event';\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from 'vs/base/common/platform';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { Scanner, LexingError, Token, TokenType } from 'vs/platform/contextkey/common/scanner';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { illegalArgument } from 'vs/base/common/errors';\n\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n\n/** allow register constant context keys that are known only after startup; requires running `substituteConstants` on the context key - https://github.com/microsoft/vscode/issues/174218#issuecomment-1437972127 */\nexport function setConstant(key: string, value: boolean) {\n\tif (CONSTANT_VALUES.get(key) !== undefined) { throw illegalArgument('contextkey.setConstant(k, v) invoked with already set constant `k`'); }\n\n\tCONSTANT_VALUES.set(key, value);\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\n\n/*\n\nSyntax grammar:\n\n```ebnf\n\nexpression ::= or\n\nor ::= and { '||' and }*\n\nand ::= term { '&&' term }*\n\nterm ::=\n\t| '!' (KEY | true | false | parenthesized)\n\t| primary\n\nprimary ::=\n\t| 'true'\n\t| 'false'\n\t| parenthesized\n\t| KEY '=~' REGEX\n\t| KEY [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'not' 'in' | 'in') value ]\n\nparenthesized ::=\n\t| '(' expression ')'\n\nvalue ::=\n\t| 'true'\n\t| 'false'\n\t| 'in'      \t// we support `in` as a value because there's an extension that uses it, ie \"when\": \"languageId == in\"\n\t| VALUE \t\t// matched by the same regex as KEY; consider putting the value in single quotes if it's a string (e.g., with spaces)\n\t| SINGLE_QUOTED_STR\n\t| EMPTY_STR  \t// this allows \"when\": \"foo == \" which's used by existing extensions\n\n```\n*/\n\nexport type ParserConfig = {\n\t/**\n\t * with this option enabled, the parser can recover from regex parsing errors, e.g., unescaped slashes: `/src//` is accepted as `/src\\//` would be\n\t */\n\tregexParsingWithErrorRecovery: boolean;\n};\n\nconst defaultConfig: ParserConfig = {\n\tregexParsingWithErrorRecovery: true\n};\n\nexport type ParsingError = {\n\tmessage: string;\n\toffset: number;\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n\t// Note: this doesn't produce an exact syntax tree but a normalized one\n\t// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n\n\tprivate static _parseError = new Error();\n\n\t// lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n\tprivate readonly _scanner = new Scanner();\n\n\t// lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n\tprivate _tokens: Token[] = [];\n\tprivate _current = 0; \t\t\t\t\t// invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n\tprivate _parsingErrors: ParsingError[] = [];\n\n\tget lexingErrors(): Readonly<LexingError[]> {\n\t\treturn this._scanner.errors;\n\t}\n\n\tget parsingErrors(): Readonly<ParsingError[]> {\n\t\treturn this._parsingErrors;\n\t}\n\n\tconstructor(private readonly _config: ParserConfig = defaultConfig) {\n\t}\n\n\t/**\n\t * Parse a context key expression.\n\t *\n\t * @param input the expression to parse\n\t * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n\t */\n\tparse(input: string): ContextKeyExpression | undefined {\n\n\t\tif (input === '') {\n\t\t\tthis._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._tokens = this._scanner.reset(input).scan();\n\t\t// @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n\n\t\tthis._current = 0;\n\t\tthis._parsingErrors = [];\n\n\t\ttry {\n\t\t\tconst expr = this._expr();\n\t\t\tif (!this._isAtEnd()) {\n\t\t\t\tconst peek = this._peek();\n\t\t\t\tconst additionalInfo = peek.type === TokenType.Str ? hintUnexpectedToken : undefined;\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n\t\t\t\tthrow Parser._parseError;\n\t\t\t}\n\t\t\treturn expr;\n\t\t} catch (e) {\n\t\t\tif (!(e === Parser._parseError)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate _expr(): ContextKeyExpression | undefined {\n\t\treturn this._or();\n\t}\n\n\tprivate _or(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._and()];\n\n\t\twhile (this._matchOne(TokenType.Or)) {\n\t\t\tconst right = this._and();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n\t}\n\n\tprivate _and(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._term()];\n\n\t\twhile (this._matchOne(TokenType.And)) {\n\t\t\tconst right = this._term();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n\t}\n\n\tprivate _term(): ContextKeyExpression | undefined {\n\t\tif (this._matchOne(TokenType.Neg)) {\n\t\t\tconst peek = this._peek();\n\t\t\tswitch (peek.type) {\n\t\t\t\tcase TokenType.True:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\tcase TokenType.False:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\tcase TokenType.LParen: {\n\t\t\t\t\tthis._advance();\n\t\t\t\t\tconst expr = this._expr();\n\t\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\t\treturn expr?.negate();\n\t\t\t\t}\n\t\t\t\tcase TokenType.Str:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyNotExpr.create(peek.lexeme);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n\t\t\t}\n\t\t}\n\t\treturn this._primary();\n\t}\n\n\tprivate _primary(): ContextKeyExpression | undefined {\n\n\t\tconst peek = this._peek();\n\t\tswitch (peek.type) {\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.true();\n\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.false();\n\n\t\t\tcase TokenType.LParen: {\n\t\t\t\tthis._advance();\n\t\t\t\tconst expr = this._expr();\n\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\treturn expr;\n\t\t\t}\n\n\t\t\tcase TokenType.Str: {\n\t\t\t\t// KEY\n\t\t\t\tconst key = peek.lexeme;\n\t\t\t\tthis._advance();\n\n\t\t\t\t// =~ regex\n\t\t\t\tif (this._matchOne(TokenType.RegexOp)) {\n\n\t\t\t\t\t// @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n\t\t\t\t\tconst expr = this._peek();\n\n\t\t\t\t\tif (!this._config.regexParsingWithErrorRecovery) {\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\tif (expr.type !== TokenType.RegexStr) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst regexLexeme = expr.lexeme;\n\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (expr.type) {\n\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\tcase TokenType.Error: { // also handle an ErrorToken in case of smth such as /(/file)/\n\t\t\t\t\t\t\tconst lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n\t\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\t\tlet followingToken = this._peek();\n\t\t\t\t\t\t\tlet parenBalance = 0;\n\t\t\t\t\t\t\tfor (let i = 0; i < expr.lexeme.length; i++) {\n\t\t\t\t\t\t\t\tif (expr.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twhile (!this._isAtEnd() && followingToken.type !== TokenType.And && followingToken.type !== TokenType.Or) {\n\t\t\t\t\t\t\t\tswitch (followingToken.type) {\n\t\t\t\t\t\t\t\t\tcase TokenType.LParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\t\t\t\tcase TokenType.QuotedStr:\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < followingToken.lexeme.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (followingToken.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (parenBalance < 0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlexemeReconstruction.push(Scanner.getLexeme(followingToken));\n\t\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t\tfollowingToken = this._peek();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst regexLexeme = lexemeReconstruction.join('');\n\t\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ContextKeyExpr.regex(key, regexp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase TokenType.QuotedStr: {\n\t\t\t\t\t\t\tconst serializedValue = expr.lexeme;\n\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t// replicate old regex parsing behavior\n\n\t\t\t\t\t\t\tlet regex: RegExp | null = null;\n\n\t\t\t\t\t\t\tif (!isFalsyOrWhitespace(serializedValue)) {\n\t\t\t\t\t\t\t\tconst start = serializedValue.indexOf('/');\n\t\t\t\t\t\t\t\tconst end = serializedValue.lastIndexOf('/');\n\t\t\t\t\t\t\t\tif (start !== end && start >= 0) {\n\n\t\t\t\t\t\t\t\t\tconst value = serializedValue.slice(start + 1, end);\n\t\t\t\t\t\t\t\t\tconst caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tregex = new RegExp(value, caseIgnoreFlag);\n\t\t\t\t\t\t\t\t\t} catch (_e) {\n\t\t\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (regex === null) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', expr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regex);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', this._peek());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// [ 'not' 'in' value ]\n\t\t\t\tif (this._matchOne(TokenType.Not)) {\n\t\t\t\t\tthis._consume(TokenType.In, errorNoInAfterNot);\n\t\t\t\t\tconst right = this._value();\n\t\t\t\t\treturn ContextKeyExpr.notIn(key, right);\n\t\t\t\t}\n\n\t\t\t\t// [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n\t\t\t\tconst maybeOp = this._peek().type;\n\t\t\t\tswitch (maybeOp) {\n\t\t\t\t\tcase TokenType.Eq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcase TokenType.NotEq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // same as above with \"foo != 'true'\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n\t\t\t\t\t// consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n\t\t\t\t\tcase TokenType.Lt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.LtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.Gt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.GtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.In:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyExpr.in(key, this._value());\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase TokenType.EOF:\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n\t\t\t\tthrow Parser._parseError;\n\n\t\t\tdefault:\n\t\t\t\tthrow this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n\n\t\t}\n\t}\n\n\tprivate _value(): string {\n\t\tconst token = this._peek();\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.Str:\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\tthis._advance();\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'in';\n\t\t\tdefault:\n\t\t\t\t// this allows \"when\": \"foo == \" which's used by existing extensions\n\t\t\t\t// we do not call `_advance` on purpose - we don't want to eat unintended tokens\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate _flagsGYRe = /g|y/g;\n\tprivate _removeFlagsGY(flags: string): string {\n\t\treturn flags.replaceAll(this._flagsGYRe, '');\n\t}\n\n\t// careful: this can throw if current token is the initial one (ie index = 0)\n\tprivate _previous() {\n\t\treturn this._tokens[this._current - 1];\n\t}\n\n\tprivate _matchOne(token: TokenType) {\n\t\tif (this._check(token)) {\n\t\t\tthis._advance();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _advance() {\n\t\tif (!this._isAtEnd()) {\n\t\t\tthis._current++;\n\t\t}\n\t\treturn this._previous();\n\t}\n\n\tprivate _consume(type: TokenType, message: string) {\n\t\tif (this._check(type)) {\n\t\t\treturn this._advance();\n\t\t}\n\n\t\tthrow this._errExpectedButGot(message, this._peek());\n\t}\n\n\tprivate _errExpectedButGot(expected: string, got: Token, additionalInfo?: string) {\n\t\tconst message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n\t\tconst offset = got.offset;\n\t\tconst lexeme = Scanner.getLexeme(got);\n\t\tthis._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n\t\treturn Parser._parseError;\n\t}\n\n\tprivate _check(type: TokenType) {\n\t\treturn this._peek().type === type;\n\t}\n\n\tprivate _peek() {\n\t\treturn this._tokens[this._current];\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._peek().type === TokenType.EOF;\n\t}\n}\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static notIn(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null, true);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tprivate static _parser = new Parser({ regexParsingWithErrorRecovery: false });\n\tpublic static deserialize(serialized: string | null | undefined): ContextKeyExpression | undefined {\n\t\tif (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst expr = this._parser.parse(serialized);\n\t\treturn expr;\n\t}\n\n}\n\n\nexport function validateWhenClauses(whenClauses: string[]): any {\n\n\tconst parser = new Parser({ regexParsingWithErrorRecovery: false }); // we run with no recovery to guide users to use correct regexes\n\n\treturn whenClauses.map(whenClause => {\n\t\tparser.parse(whenClause);\n\n\t\tif (parser.lexingErrors.length > 0) {\n\t\t\treturn parser.lexingErrors.map((se: LexingError) => ({\n\t\t\t\terrorMessage: se.additionalInfo ?\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinterWithHint', \"Unexpected token. Hint: {0}\", se.additionalInfo) :\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinter', \"Unexpected token.\"),\n\t\t\t\toffset: se.offset,\n\t\t\t\tlength: se.lexeme.length,\n\t\t\t}));\n\t\t} else if (parser.parsingErrors.length > 0) {\n\t\t\treturn parser.parsingErrors.map((pe: ParsingError) => ({\n\t\t\t\terrorMessage: pe.additionalInfo ? `${pe.message}. ${pe.additionalInfo}` : pe.message,\n\t\t\t\toffset: pe.offset,\n\t\t\t\tlength: pe.lexeme.length,\n\t\t\t}));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn source.includes(item as any);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate readonly _negated: ContextKeyInExpr;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t\tthis._negated = ContextKeyInExpr.create(key, valueKey);\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._negated.cmp(other._negated);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._negated.equals(other._negated);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._negated.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} not in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._negated.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._negated;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.flags}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!(${this._actual.serialize()})`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve false AND expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A && !A case\n\t\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve true OR expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A || !A case\n\t\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null, false)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, false)!);\n\t\t\t}\n\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T extends ContextKeyValue> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string; description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport type ContextKeyValue = null | undefined | boolean | number | string\n\t| Array<null | undefined | boolean | number | string>\n\t| Record<string, null | undefined | boolean | number | string>;\n\nexport interface IContext {\n\tgetValue<T extends ContextKeyValue = ContextKeyValue>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T extends ContextKeyValue = ContextKeyValue> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean;\n}\n\nexport type IScopedContextKeyService = IContextKeyService & IDisposable;\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IScopedContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (p.type === ContextKeyExprType.False || q.type === ContextKeyExprType.True) {\n\t\t// false implies anything\n\t\t// anything implies true\n\t\treturn true;\n\t}\n\n\tif (p.type === ContextKeyExprType.Or) {\n\t\tif (q.type === ContextKeyExprType.Or) {\n\t\t\t// `a || b || c` can only imply something like `a || b || c || d`\n\t\t\treturn allElementsIncluded(p.expr, q.expr);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (q.type === ContextKeyExprType.Or) {\n\t\tfor (const element of q.expr) {\n\t\t\tif (implies(p, element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (p.type === ContextKeyExprType.And) {\n\t\tif (q.type === ContextKeyExprType.And) {\n\t\t\t// `a && b && c` implies `a && c`\n\t\t\treturn allElementsIncluded(q.expr, p.expr);\n\t\t}\n\t\tfor (const element of p.expr) {\n\t\t\tif (implies(element, q)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn p.equals(q);\n}\n\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p: ContextKeyExpression[], q: ContextKeyExpression[]): boolean {\n\tlet pIndex = 0;\n\tlet qIndex = 0;\n\twhile (pIndex < p.length && qIndex < q.length) {\n\t\tconst cmp = p[pIndex].cmp(q[qIndex]);\n\n\t\tif (cmp < 0) {\n\t\t\t// an element from `p` is missing from `q`\n\t\t\treturn false;\n\t\t} else if (cmp === 0) {\n\t\t\tpIndex++;\n\t\t\tqIndex++;\n\t\t} else {\n\t\t\tqIndex++;\n\t\t}\n\t}\n\treturn (pIndex === p.length);\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { decodeBase64, encodeBase64, VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDiffResult } from 'vs/base/common/diff/diff';\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Mimes } from 'vs/base/common/mime';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILineChange } from 'vs/editor/common/diff/smartLinesDiffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { Command, WorkspaceEditMetadata } from 'vs/editor/common/languages';\nimport { IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { UndoRedoGroup } from 'vs/platform/undoRedo/common/undoRedo';\nimport { IRevertOptions, ISaveOptions, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { IWorkingCopyBackupMeta, IWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\n\nexport const NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nexport const NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\nexport const INTERACTIVE_WINDOW_EDITOR_ID = 'workbench.editor.interactive';\n\n\nexport enum CellKind {\n\tMarkup = 1,\n\tCode = 2\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\tMimes.latex,\n\tMimes.markdown,\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\tMimes.latex,\n\tMimes.markdown,\n\t'application/json',\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text,\n];\n\n/**\n * A mapping of extension IDs who contain renderers, to notebook ids who they\n * should be treated as the same in the renderer selection logic. This is used\n * to prefer the 1st party Jupyter renderers even though they're in a separate\n * extension, for instance. See #136247.\n */\nexport const RENDERER_EQUIVALENT_EXTENSIONS: ReadonlyMap<string, ReadonlySet<string>> = new Map([\n\t['ms-toolsai.jupyter', new Set(['jupyter-notebook', 'interactive'])],\n\t['ms-toolsai.jupyter-renderers', new Set(['jupyter-notebook', 'interactive'])],\n]);\n\nexport const RENDERER_NOT_AVAILABLE = '_notAvailable';\n\nexport type ContributedNotebookRendererEntrypoint = string | { readonly extends: string; readonly path: string };\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport enum NotebookCellExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\nexport enum NotebookExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\n\nexport interface INotebookCellPreviousExecutionResult {\n\texecutionOrder?: number;\n\tsuccess?: boolean;\n\tduration?: number;\n}\n\nexport interface NotebookCellMetadata {\n\t/**\n\t * custom metadata\n\t */\n\t[key: string]: unknown;\n}\n\nexport interface NotebookCellInternalMetadata {\n\texecutionId?: string;\n\texecutionOrder?: number;\n\tlastRunSuccess?: boolean;\n\trunStartTime?: number;\n\trunStartTimeAdjustment?: number;\n\trunEndTime?: number;\n\trenderDuration?: { [key: string]: number };\n}\n\nexport interface NotebookCellCollapseState {\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n}\n\nexport interface NotebookCellDefaultCollapseConfig {\n\tcodeCell?: NotebookCellCollapseState;\n\tmarkupCell?: NotebookCellCollapseState;\n}\n\nexport type InteractiveWindowCollapseCodeCells = 'always' | 'never' | 'fromEditor';\n\nexport type TransientCellMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type CellContentMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { readonly [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n\treadonly transientOutputs: boolean;\n\treadonly transientCellMetadata: TransientCellMetadata;\n\treadonly transientDocumentMetadata: TransientDocumentMetadata;\n\treadonly cellContentMetadata: CellContentMetadata;\n}\n\n/** Note: enum values are used for sorting */\nexport const enum NotebookRendererMatch {\n\t/** Renderer has a hard dependency on an available kernel */\n\tWithHardKernelDependency = 0,\n\t/** Renderer works better with an available kernel */\n\tWithOptionalKernelDependency = 1,\n\t/** Renderer is kernel-agnostic */\n\tPure = 2,\n\t/** Renderer is for a different mimeType or has a hard dependency which is unsatisfied */\n\tNever = 3,\n}\n\n/**\n * Renderer messaging requirement. While this allows for 'optional' messaging,\n * VS Code effectively treats it the same as true right now. \"Partial\n * activation\" of extensions is a very tricky problem, which could allow\n * solving this. But for now, optional is mostly only honored for aznb.\n */\nexport const enum RendererMessagingSpec {\n\tAlways = 'always',\n\tNever = 'never',\n\tOptional = 'optional',\n}\n\nexport type NotebookRendererEntrypoint = { readonly extends: string | undefined; readonly path: URI };\n\nexport interface INotebookRendererInfo {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly entrypoint: NotebookRendererEntrypoint;\n\treadonly extensionLocation: URI;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly messaging: RendererMessagingSpec;\n\n\treadonly mimeTypes: readonly string[];\n\n\treadonly isBuiltin: boolean;\n\n\tmatchesWithoutKernel(mimeType: string): NotebookRendererMatch;\n\tmatches(mimeType: string, kernelProvides: ReadonlyArray<string>): NotebookRendererMatch;\n}\n\nexport interface INotebookStaticPreloadInfo {\n\treadonly type: string;\n\treadonly entrypoint: URI;\n\treadonly extensionLocation: URI;\n\treadonly localResourceRoots: readonly URI[];\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n\tisTrusted: boolean;\n}\n\nexport interface IOutputItemDto {\n\treadonly mime: string;\n\treadonly data: VSBuffer;\n}\n\nexport interface IOutputDto {\n\toutputs: IOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, any>;\n}\n\nexport interface ICellOutput {\n\treadonly versionId: number;\n\toutputs: IOutputItemDto[];\n\tmetadata?: Record<string, any>;\n\toutputId: string;\n\tonDidChangeData: Event<void>;\n\treplaceData(items: IOutputDto): void;\n\tappendData(items: IOutputItemDto[]): void;\n\tappendedSinceVersion(versionId: number, mime: string): VSBuffer | undefined;\n\tasDto(): IOutputDto;\n\tbumpVersion(): void;\n}\n\nexport interface CellInternalMetadataChangedEvent {\n\treadonly lastRunSuccessChanged?: boolean;\n}\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: ICellOutput[];\n\tmetadata: NotebookCellMetadata;\n\tinternalMetadata: NotebookCellInternalMetadata;\n\tgetHashValue(): number;\n\ttextBuffer: IReadonlyTextBuffer;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice>;\n\tonDidChangeOutputItems?: Event<void>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n\tonDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent>;\n}\n\nexport interface INotebookTextModel {\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata;\n\treadonly transientOptions: TransientOptions;\n\treadonly uri: URI;\n\treadonly versionId: number;\n\treadonly length: number;\n\treadonly cells: readonly ICell[];\n\treset(cells: ICellDto2[], metadata: NotebookDocumentMetadata, transientOptions: TransientOptions): void;\n\tapplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, beginSelectionState: ISelectionState | undefined, endSelectionsComputer: () => ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, computeUndoRedo?: boolean): boolean;\n\tonDidChangeContent: Event<NotebookTextModelChangedEvent>;\n\tonWillDispose: Event<void>;\n}\n\nexport type NotebookCellTextModelSplice<T> = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: T[]\n];\n\nexport type NotebookCellOutputsSplice = {\n\tstart: number /* start */;\n\tdeleteCount: number /* delete count */;\n\tnewOutputs: ICellOutput[];\n};\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents;\n\tsource: string[];\n\teol: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n}\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tChangeCellLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tOutputItem = 9,\n\tChangeCellContent = 10,\n\tChangeDocumentMetadata = 11,\n\tChangeCellInternalMetadata = 12,\n\tChangeCellMime = 13,\n\tUnknown = 100\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n\treadonly index: number;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IOutputDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookOutputItemChangedEvent {\n\treadonly kind: NotebookCellsChangeType.OutputItem;\n\treadonly index: number;\n\treadonly outputId: string;\n\treadonly outputItems: IOutputItemDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMimeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMime;\n\treadonly index: number;\n\treadonly mime: string | undefined;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookCellsChangeInternalMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellInternalMetadata;\n\treadonly index: number;\n\treadonly internalMetadata: NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean };\n\nexport enum SelectionStateType {\n\tHandle = 0,\n\tIndex = 1\n}\n\nexport interface ISelectionHandleState {\n\tkind: SelectionStateType.Handle;\n\tprimary: number | null;\n\tselections: number[];\n}\n\nexport interface ISelectionIndexState {\n\tkind: SelectionStateType.Index;\n\tfocus: ICellRange;\n\tselections: ICellRange[];\n}\n\nexport type ISelectionState = ISelectionHandleState | ISelectionIndexState;\n\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean | undefined;\n\treadonly endSelectionState: ISelectionState | undefined;\n};\n\nexport type NotebookTextModelWillAddRemoveEvent = {\n\treadonly rawEvent: NotebookCellsModelChangedEvent<ICell>;\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tMove = 6,\n\tOutputItems = 7,\n\tPartialMetadata = 8,\n\tPartialInternalMetadata = 9,\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tmime: string | undefined;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n\tcollapseState?: NotebookCellCollapseState;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputEditByHandle {\n\teditType: CellEditType.Output;\n\thandle: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputItemEdit {\n\teditType: CellEditType.OutputItems;\n\toutputId: string;\n\titems: IOutputItemDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\n// These types are nullable because we need to use 'null' on the EH side so it is JSON-stringified\nexport type NullablePartialNotebookCellMetadata = {\n\t[Key in keyof Partial<NotebookCellMetadata>]: NotebookCellMetadata[Key] | null\n};\n\nexport interface ICellPartialMetadataEdit {\n\teditType: CellEditType.PartialMetadata;\n\tindex: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport interface ICellPartialMetadataEditByHandle {\n\teditType: CellEditType.PartialMetadata;\n\thandle: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport type NullablePartialNotebookCellInternalMetadata = {\n\t[Key in keyof Partial<NotebookCellInternalMetadata>]: NotebookCellInternalMetadata[Key] | null\n};\nexport interface ICellPartialInternalMetadataEdit {\n\teditType: CellEditType.PartialInternalMetadata;\n\tindex: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellPartialInternalMetadataEditByHandle {\n\teditType: CellEditType.PartialInternalMetadata;\n\thandle: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport type IImmediateCellEditOperation = ICellOutputEditByHandle | ICellPartialMetadataEditByHandle | ICellOutputItemEdit | ICellPartialInternalMetadataEdit | ICellPartialInternalMetadataEditByHandle | ICellPartialMetadataEdit;\nexport type ICellEditOperation = IImmediateCellEditOperation | ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellPartialMetadataEdit | ICellPartialInternalMetadataEdit | IDocumentMetadataEdit | ICellMoveEdit | ICellOutputItemEdit | ICellLanguageEdit;\n\n\nexport interface IWorkspaceNotebookCellEdit {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface NotebookData {\n\treadonly cells: ICellDto2[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\n\nexport interface INotebookContributionData {\n\textension?: ExtensionIdentifier;\n\tproviderDisplayName: string;\n\tdisplayName: string;\n\tfilenamePattern: (string | glob.IRelativePattern | INotebookExclusiveDocumentFilter)[];\n\texclusive: boolean;\n}\n\n\nexport namespace CellUri {\n\n\texport const scheme = Schemas.vscodeNotebookCell;\n\n\n\tconst _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\n\tconst _padRegexp = new RegExp(`^[${_lengths.join('')}]+`);\n\tconst _radix = 7;\n\n\texport function generate(notebook: URI, handle: number): URI {\n\n\t\tconst s = handle.toString(_radix);\n\t\tconst p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n\n\t\tconst fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\t\treturn notebook.with({ scheme, fragment });\n\t}\n\n\texport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\t\tif (cell.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idx = cell.fragment.indexOf('s');\n\t\tif (idx < 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n\t\tconst _scheme = decodeBase64(cell.fragment.substring(idx + 1)).toString();\n\n\t\tif (isNaN(handle)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: cell.with({ scheme: _scheme, fragment: null })\n\t\t};\n\t}\n\n\texport function generateCellOutputUri(notebook: URI, outputId?: string) {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscodeNotebookCellOutput,\n\t\t\tfragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellOutputUri(uri: URI): { notebook: URI; outputId?: string } | undefined {\n\t\tif (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n\t\tconst scheme = match[2];\n\t\treturn {\n\t\t\toutputId,\n\t\t\tnotebook: uri.with({\n\t\t\t\tscheme: scheme || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n\n\texport function generateCellPropertyUri(notebook: URI, handle: number, scheme: string): URI {\n\t\treturn CellUri.generate(notebook, handle).with({ scheme: scheme });\n\t}\n\n\texport function parseCellPropertyUri(uri: URI, propertyScheme: string) {\n\t\tif (uri.scheme !== propertyScheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn CellUri.parse(uri.with({ scheme: scheme }));\n\t}\n}\n\nconst normalizeSlashes = (str: string) => isWindows ? str.replace(/\\//g, '\\\\') : str;\n\ninterface IMimeTypeWithMatcher {\n\tpattern: string;\n\tmatches: glob.ParsedPattern;\n}\n\nexport class MimeTypeDisplayOrder {\n\tprivate readonly order: IMimeTypeWithMatcher[];\n\n\tconstructor(\n\t\tinitialValue: readonly string[] = [],\n\t\tprivate readonly defaultOrder = NOTEBOOK_DISPLAY_ORDER,\n\t) {\n\t\tthis.order = [...new Set(initialValue)].map(pattern => ({\n\t\t\tpattern,\n\t\t\tmatches: glob.parse(normalizeSlashes(pattern))\n\t\t}));\n\t}\n\n\t/**\n\t * Returns a sorted array of the input mimetypes.\n\t */\n\tpublic sort(mimetypes: Iterable<string>): string[] {\n\t\tconst remaining = new Map(Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]));\n\t\tlet sorted: string[] = [];\n\n\t\tfor (const { matches } of this.order) {\n\t\t\tfor (const [original, normalized] of remaining) {\n\t\t\t\tif (matches(normalized)) {\n\t\t\t\t\tsorted.push(original);\n\t\t\t\t\tremaining.delete(original);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (remaining.size) {\n\t\t\tsorted = sorted.concat([...remaining.keys()].sort(\n\t\t\t\t(a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b),\n\t\t\t));\n\t\t}\n\n\t\treturn sorted;\n\t}\n\n\t/**\n\t * Records that the user selected the given mimetype over the other\n\t * possible mimetypes, prioritizing it for future reference.\n\t */\n\tpublic prioritize(chosenMimetype: string, otherMimetypes: readonly string[]) {\n\t\tconst chosenIndex = this.findIndex(chosenMimetype);\n\t\tif (chosenIndex === -1) {\n\t\t\t// always first, nothing more to do\n\t\t\tthis.order.unshift({ pattern: chosenMimetype, matches: glob.parse(normalizeSlashes(chosenMimetype)) });\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the other mimetypes that are before the chosenMimetype. Then, move\n\t\t// them after it, retaining order.\n\t\tconst uniqueIndicies = new Set(otherMimetypes.map(m => this.findIndex(m, chosenIndex)));\n\t\tuniqueIndicies.delete(-1);\n\t\tconst otherIndices = Array.from(uniqueIndicies).sort();\n\t\tthis.order.splice(chosenIndex + 1, 0, ...otherIndices.map(i => this.order[i]));\n\n\t\tfor (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n\t\t\tthis.order.splice(otherIndices[oi], 1);\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of in-order mimetype preferences.\n\t */\n\tpublic toArray() {\n\t\treturn this.order.map(o => o.pattern);\n\t}\n\n\tprivate findIndex(mimeType: string, maxIndex = this.order.length) {\n\t\tconst normalized = normalizeSlashes(mimeType);\n\t\tfor (let i = 0; i < maxIndex; i++) {\n\t\t\tif (this.order[i].matches(normalized)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\n\nexport interface INotebookLoadOptions {\n\t/**\n\t * Go to disk bypassing any cache of the model if any.\n\t */\n\tforceReadFromFile?: boolean;\n}\n\nexport interface IResolvedNotebookEditorModel extends INotebookEditorModel {\n\tnotebook: NotebookTextModel;\n}\n\nexport interface INotebookEditorModel extends IEditorModel {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly onDidSave: Event<IWorkingCopySaveEvent>;\n\treadonly onDidChangeOrphaned: Event<void>;\n\treadonly onDidChangeReadonly: Event<void>;\n\treadonly onDidRevertUntitled: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: INotebookTextModel | undefined;\n\treadonly hasErrorState: boolean;\n\tisResolved(): this is IResolvedNotebookEditorModel;\n\tisDirty(): boolean;\n\tisModified(): boolean;\n\tisReadonly(): boolean | IMarkdownString;\n\tisOrphaned(): boolean;\n\thasAssociatedFilePath(): boolean;\n\tload(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel>;\n\tsave(options?: ISaveOptions): Promise<boolean>;\n\tsaveAs(target: URI): Promise<IUntypedEditorInput | undefined>;\n\trevert(options?: IRevertOptions): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IEditorModel {\n\toriginal: IResolvedNotebookEditorModel;\n\tmodified: IResolvedNotebookEditorModel;\n}\n\nexport interface NotebookDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookSearchOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean;\n\twordSeparators?: string;\n\tincludeMarkupInput?: boolean;\n\tincludeMarkupPreview?: boolean;\n\tincludeCodeInput?: boolean;\n\tincludeOutput?: boolean;\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tconst filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tconst excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookCellStatusBarItemProvider {\n\tviewType: string;\n\tonDidChangeStatusBarItems?: Event<void>;\n\tprovideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined>;\n}\n\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult;\n\tlinesDiff?: { originalCellhandle: number; modifiedCellhandle: number; lineChanges: ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarItem {\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly color?: string | ThemeColor;\n\treadonly backgroundColor?: string | ThemeColor;\n\treadonly tooltip?: string | IMarkdownString;\n\treadonly command?: string | Command;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly opacity?: string;\n\treadonly onlyShowWhenActive?: boolean;\n}\n\nexport interface INotebookCellStatusBarItemList {\n\titems: INotebookCellStatusBarItem[];\n\tdispose?(): void;\n}\n\nexport type ShowCellStatusBarType = 'hidden' | 'visible' | 'visibleAfterExecute';\n\nexport const NotebookSetting = {\n\tdisplayOrder: 'notebook.displayOrder',\n\tcellToolbarLocation: 'notebook.cellToolbarLocation',\n\tcellToolbarVisibility: 'notebook.cellToolbarVisibility',\n\tshowCellStatusBar: 'notebook.showCellStatusBar',\n\ttextDiffEditorPreview: 'notebook.diff.enablePreview',\n\tdiffOverviewRuler: 'notebook.diff.overviewRuler',\n\texperimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n\tcompactView: 'notebook.compactView',\n\tfocusIndicator: 'notebook.cellFocusIndicator',\n\tinsertToolbarLocation: 'notebook.insertToolbarLocation',\n\tglobalToolbar: 'notebook.globalToolbar',\n\tstickyScroll: 'notebook.stickyScroll.enabled',\n\tundoRedoPerCell: 'notebook.undoRedoPerCell',\n\tconsolidatedOutputButton: 'notebook.consolidatedOutputButton',\n\tshowFoldingControls: 'notebook.showFoldingControls',\n\tdragAndDropEnabled: 'notebook.dragAndDropEnabled',\n\tcellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n\tconsolidatedRunButton: 'notebook.consolidatedRunButton',\n\topenGettingStarted: 'notebook.experimental.openGettingStarted',\n\tglobalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n\tmarkupFontSize: 'notebook.markup.fontSize',\n\tinteractiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n\toutputScrollingDeprecated: 'notebook.experimental.outputScrolling',\n\toutputScrolling: 'notebook.output.scrolling',\n\ttextOutputLineLimit: 'notebook.output.textLineLimit',\n\tformatOnSave: 'notebook.formatOnSave.enabled',\n\tformatOnCellExecution: 'notebook.formatOnCellExecution',\n\tcodeActionsOnSave: 'notebook.codeActionsOnSave',\n\toutputWordWrap: 'notebook.output.wordWrap',\n\toutputLineHeightDeprecated: 'notebook.outputLineHeight',\n\toutputLineHeight: 'notebook.output.lineHeight',\n\toutputFontSizeDeprecated: 'notebook.outputFontSize',\n\toutputFontSize: 'notebook.output.fontSize',\n\toutputFontFamilyDeprecated: 'notebook.outputFontFamily',\n\toutputFontFamily: 'notebook.output.fontFamily',\n\tfindScope: 'notebook.find.scope',\n\tlogging: 'notebook.logging',\n\tconfirmDeleteRunningCell: 'notebook.confirmDeleteRunningCell',\n\tremoteSaving: 'notebook.experimental.remoteSave'\n} as const;\n\nexport const enum CellStatusbarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport class NotebookWorkingCopyTypeIdentifier {\n\n\tprivate static _prefix = 'notebook/';\n\n\tstatic create(viewType: string): string {\n\t\treturn `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n\t}\n\n\tstatic parse(candidate: string): string | undefined {\n\t\tif (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n\t\t\treturn candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport interface NotebookExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents | undefined;\n}\n\n/**\n * Whether the provided mime type is a text stream like `stdout`, `stderr`.\n */\nexport function isTextStreamMime(mimeType: string) {\n\treturn ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\n\n\nconst textDecoder = new TextDecoder();\n\n/**\n * Given a stream of individual stdout outputs, this function will return the compressed lines, escaping some of the common terminal escape codes.\n * E.g. some terminal escape codes would result in the previous line getting cleared, such if we had 3 lines and\n * last line contained such a code, then the result string would be just the first two lines.\n * @returns a single VSBuffer with the concatenated and compressed data, and whether any compression was done.\n */\nexport function compressOutputItemStreams(outputs: Uint8Array[]) {\n\tconst buffers: Uint8Array[] = [];\n\tlet startAppending = false;\n\n\t// Pick the first set of outputs with the same mime type.\n\tfor (const output of outputs) {\n\t\tif ((buffers.length === 0 || startAppending)) {\n\t\t\tbuffers.push(output);\n\t\t\tstartAppending = true;\n\t\t}\n\t}\n\n\tlet didCompression = compressStreamBuffer(buffers);\n\tconst concatenated = VSBuffer.concat(buffers.map(buffer => VSBuffer.wrap(buffer)));\n\tconst data = formatStreamText(concatenated);\n\tdidCompression = didCompression || data.byteLength !== concatenated.byteLength;\n\treturn { data, didCompression };\n}\n\nexport const MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams: Uint8Array[]) {\n\tlet didCompress = false;\n\tstreams.forEach((stream, index) => {\n\t\tif (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousStream = streams[index - 1];\n\n\t\t// Remove the previous line if required.\n\t\tconst command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\tif (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n\t\t\tconst lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n\t\t\tif (lastIndexOfLineFeed === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdidCompress = true;\n\t\t\tstreams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n\t\t\tstreams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\t}\n\t});\n\treturn didCompress;\n}\n\n\n\n/**\n * Took this from jupyter/notebook\n * https://github.com/jupyter/notebook/blob/b8b66332e2023e83d2ee04f83d8814f567e01a4e/notebook/static/base/js/utils.js\n * Remove characters that are overridden by backspace characters\n */\nfunction fixBackspace(txt: string) {\n\tlet tmp = txt;\n\tdo {\n\t\ttxt = tmp;\n\t\t// Cancel out anything-but-newline followed by backspace\n\t\ttmp = txt.replace(/[^\\n]\\x08/gm, '');\n\t} while (tmp.length < txt.length);\n\treturn txt;\n}\n\n/**\n * Remove chunks that should be overridden by the effect of carriage return characters\n * From https://github.com/jupyter/notebook/blob/master/notebook/static/base/js/utils.js\n */\nfunction fixCarriageReturn(txt: string) {\n\ttxt = txt.replace(/\\r+\\n/gm, '\\n'); // \\r followed by \\n --> newline\n\twhile (txt.search(/\\r[^$]/g) > -1) {\n\t\tconst base = txt.match(/^(.*)\\r+/m)![1];\n\t\tlet insert = txt.match(/\\r+(.*)$/m)![1];\n\t\tinsert = insert + base.slice(insert.length, base.length);\n\t\ttxt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n\t}\n\treturn txt;\n}\n\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer: VSBuffer): VSBuffer {\n\t// We have special handling for backspace and carriage return characters.\n\t// Don't unnecessary decode the bytes if we don't need to perform any processing.\n\tif (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n\t\treturn buffer;\n\t}\n\t// Do the same thing jupyter is doing\n\treturn VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\n\nexport interface INotebookKernelSourceAction {\n\treadonly label: string;\n\treadonly description?: string;\n\treadonly detail?: string;\n\treadonly command?: string | Command;\n\treadonly documentation?: UriComponents | string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport { doHash, hash, numberHash } from 'vs/base/common/hash';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport * as model from 'vs/editor/common/model';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { CellKind, ICellDto2, IMainCellDto, INotebookDiffResult, IOutputDto, NotebookCellInternalMetadata, NotebookCellMetadata, NotebookCellsChangedEventDto, NotebookCellsChangeType, NotebookCellTextModelSplice, NotebookData, NotebookDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { Range } from 'vs/editor/common/core/range';\nimport { INotebookWorkerHost } from 'vs/workbench/contrib/notebook/common/services/notebookWorkerHost';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { SearchParams } from 'vs/editor/common/model/textModelSearch';\n\nfunction bufferHash(buffer: VSBuffer): number {\n\tlet initialHashVal = numberHash(104579, 0);\n\tfor (let k = 0; k < buffer.buffer.length; k++) {\n\t\tinitialHashVal = doHash(buffer.buffer[k], initialHashVal);\n\t}\n\n\treturn initialHashVal;\n}\n\nclass MirrorCell {\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\tbuilder.acceptChunk(Array.isArray(this._source) ? this._source.join('\\n') : this._source);\n\t\tconst bufferFactory = builder.finish(true);\n\t\tthis._textBuffer = bufferFactory.create(model.DefaultEndOfLine.LF).textBuffer;\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _primaryKey?: number | null = null;\n\tprimaryKey(): number | null {\n\t\tif (this._primaryKey === undefined) {\n\t\t\tthis._primaryKey = hash(this.getValue());\n\t\t}\n\n\t\treturn this._primaryKey;\n\t}\n\n\tprivate _hash: number | null = null;\n\n\tconstructor(\n\t\treadonly handle: number,\n\t\tprivate _source: string | string[],\n\t\tpublic language: string,\n\t\tpublic cellKind: CellKind,\n\t\tpublic outputs: IOutputDto[],\n\t\tpublic metadata?: NotebookCellMetadata,\n\t\tpublic internalMetadata?: NotebookCellInternalMetadata,\n\n\t) { }\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.LF);\n\t}\n\n\tgetComparisonValue(): number {\n\t\tif (this._primaryKey !== null) {\n\t\t\treturn this._primaryKey!;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.language), hash(this.getValue()), this.metadata, this.internalMetadata, this.outputs.map(op => ({\n\t\t\toutputs: op.outputs.map(output => ({\n\t\t\t\tmime: output.mime,\n\t\t\t\tdata: bufferHash(output.data)\n\t\t\t})),\n\t\t\tmetadata: op.metadata\n\t\t}))]);\n\t\treturn this._hash;\n\t}\n\n\tgetHashValue() {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.getValue()), this.language, this.metadata, this.internalMetadata]);\n\t\treturn this._hash;\n\t}\n}\n\nclass MirrorNotebookDocument {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic cells: MirrorCell[],\n\t\tpublic metadata: NotebookDocumentMetadata,\n\t) {\n\t}\n\n\tacceptModelChanged(event: NotebookCellsChangedEventDto) {\n\t\t// note that the cell content change is not applied to the MirrorCell\n\t\t// but it's fine as if a cell content is modified after the first diff, its position will not change any more\n\t\t// TODO@rebornix, but it might lead to interesting bugs in the future.\n\t\tevent.rawEvents.forEach(e => {\n\t\t\tif (e.kind === NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(e.changes);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Move) {\n\t\t\t\tconst cells = this.cells.splice(e.index, 1);\n\t\t\t\tthis.cells.splice(e.newIdx, 0, ...cells);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Output) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.outputs = e.outputs;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellLanguage) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.language = e.language;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.metadata = e.metadata;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellInternalMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.internalMetadata = e.internalMetadata;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _assertIndex(index: number): void {\n\t\tif (index < 0 || index >= this.cells.length) {\n\t\t\tthrow new Error(`Illegal index ${index}. Cells length: ${this.cells.length}`);\n\t\t}\n\t}\n\n\t_spliceNotebookCells(splices: NotebookCellTextModelSplice<IMainCellDto>[]) {\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\t\t\t\treturn new MirrorCell(\n\t\t\t\t\t(cell as unknown as IMainCellDto).handle,\n\t\t\t\t\tcell.source,\n\t\t\t\t\tcell.language,\n\t\t\t\t\tcell.cellKind,\n\t\t\t\t\tcell.outputs,\n\t\t\t\t\tcell.metadata\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis.cells.splice(splice[0], splice[1], ...newCells);\n\t\t});\n\t}\n}\n\nclass CellSequence implements ISequence {\n\n\tconstructor(readonly textModel: MirrorNotebookDocument) {\n\t}\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\tconst hashValue = new Int32Array(this.textModel.cells.length);\n\t\tfor (let i = 0; i < this.textModel.cells.length; i++) {\n\t\t\thashValue[i] = this.textModel.cells[i].getComparisonValue();\n\t\t}\n\n\t\treturn hashValue;\n\t}\n\n\tgetCellHash(cell: ICellDto2) {\n\t\tconst source = Array.isArray(cell.source) ? cell.source.join('\\n') : cell.source;\n\t\tconst hashVal = hash([hash(source), cell.metadata]);\n\t\treturn hashVal;\n\t}\n}\n\nexport class NotebookEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorNotebookDocument };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\tdispose(): void {\n\t}\n\n\tpublic acceptNewModel(uri: string, data: NotebookData): void {\n\t\tthis._models[uri] = new MirrorNotebookDocument(URI.parse(uri), data.cells.map(dto => new MirrorCell(\n\t\t\t(dto as unknown as IMainCellDto).handle,\n\t\t\tdto.source,\n\t\t\tdto.language,\n\t\t\tdto.cellKind,\n\t\t\tdto.outputs,\n\t\t\tdto.metadata\n\t\t)), data.metadata);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, event: NotebookCellsChangedEventDto) {\n\t\tconst model = this._models[strURL];\n\t\tmodel?.acceptModelChanged(event);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tcomputeDiff(originalUrl: string, modifiedUrl: string): INotebookDiffResult {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\n\t\tconst diff = new LcsDiff(new CellSequence(original), new CellSequence(modified));\n\t\tconst diffResult = diff.ComputeDiff(false);\n\n\t\t/* let cellLineChanges: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: ILineChange[] }[] = [];\n\n\t\tdiffResult.changes.forEach(change => {\n\t\t\tif (change.modifiedLength === 0) {\n\t\t\t\t// deletion ...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (change.originalLength === 0) {\n\t\t\t\t// insertion\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = Math.min(change.modifiedLength, change.originalLength); i < len; i++) {\n\t\t\t\tlet originalIndex = change.originalStart + i;\n\t\t\t\tlet modifiedIndex = change.modifiedStart + i;\n\n\t\t\t\tconst originalCell = original.cells[originalIndex];\n\t\t\t\tconst modifiedCell = modified.cells[modifiedIndex];\n\n\t\t\t\tif (originalCell.getValue() !== modifiedCell.getValue()) {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} content change`);\n\t\t\t\t\tconst originalLines = originalCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst modifiedLines = modifiedCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\t\t\t\tshouldComputeCharChanges: true,\n\t\t\t\t\t\tshouldPostProcessCharChanges: true,\n\t\t\t\t\t\tshouldIgnoreTrimWhitespace: false,\n\t\t\t\t\t\tshouldMakePrettyDiff: true,\n\t\t\t\t\t\tmaxComputationTime: 5000\n\t\t\t\t\t});\n\n\t\t\t\t\tconst lineChanges = diffComputer.computeDiff().changes;\n\n\t\t\t\t\tcellLineChanges.push({\n\t\t\t\t\t\toriginalCellhandle: originalCell.handle,\n\t\t\t\t\t\tmodifiedCellhandle: modifiedCell.handle,\n\t\t\t\t\t\tlineChanges\n\t\t\t\t\t});\n\n\t\t\t\t\t// console.log(lineDecorations);\n\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} metadata change`);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n */\n\t\treturn {\n\t\t\tcellsDiff: diffResult,\n\t\t\t// linesDiff: cellLineChanges\n\t\t};\n\t}\n\n\tcanPromptRecommendation(modelUrl: string): boolean {\n\t\tconst model = this._getModel(modelUrl);\n\t\tconst cells = model.cells;\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst cell = cells[i];\n\t\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (cell.language !== 'python') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst lineCount = cell.textBuffer.getLineCount();\n\t\t\tconst maxLineCount = Math.min(lineCount, 20);\n\t\t\tconst range = new Range(1, 1, maxLineCount, cell.textBuffer.getLineLength(maxLineCount) + 1);\n\t\t\tconst searchParams = new SearchParams('import\\\\s*pandas|from\\\\s*pandas', true, false, null);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\t\tif (!searchData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cellMatches = cell.textBuffer.findMatchesLineByLine(range, searchData, true, 1);\n\t\t\tif (cellMatches.length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected _getModel(uri: string): MirrorNotebookDocument {\n\t\treturn this._models[uri];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: INotebookWorkerHost): IRequestHandler {\n\treturn new NotebookEditorSimpleWorker();\n}\n"]}
{"version":3,"sources":["fake","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/amd.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/observableInternal/logging.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/observableInternal/base.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/observableInternal/autorun.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/observableInternal/derived.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/observableInternal/utils.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/observable.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/stream.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/buffer.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/symbols.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/core/eolCounter.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/encodedTokenAttributes.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/model/fixedArray.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/tokens/lineTokens.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/tokens/contiguousTokensEditing.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/tokens/contiguousMultilineTokens.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/tokens/contiguousMultilineTokensBuilder.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/extpath.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/network.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/amdX.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/resources.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/base/common/async.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/languages/nullTokenize.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/editor/common/model/textModelTokens.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateWorkerTokenizer.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/services/textMate/common/TMScopeRegistry.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/services/textMate/common/TMGrammarFactory.ts","file:///Users/carey/Documents/Work/Github/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.worker.ts"],"names":[],"mappings":"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","file":"textMateTokenizationWorker.worker.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// ESM-comment-begin\nexport const isESM = false;\n// ESM-comment-end\n// ESM-uncomment-begin\n// export const isESM = true;\n// ESM-uncomment-end\n\nexport abstract class LoaderStats {\n\tabstract get amdLoad(): [string, number][];\n\tabstract get amdInvoke(): [string, number][];\n\tabstract get nodeRequire(): [string, number][];\n\tabstract get nodeEval(): [string, number][];\n\tabstract get nodeRequireTotal(): number;\n\n\tstatic get(): LoaderStats {\n\t\tconst amdLoadScript = new Map<string, number>();\n\t\tconst amdInvokeFactory = new Map<string, number>();\n\t\tconst nodeRequire = new Map<string, number>();\n\t\tconst nodeEval = new Map<string, number>();\n\n\t\tfunction mark(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tif (map.has(stat.detail)) {\n\t\t\t\t// console.warn('BAD events, DOUBLE start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, -stat.timestamp);\n\t\t}\n\n\t\tfunction diff(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tconst duration = map.get(stat.detail);\n\t\t\tif (!duration) {\n\t\t\t\t// console.warn('BAD events, end WITHOUT start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (duration >= 0) {\n\t\t\t\t// console.warn('BAD events, DOUBLE end', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, duration + stat.timestamp);\n\t\t}\n\n\t\tlet stats: readonly LoaderEvent[] = [];\n\t\tif (typeof require === 'function' && typeof require.getStats === 'function') {\n\t\t\tstats = require.getStats().slice(0).sort((a, b) => a.timestamp - b.timestamp);\n\t\t}\n\n\t\tfor (const stat of stats) {\n\t\t\tswitch (stat.type) {\n\t\t\t\tcase LoaderEventType.BeginLoadingScript:\n\t\t\t\t\tmark(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndLoadingScriptOK:\n\t\t\t\tcase LoaderEventType.EndLoadingScriptError:\n\t\t\t\t\tdiff(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.BeginInvokeFactory:\n\t\t\t\t\tmark(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndInvokeFactory:\n\t\t\t\t\tdiff(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginNativeRequire:\n\t\t\t\t\tmark(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndNativeRequire:\n\t\t\t\t\tdiff(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginEvaluatingScript:\n\t\t\t\t\tmark(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndEvaluatingScript:\n\t\t\t\t\tdiff(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet nodeRequireTotal = 0;\n\t\tnodeRequire.forEach(value => nodeRequireTotal += value);\n\n\t\tfunction to2dArray(map: Map<string, number>): [string, number][] {\n\t\t\tconst res: [string, number][] = [];\n\t\t\tmap.forEach((value, index) => res.push([index, value]));\n\t\t\treturn res;\n\t\t}\n\n\t\treturn {\n\t\t\tamdLoad: to2dArray(amdLoadScript),\n\t\t\tamdInvoke: to2dArray(amdInvokeFactory),\n\t\t\tnodeRequire: to2dArray(nodeRequire),\n\t\t\tnodeEval: to2dArray(nodeEval),\n\t\t\tnodeRequireTotal\n\t\t};\n\t}\n\n\tstatic toMarkdownTable(header: string[], rows: Array<Array<{ toString(): string } | undefined>>): string {\n\t\tlet result = '';\n\n\t\tconst lengths: number[] = [];\n\t\theader.forEach((cell, ci) => {\n\t\t\tlengths[ci] = cell.length;\n\t\t});\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell === 'undefined') {\n\t\t\t\t\tcell = row[ci] = '-';\n\t\t\t\t}\n\t\t\t\tconst len = cell.toString().length;\n\t\t\t\tlengths[ci] = Math.max(len, lengths[ci]);\n\t\t\t});\n\t\t});\n\n\t\t// header\n\t\theader.forEach((cell, ci) => { result += `| ${cell + ' '.repeat(lengths[ci] - cell.toString().length)} `; });\n\t\tresult += '|\\n';\n\t\theader.forEach((_cell, ci) => { result += `| ${'-'.repeat(lengths[ci])} `; });\n\t\tresult += '|\\n';\n\n\t\t// cells\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell !== 'undefined') {\n\t\t\t\t\tresult += `| ${cell + ' '.repeat(lengths[ci] - cell.toString().length)} `;\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult += '|\\n';\n\t\t});\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AutorunObserver } from 'vs/base/common/observableInternal/autorun';\nimport { IObservable, ObservableValue, TransactionImpl } from 'vs/base/common/observableInternal/base';\nimport { Derived } from 'vs/base/common/observableInternal/derived';\nimport { FromEventObservable } from 'vs/base/common/observableInternal/utils';\n\nlet globalObservableLogger: IObservableLogger | undefined;\n\nexport function setLogger(logger: IObservableLogger): void {\n\tglobalObservableLogger = logger;\n}\n\nexport function getLogger(): IObservableLogger | undefined {\n\treturn globalObservableLogger;\n}\n\ninterface IChangeInformation {\n\toldValue: unknown;\n\tnewValue: unknown;\n\tchange: unknown;\n\tdidChange: boolean;\n\thadValue: boolean;\n}\n\nexport interface IObservableLogger {\n\thandleObservableChanged(observable: ObservableValue<any, any>, info: IChangeInformation): void;\n\thandleFromEventObservableTriggered(observable: FromEventObservable<any, any>, info: IChangeInformation): void;\n\n\thandleAutorunCreated(autorun: AutorunObserver): void;\n\thandleAutorunTriggered(autorun: AutorunObserver): void;\n\thandleAutorunFinished(autorun: AutorunObserver): void;\n\n\thandleDerivedCreated(observable: Derived<any>): void;\n\thandleDerivedRecomputed(observable: Derived<any>, info: IChangeInformation): void;\n\n\thandleBeginTransaction(transaction: TransactionImpl): void;\n\thandleEndTransaction(): void;\n}\n\nexport class ConsoleObservableLogger implements IObservableLogger {\n\tprivate indentation = 0;\n\n\tprivate textToConsoleArgs(text: ConsoleText): unknown[] {\n\t\treturn consoleTextToArgs([\n\t\t\tnormalText(repeat('|  ', this.indentation)),\n\t\t\ttext,\n\t\t]);\n\t}\n\n\tprivate formatInfo(info: IChangeInformation): ConsoleText[] {\n\t\tif (!info.hadValue) {\n\t\t\treturn [\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.newValue, 60), {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t}),\n\t\t\t\tnormalText(` (initial)`),\n\t\t\t];\n\t\t}\n\t\treturn info.didChange\n\t\t\t? [\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.oldValue, 70), {\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tstrikeThrough: true,\n\t\t\t\t}),\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.newValue, 60), {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t}),\n\t\t\t]\n\t\t\t: [normalText(` (unchanged)`)];\n\t}\n\n\thandleObservableChanged(observable: IObservable<unknown, unknown>, info: IChangeInformation): void {\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('observable value changed'),\n\t\t\tstyled(observable.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t]));\n\t}\n\n\tprivate readonly changedObservablesSets = new WeakMap<object, Set<IObservable<any, any>>>();\n\n\tformatChanges(changes: Set<IObservable<any, any>>): ConsoleText | undefined {\n\t\tif (changes.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn styled(\n\t\t\t' (changed deps: ' +\n\t\t\t[...changes].map((o) => o.debugName).join(', ') +\n\t\t\t')',\n\t\t\t{ color: 'gray' }\n\t\t);\n\t}\n\n\thandleDerivedCreated(derived: Derived<unknown>): void {\n\t\tconst existingHandleChange = derived.handleChange;\n\t\tthis.changedObservablesSets.set(derived, new Set());\n\t\tderived.handleChange = (observable, change) => {\n\t\t\tthis.changedObservablesSets.get(derived)!.add(observable);\n\t\t\treturn existingHandleChange.apply(derived, [observable, change]);\n\t\t};\n\t}\n\n\thandleDerivedRecomputed(derived: Derived<unknown>, info: IChangeInformation): void {\n\t\tconst changedObservables = this.changedObservablesSets.get(derived)!;\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('derived recomputed'),\n\t\t\tstyled(derived.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t\tthis.formatChanges(changedObservables),\n\t\t\t{ data: [{ fn: derived._computeFn }] }\n\t\t]));\n\t\tchangedObservables.clear();\n\t}\n\n\thandleFromEventObservableTriggered(observable: FromEventObservable<any, any>, info: IChangeInformation): void {\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('observable from event triggered'),\n\t\t\tstyled(observable.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t\t{ data: [{ fn: observable._getValue }] }\n\t\t]));\n\t}\n\n\thandleAutorunCreated(autorun: AutorunObserver): void {\n\t\tconst existingHandleChange = autorun.handleChange;\n\t\tthis.changedObservablesSets.set(autorun, new Set());\n\t\tautorun.handleChange = (observable, change) => {\n\t\t\tthis.changedObservablesSets.get(autorun)!.add(observable);\n\t\t\treturn existingHandleChange.apply(autorun, [observable, change]);\n\t\t};\n\t}\n\n\thandleAutorunTriggered(autorun: AutorunObserver): void {\n\t\tconst changedObservables = this.changedObservablesSets.get(autorun)!;\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('autorun'),\n\t\t\tstyled(autorun.debugName, { color: 'BlueViolet' }),\n\t\t\tthis.formatChanges(changedObservables),\n\t\t\t{ data: [{ fn: autorun._runFn }] }\n\t\t]));\n\t\tchangedObservables.clear();\n\t\tthis.indentation++;\n\t}\n\n\thandleAutorunFinished(autorun: AutorunObserver): void {\n\t\tthis.indentation--;\n\t}\n\n\thandleBeginTransaction(transaction: TransactionImpl): void {\n\t\tlet transactionName = transaction.getDebugName();\n\t\tif (transactionName === undefined) {\n\t\t\ttransactionName = '';\n\t\t}\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('transaction'),\n\t\t\tstyled(transactionName, { color: 'BlueViolet' }),\n\t\t\t{ data: [{ fn: transaction._fn }] }\n\t\t]));\n\t\tthis.indentation++;\n\t}\n\n\thandleEndTransaction(): void {\n\t\tthis.indentation--;\n\t}\n}\n\ntype ConsoleText =\n\t| (ConsoleText | undefined)[]\n\t| { text: string; style: string; data?: unknown[] }\n\t| { data: unknown[] };\n\nfunction consoleTextToArgs(text: ConsoleText): unknown[] {\n\tconst styles = new Array<any>();\n\tconst data: unknown[] = [];\n\tlet firstArg = '';\n\n\tfunction process(t: ConsoleText): void {\n\t\tif ('length' in t) {\n\t\t\tfor (const item of t) {\n\t\t\t\tif (item) {\n\t\t\t\t\tprocess(item);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ('text' in t) {\n\t\t\tfirstArg += `%c${t.text}`;\n\t\t\tstyles.push(t.style);\n\t\t\tif (t.data) {\n\t\t\t\tdata.push(...t.data);\n\t\t\t}\n\t\t} else if ('data' in t) {\n\t\t\tdata.push(...t.data);\n\t\t}\n\t}\n\n\tprocess(text);\n\n\tconst result = [firstArg, ...styles];\n\tresult.push(...data);\n\treturn result;\n}\n\nfunction normalText(text: string): ConsoleText {\n\treturn styled(text, { color: 'black' });\n}\n\nfunction formatKind(kind: string): ConsoleText {\n\treturn styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\n\nfunction styled(\n\ttext: string,\n\toptions: { color: string; strikeThrough?: boolean; bold?: boolean } = {\n\t\tcolor: 'black',\n\t}\n): ConsoleText {\n\tfunction objToCss(styleObj: Record<string, string>): string {\n\t\treturn Object.entries(styleObj).reduce(\n\t\t\t(styleString, [propName, propValue]) => {\n\t\t\t\treturn `${styleString}${propName}:${propValue};`;\n\t\t\t},\n\t\t\t''\n\t\t);\n\t}\n\n\tconst style: Record<string, string> = {\n\t\tcolor: options.color,\n\t};\n\tif (options.strikeThrough) {\n\t\tstyle['text-decoration'] = 'line-through';\n\t}\n\tif (options.bold) {\n\t\tstyle['font-weight'] = 'bold';\n\t}\n\n\treturn {\n\t\ttext,\n\t\tstyle: objToCss(style),\n\t};\n}\n\nfunction formatValue(value: unknown, availableLen: number): string {\n\tswitch (typeof value) {\n\t\tcase 'number':\n\t\t\treturn '' + value;\n\t\tcase 'string':\n\t\t\tif (value.length + 2 <= availableLen) {\n\t\t\t\treturn `\"${value}\"`;\n\t\t\t}\n\t\t\treturn `\"${value.substr(0, availableLen - 7)}\"+...`;\n\n\t\tcase 'boolean':\n\t\t\treturn value ? 'true' : 'false';\n\t\tcase 'undefined':\n\t\t\treturn 'undefined';\n\t\tcase 'object':\n\t\t\tif (value === null) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn formatArray(value, availableLen);\n\t\t\t}\n\t\t\treturn formatObject(value, availableLen);\n\t\tcase 'symbol':\n\t\t\treturn value.toString();\n\t\tcase 'function':\n\t\t\treturn `[[Function${value.name ? ' ' + value.name : ''}]]`;\n\t\tdefault:\n\t\t\treturn '' + value;\n\t}\n}\n\nfunction formatArray(value: unknown[], availableLen: number): string {\n\tlet result = '[ ';\n\tlet first = true;\n\tfor (const val of value) {\n\t\tif (!first) {\n\t\t\tresult += ', ';\n\t\t}\n\t\tif (result.length - 5 > availableLen) {\n\t\t\tresult += '...';\n\t\t\tbreak;\n\t\t}\n\t\tfirst = false;\n\t\tresult += `${formatValue(val, availableLen - result.length)}`;\n\t}\n\tresult += ' ]';\n\treturn result;\n}\n\nfunction formatObject(value: object, availableLen: number): string {\n\tlet result = '{ ';\n\tlet first = true;\n\tfor (const [key, val] of Object.entries(value)) {\n\t\tif (!first) {\n\t\t\tresult += ', ';\n\t\t}\n\t\tif (result.length - 5 > availableLen) {\n\t\t\tresult += '...';\n\t\t\tbreak;\n\t\t}\n\t\tfirst = false;\n\t\tresult += `${key}: ${formatValue(val, availableLen - result.length)}`;\n\t}\n\tresult += ' }';\n\treturn result;\n}\n\nfunction repeat(str: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 1; i <= count; i++) {\n\t\tresult += str;\n\t}\n\treturn result;\n}\n\nfunction padStr(str: string, length: number): string {\n\twhile (str.length < length) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport type { derived } from 'vs/base/common/observableInternal/derived';\nimport { getLogger } from 'vs/base/common/observableInternal/logging';\n\n/**\n * Represents an observable value.\n * @template T The type of the value.\n * @template TChange The type of delta information (usually `void` and only used in advanced scenarios).\n */\nexport interface IObservable<T, TChange = unknown> {\n\t/**\n\t * Returns the current value.\n\t *\n\t * Calls {@link IObserver.handleChange} if the observable notices that the value changed.\n\t * Must not be called from {@link IObserver.handleChange}!\n\t */\n\tget(): T;\n\n\t/**\n\t * Forces the observable to check for and report changes.\n\t *\n\t * Has the same effect as calling {@link IObservable.get}, but does not force the observable\n\t * to actually construct the value, e.g. if change deltas are used.\n\t * Calls {@link IObserver.handleChange} if the observable notices that the value changed.\n\t * Must not be called from {@link IObserver.handleChange}!\n\t */\n\treportChanges(): void;\n\n\t/**\n\t * Adds the observer to the set of subscribed observers.\n\t * This method is idempotent.\n\t */\n\taddObserver(observer: IObserver): void;\n\n\t/**\n\t * Removes the observer from the set of subscribed observers.\n\t * This method is idempotent.\n\t */\n\tremoveObserver(observer: IObserver): void;\n\n\t/**\n\t * Reads the current value and subscribes to this observable.\n\t *\n\t * Just calls {@link IReader.readObservable} if a reader is given, otherwise {@link IObservable.get}\n\t * (see {@link ConvenientObservable.read}).\n\t */\n\tread(reader: IReader | undefined): T;\n\n\t/**\n\t * Creates a derived observable that depends on this observable.\n\t * Use the reader to read other observables\n\t * (see {@link ConvenientObservable.map}).\n\t */\n\tmap<TNew>(fn: (value: T, reader: IReader) => TNew): IObservable<TNew>;\n\n\t/**\n\t * A human-readable name for debugging purposes.\n\t */\n\treadonly debugName: string;\n\n\t/**\n\t * This property captures the type of the change object. Do not use it at runtime!\n\t */\n\treadonly TChange: TChange;\n}\n\nexport interface IReader {\n\t/**\n\t * Reads the value of an observable and subscribes to it.\n\t */\n\treadObservable<T>(observable: IObservable<T, any>): T;\n}\n\n/**\n * Represents an observer that can be subscribed to an observable.\n *\n * If an observer is subscribed to an observable and that observable didn't signal\n * a change through one of the observer methods, the observer can assume that the\n * observable didn't change.\n * If an observable reported a possible change, {@link IObservable.reportChanges} forces\n * the observable to report an actual change if there was one.\n */\nexport interface IObserver {\n\t/**\n\t * Signals that the given observable might have changed and a transaction potentially modifying that observable started.\n\t * Before the given observable can call this method again, is must call {@link IObserver.endUpdate}.\n\t *\n\t * The method {@link IObservable.reportChanges} can be used to force the observable to report the changes.\n\t */\n\tbeginUpdate<T>(observable: IObservable<T>): void;\n\n\t/**\n\t * Signals that the transaction that potentially modified the given observable ended.\n\t */\n\tendUpdate<T>(observable: IObservable<T>): void;\n\n\t/**\n\t * Signals that the given observable might have changed.\n\t * The method {@link IObservable.reportChanges} can be used to force the observable to report the changes.\n\t *\n\t * Implementations must not call into other observables, as they might not have received this event yet!\n\t * The change should be processed lazily or in {@link IObserver.endUpdate}.\n\t */\n\thandlePossibleChange<T>(observable: IObservable<T>): void;\n\n\t/**\n\t * Signals that the given observable changed.\n\t *\n\t * Implementations must not call into other observables, as they might not have received this event yet!\n\t * The change should be processed lazily or in {@link IObserver.endUpdate}.\n\t */\n\thandleChange<T, TChange>(observable: IObservable<T, TChange>, change: TChange): void;\n}\n\nexport interface ISettable<T, TChange = void> {\n\tset(value: T, transaction: ITransaction | undefined, change: TChange): void;\n}\n\nexport interface ITransaction {\n\t/**\n\t * Calls {@link Observer.beginUpdate} immediately\n\t * and {@link Observer.endUpdate} when the transaction ends.\n\t */\n\tupdateObserver(observer: IObserver, observable: IObservable<any, any>): void;\n}\n\nlet _derived: typeof derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerived(derived: typeof _derived) {\n\t_derived = derived;\n}\n\nexport abstract class ConvenientObservable<T, TChange> implements IObservable<T, TChange> {\n\tget TChange(): TChange { return null!; }\n\n\tpublic abstract get(): T;\n\n\tpublic reportChanges(): void {\n\t\tthis.get();\n\t}\n\n\tpublic abstract addObserver(observer: IObserver): void;\n\tpublic abstract removeObserver(observer: IObserver): void;\n\n\t/** @sealed */\n\tpublic read(reader: IReader | undefined): T {\n\t\tif (reader) {\n\t\t\treturn reader.readObservable(this);\n\t\t} else {\n\t\t\treturn this.get();\n\t\t}\n\t}\n\n\t/** @sealed */\n\tpublic map<TNew>(fn: (value: T, reader: IReader) => TNew): IObservable<TNew> {\n\t\treturn _derived(\n\t\t\t(reader) => fn(this.read(reader), reader),\n\t\t\t() => {\n\t\t\t\tconst name = getFunctionName(fn);\n\t\t\t\tif (name !== undefined) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\n\t\t\t\t// regexp to match `x => x.y` where x and y can be arbitrary identifiers (uses backref):\n\t\t\t\tconst regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n\t\t\t\tconst match = regexp.exec(fn.toString());\n\t\t\t\tif (match) {\n\t\t\t\t\treturn `${this.debugName}.${match[2]}`;\n\t\t\t\t}\n\t\t\t\treturn `${this.debugName} (mapped)`;\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic abstract get debugName(): string;\n}\n\nexport abstract class BaseObservable<T, TChange = void> extends ConvenientObservable<T, TChange> {\n\tprotected readonly observers = new Set<IObserver>();\n\n\tpublic addObserver(observer: IObserver): void {\n\t\tconst len = this.observers.size;\n\t\tthis.observers.add(observer);\n\t\tif (len === 0) {\n\t\t\tthis.onFirstObserverAdded();\n\t\t}\n\t}\n\n\tpublic removeObserver(observer: IObserver): void {\n\t\tconst deleted = this.observers.delete(observer);\n\t\tif (deleted && this.observers.size === 0) {\n\t\t\tthis.onLastObserverRemoved();\n\t\t}\n\t}\n\n\tprotected onFirstObserverAdded(): void { }\n\tprotected onLastObserverRemoved(): void { }\n}\n\nexport function transaction(fn: (tx: ITransaction) => void, getDebugName?: () => string): void {\n\tconst tx = new TransactionImpl(fn, getDebugName);\n\ttry {\n\t\tfn(tx);\n\t} finally {\n\t\ttx.finish();\n\t}\n}\n\nexport function subtransaction(tx: ITransaction | undefined, fn: (tx: ITransaction) => void, getDebugName?: () => string): void {\n\tif (!tx) {\n\t\ttransaction(fn, getDebugName);\n\t} else {\n\t\tfn(tx);\n\t}\n}\n\nexport class TransactionImpl implements ITransaction {\n\tprivate updatingObservers: { observer: IObserver; observable: IObservable<any> }[] | null = [];\n\n\tconstructor(public readonly _fn: Function, private readonly _getDebugName?: () => string) {\n\t\tgetLogger()?.handleBeginTransaction(this);\n\t}\n\n\tpublic getDebugName(): string | undefined {\n\t\tif (this._getDebugName) {\n\t\t\treturn this._getDebugName();\n\t\t}\n\t\treturn getFunctionName(this._fn);\n\t}\n\n\tpublic updateObserver(observer: IObserver, observable: IObservable<any>): void {\n\t\tthis.updatingObservers!.push({ observer, observable });\n\t\tobserver.beginUpdate(observable);\n\t}\n\n\tpublic finish(): void {\n\t\tconst updatingObservers = this.updatingObservers!;\n\t\t// Prevent anyone from updating observers from now on.\n\t\tthis.updatingObservers = null;\n\t\tfor (const { observer, observable } of updatingObservers) {\n\t\t\tobserver.endUpdate(observable);\n\t\t}\n\t\tgetLogger()?.handleEndTransaction();\n\t}\n}\n\nexport function getFunctionName(fn: Function): string | undefined {\n\tconst fnSrc = fn.toString();\n\t// Pattern: /** @description ... */\n\tconst regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n\tconst match = regexp.exec(fnSrc);\n\tconst result = match ? match[1] : undefined;\n\treturn result?.trim();\n}\n\nexport interface ISettableObservable<T, TChange = void> extends IObservable<T, TChange>, ISettable<T, TChange> {\n}\n\n/**\n * Creates an observable value.\n * Observers get informed when the value changes.\n */\nexport function observableValue<T, TChange = void>(name: string, initialValue: T): ISettableObservable<T, TChange> {\n\treturn new ObservableValue(name, initialValue);\n}\n\nexport class ObservableValue<T, TChange = void>\n\textends BaseObservable<T, TChange>\n\timplements ISettableObservable<T, TChange>\n{\n\tprotected _value: T;\n\n\tconstructor(public readonly debugName: string, initialValue: T) {\n\t\tsuper();\n\t\tthis._value = initialValue;\n\t}\n\tpublic get(): T {\n\t\treturn this._value;\n\t}\n\n\tpublic set(value: T, tx: ITransaction | undefined, change: TChange): void {\n\t\tif (this._value === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet _tx: TransactionImpl | undefined;\n\t\tif (!tx) {\n\t\t\ttx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n\t\t}\n\t\ttry {\n\t\t\tconst oldValue = this._value;\n\t\t\tthis._setValue(value);\n\t\t\tgetLogger()?.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n\n\t\t\tfor (const observer of this.observers) {\n\t\t\t\ttx.updateObserver(observer, this);\n\t\t\t\tobserver.handleChange(this, change);\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_tx) {\n\t\t\t\t_tx.finish();\n\t\t\t}\n\t\t}\n\t}\n\n\toverride toString(): string {\n\t\treturn `${this.debugName}: ${this._value}`;\n\t}\n\n\tprotected _setValue(newValue: T): void {\n\t\tthis._value = newValue;\n\t}\n}\n\nexport function disposableObservableValue<T extends IDisposable | undefined, TChange = void>(name: string, initialValue: T): ISettableObservable<T, TChange> & IDisposable {\n\treturn new DisposableObservableValue(name, initialValue);\n}\n\nexport class DisposableObservableValue<T extends IDisposable | undefined, TChange = void> extends ObservableValue<T, TChange> implements IDisposable {\n\tprotected override _setValue(newValue: T): void {\n\t\tif (this._value === newValue) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = newValue;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._value?.dispose();\n\t}\n}\n\nexport interface IChangeContext {\n\treadonly changedObservable: IObservable<any, any>;\n\treadonly change: unknown;\n\n\tdidChange<T, TChange>(observable: IObservable<T, TChange>): this is { change: TChange };\n}\n\nexport interface IChangeTracker {\n\t/**\n\t * Returns if this change should cause an invalidation.\n\t * Can record the changes to just process deltas.\n\t*/\n\thandleChange(context: IChangeContext): boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertFn } from 'vs/base/common/assert';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IReader, IObservable, IObserver, IChangeContext, getFunctionName } from 'vs/base/common/observableInternal/base';\nimport { getLogger } from 'vs/base/common/observableInternal/logging';\n\nexport function autorunOpts(options: { debugName: string | (() => string | undefined) }, fn: (reader: IReader) => void): IDisposable {\n\treturn new AutorunObserver(options.debugName, fn, undefined, undefined);\n}\n\nexport function autorun(fn: (reader: IReader) => void): IDisposable {\n\treturn new AutorunObserver(undefined, fn, undefined, undefined);\n}\n\nexport function autorunHandleChanges<TChangeSummary>(\n\toptions: {\n\t\tdebugName?: string | (() => string | undefined);\n\t\tcreateEmptyChangeSummary?: () => TChangeSummary;\n\t\thandleChange: (context: IChangeContext, changeSummary: TChangeSummary) => boolean;\n\t},\n\tfn: (reader: IReader, changeSummary: TChangeSummary) => void\n): IDisposable {\n\treturn new AutorunObserver(options.debugName, fn, options.createEmptyChangeSummary, options.handleChange);\n}\n\nexport function autorunWithStoreHandleChanges<TChangeSummary>(\n\toptions: {\n\t\tdebugName?: string | (() => string | undefined);\n\t\tcreateEmptyChangeSummary?: () => TChangeSummary;\n\t\thandleChange: (context: IChangeContext, changeSummary: TChangeSummary) => boolean;\n\t},\n\tfn: (reader: IReader, changeSummary: TChangeSummary, store: DisposableStore) => void\n): IDisposable {\n\tconst store = new DisposableStore();\n\tconst disposable = autorunHandleChanges(\n\t\t{\n\t\t\tdebugName: options.debugName ?? (() => getFunctionName(fn)),\n\t\t\tcreateEmptyChangeSummary: options.createEmptyChangeSummary,\n\t\t\thandleChange: options.handleChange,\n\t\t},\n\t\t(reader, changeSummary) => {\n\t\t\tstore.clear();\n\t\t\tfn(reader, changeSummary, store);\n\t\t}\n\t);\n\treturn toDisposable(() => {\n\t\tdisposable.dispose();\n\t\tstore.dispose();\n\t});\n}\n\nexport function autorunWithStore(fn: (reader: IReader, store: DisposableStore) => void): IDisposable {\n\tconst store = new DisposableStore();\n\tconst disposable = autorunOpts(\n\t\t{\n\t\t\tdebugName: () => getFunctionName(fn) || '(anonymous)',\n\t\t},\n\t\treader => {\n\t\t\tstore.clear();\n\t\t\tfn(reader, store);\n\t\t}\n\t);\n\treturn toDisposable(() => {\n\t\tdisposable.dispose();\n\t\tstore.dispose();\n\t});\n}\n\nconst enum AutorunState {\n\t/**\n\t * A dependency could have changed.\n\t * We need to explicitly ask them if at least one dependency changed.\n\t */\n\tdependenciesMightHaveChanged = 1,\n\n\t/**\n\t * A dependency changed and we need to recompute.\n\t */\n\tstale = 2,\n\tupToDate = 3,\n}\n\nexport class AutorunObserver<TChangeSummary = any> implements IObserver, IReader, IDisposable {\n\tprivate state = AutorunState.stale;\n\tprivate updateCount = 0;\n\tprivate disposed = false;\n\tprivate dependencies = new Set<IObservable<any>>();\n\tprivate dependenciesToBeRemoved = new Set<IObservable<any>>();\n\tprivate changeSummary: TChangeSummary | undefined;\n\n\tpublic get debugName(): string {\n\t\tif (typeof this._debugName === 'string') {\n\t\t\treturn this._debugName;\n\t\t}\n\t\tif (typeof this._debugName === 'function') {\n\t\t\tconst name = this._debugName();\n\t\t\tif (name !== undefined) { return name; }\n\t\t}\n\t\tconst name = getFunctionName(this._runFn);\n\t\tif (name !== undefined) { return name; }\n\n\t\treturn '(anonymous)';\n\t}\n\n\tconstructor(\n\t\tprivate readonly _debugName: string | (() => string | undefined) | undefined,\n\t\tpublic readonly _runFn: (reader: IReader, changeSummary: TChangeSummary) => void,\n\t\tprivate readonly createChangeSummary: (() => TChangeSummary) | undefined,\n\t\tprivate readonly _handleChange: ((context: IChangeContext, summary: TChangeSummary) => boolean) | undefined,\n\t) {\n\t\tthis.changeSummary = this.createChangeSummary?.();\n\t\tgetLogger()?.handleAutorunCreated(this);\n\t\tthis._runIfNeeded();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\t\tfor (const o of this.dependencies) {\n\t\t\to.removeObserver(this);\n\t\t}\n\t\tthis.dependencies.clear();\n\t}\n\n\tprivate _runIfNeeded() {\n\t\tif (this.state === AutorunState.upToDate) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst emptySet = this.dependenciesToBeRemoved;\n\t\tthis.dependenciesToBeRemoved = this.dependencies;\n\t\tthis.dependencies = emptySet;\n\n\t\tthis.state = AutorunState.upToDate;\n\n\t\ttry {\n\t\t\tif (!this.disposed) {\n\t\t\t\tgetLogger()?.handleAutorunTriggered(this);\n\t\t\t\tconst changeSummary = this.changeSummary!;\n\t\t\t\tthis.changeSummary = this.createChangeSummary?.();\n\t\t\t\tthis._runFn(this, changeSummary);\n\t\t\t}\n\t\t} finally {\n\t\t\tgetLogger()?.handleAutorunFinished(this);\n\t\t\t// We don't want our observed observables to think that they are (not even temporarily) not being observed.\n\t\t\t// Thus, we only unsubscribe from observables that are definitely not read anymore.\n\t\t\tfor (const o of this.dependenciesToBeRemoved) {\n\t\t\t\to.removeObserver(this);\n\t\t\t}\n\t\t\tthis.dependenciesToBeRemoved.clear();\n\t\t}\n\t}\n\n\tpublic toString(): string {\n\t\treturn `Autorun<${this.debugName}>`;\n\t}\n\n\t// IObserver implementation\n\tpublic beginUpdate(): void {\n\t\tif (this.state === AutorunState.upToDate) {\n\t\t\tthis.state = AutorunState.dependenciesMightHaveChanged;\n\t\t}\n\t\tthis.updateCount++;\n\t}\n\n\tpublic endUpdate(): void {\n\t\tif (this.updateCount === 1) {\n\t\t\tdo {\n\t\t\t\tif (this.state === AutorunState.dependenciesMightHaveChanged) {\n\t\t\t\t\tthis.state = AutorunState.upToDate;\n\t\t\t\t\tfor (const d of this.dependencies) {\n\t\t\t\t\t\td.reportChanges();\n\t\t\t\t\t\tif (this.state as AutorunState === AutorunState.stale) {\n\t\t\t\t\t\t\t// The other dependencies will refresh on demand\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._runIfNeeded();\n\t\t\t} while (this.state !== AutorunState.upToDate);\n\t\t}\n\t\tthis.updateCount--;\n\n\t\tassertFn(() => this.updateCount >= 0);\n\t}\n\n\tpublic handlePossibleChange(observable: IObservable<any>): void {\n\t\tif (this.state === AutorunState.upToDate && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n\t\t\tthis.state = AutorunState.dependenciesMightHaveChanged;\n\t\t}\n\t}\n\n\tpublic handleChange<T, TChange>(observable: IObservable<T, TChange>, change: TChange): void {\n\t\tif (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n\t\t\tconst shouldReact = this._handleChange ? this._handleChange({\n\t\t\t\tchangedObservable: observable,\n\t\t\t\tchange,\n\t\t\t\tdidChange: o => o === observable as any,\n\t\t\t}, this.changeSummary!) : true;\n\t\t\tif (shouldReact) {\n\t\t\t\tthis.state = AutorunState.stale;\n\t\t\t}\n\t\t}\n\t}\n\n\t// IReader implementation\n\tpublic readObservable<T>(observable: IObservable<T>): T {\n\t\t// In case the run action disposes the autorun\n\t\tif (this.disposed) {\n\t\t\treturn observable.get();\n\t\t}\n\n\t\tobservable.addObserver(this);\n\t\tconst value = observable.get();\n\t\tthis.dependencies.add(observable);\n\t\tthis.dependenciesToBeRemoved.delete(observable);\n\t\treturn value;\n\t}\n}\n\nexport namespace autorun {\n\texport const Observer = AutorunObserver;\n}\n\nexport function autorunDelta<T>(\n\tobservable: IObservable<T>,\n\thandler: (args: { lastValue: T | undefined; newValue: T }) => void\n): IDisposable {\n\tlet _lastValue: T | undefined;\n\treturn autorunOpts({ debugName: () => getFunctionName(handler) }, (reader) => {\n\t\tconst newValue = observable.read(reader);\n\t\tconst lastValue = _lastValue;\n\t\t_lastValue = newValue;\n\t\thandler({ lastValue, newValue });\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from 'vs/base/common/errors';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IReader, IObservable, BaseObservable, IObserver, _setDerived, IChangeContext, getFunctionName } from 'vs/base/common/observableInternal/base';\nimport { getLogger } from 'vs/base/common/observableInternal/logging';\n\nexport type EqualityComparer<T> = (a: T, b: T) => boolean;\nconst defaultEqualityComparer: EqualityComparer<any> = (a, b) => a === b;\n\nexport function derived<T>(computeFn: (reader: IReader) => T, debugName?: string | (() => string)): IObservable<T> {\n\treturn new Derived(debugName, computeFn, undefined, undefined, undefined, defaultEqualityComparer);\n}\n\nexport function derivedOpts<T>(options: { debugName?: string | (() => string); equalityComparer?: EqualityComparer<T> }, computeFn: (reader: IReader) => T): IObservable<T> {\n\treturn new Derived(options.debugName, computeFn, undefined, undefined, undefined, options.equalityComparer ?? defaultEqualityComparer);\n}\n\nexport function derivedHandleChanges<T, TChangeSummary>(\n\tdebugName: string | (() => string),\n\toptions: {\n\t\tcreateEmptyChangeSummary: () => TChangeSummary;\n\t\thandleChange: (context: IChangeContext, changeSummary: TChangeSummary) => boolean;\n\t},\n\tcomputeFn: (reader: IReader, changeSummary: TChangeSummary) => T): IObservable<T> {\n\treturn new Derived(debugName, computeFn, options.createEmptyChangeSummary, options.handleChange, undefined, defaultEqualityComparer);\n}\n\nexport function derivedWithStore<T>(name: string, computeFn: (reader: IReader, store: DisposableStore) => T): IObservable<T> {\n\tconst store = new DisposableStore();\n\treturn new Derived(name, r => {\n\t\tstore.clear();\n\t\treturn computeFn(r, store);\n\t}, undefined, undefined, () => store.dispose(), defaultEqualityComparer);\n}\n\n_setDerived(derived);\n\nconst enum DerivedState {\n\t/** Initial state, no previous value, recomputation needed */\n\tinitial = 0,\n\n\t/**\n\t * A dependency could have changed.\n\t * We need to explicitly ask them if at least one dependency changed.\n\t */\n\tdependenciesMightHaveChanged = 1,\n\n\t/**\n\t * A dependency changed and we need to recompute.\n\t * After recomputation, we need to check the previous value to see if we changed as well.\n\t */\n\tstale = 2,\n\n\t/**\n\t * No change reported, our cached value is up to date.\n\t */\n\tupToDate = 3,\n}\n\nexport class Derived<T, TChangeSummary = any> extends BaseObservable<T, void> implements IReader, IObserver {\n\tprivate state = DerivedState.initial;\n\tprivate value: T | undefined = undefined;\n\tprivate updateCount = 0;\n\tprivate dependencies = new Set<IObservable<any>>();\n\tprivate dependenciesToBeRemoved = new Set<IObservable<any>>();\n\tprivate changeSummary: TChangeSummary | undefined = undefined;\n\n\tpublic override get debugName(): string {\n\t\tif (!this._debugName) {\n\t\t\treturn getFunctionName(this._computeFn) || '(anonymous)';\n\t\t}\n\t\treturn typeof this._debugName === 'function' ? this._debugName() : this._debugName;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _debugName: string | (() => string) | undefined,\n\t\tpublic readonly _computeFn: (reader: IReader, changeSummary: TChangeSummary) => T,\n\t\tprivate readonly createChangeSummary: (() => TChangeSummary) | undefined,\n\t\tprivate readonly _handleChange: ((context: IChangeContext, summary: TChangeSummary) => boolean) | undefined,\n\t\tprivate readonly _handleLastObserverRemoved: (() => void) | undefined = undefined,\n\t\tprivate readonly _equalityComparator: EqualityComparer<T>,\n\t) {\n\t\tsuper();\n\t\tthis.changeSummary = this.createChangeSummary?.();\n\t\tgetLogger()?.handleDerivedCreated(this);\n\t}\n\n\tprotected override onLastObserverRemoved(): void {\n\t\t/**\n\t\t * We are not tracking changes anymore, thus we have to assume\n\t\t * that our cache is invalid.\n\t\t */\n\t\tthis.state = DerivedState.initial;\n\t\tthis.value = undefined;\n\t\tfor (const d of this.dependencies) {\n\t\t\td.removeObserver(this);\n\t\t}\n\t\tthis.dependencies.clear();\n\n\t\tthis._handleLastObserverRemoved?.();\n\t}\n\n\tpublic override get(): T {\n\t\tif (this.observers.size === 0) {\n\t\t\t// Without observers, we don't know when to clean up stuff.\n\t\t\t// Thus, we don't cache anything to prevent memory leaks.\n\t\t\tconst result = this._computeFn(this, this.createChangeSummary?.()!);\n\t\t\t// Clear new dependencies\n\t\t\tthis.onLastObserverRemoved();\n\t\t\treturn result;\n\t\t} else {\n\t\t\tdo {\n\t\t\t\t// We might not get a notification for a dependency that changed while it is updating,\n\t\t\t\t// thus we also have to ask all our depedencies if they changed in this case.\n\t\t\t\tif (this.state === DerivedState.dependenciesMightHaveChanged) {\n\t\t\t\t\tfor (const d of this.dependencies) {\n\t\t\t\t\t\t/** might call {@link handleChange} indirectly, which could make us stale */\n\t\t\t\t\t\td.reportChanges();\n\n\t\t\t\t\t\tif (this.state as DerivedState === DerivedState.stale) {\n\t\t\t\t\t\t\t// The other dependencies will refresh on demand, so early break\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We called report changes of all dependencies.\n\t\t\t\t// If we are still not stale, we can assume to be up to date again.\n\t\t\t\tif (this.state === DerivedState.dependenciesMightHaveChanged) {\n\t\t\t\t\tthis.state = DerivedState.upToDate;\n\t\t\t\t}\n\n\t\t\t\tthis._recomputeIfNeeded();\n\t\t\t\t// In case recomputation changed one of our dependencies, we need to recompute again.\n\t\t\t} while (this.state !== DerivedState.upToDate);\n\t\t\treturn this.value!;\n\t\t}\n\t}\n\n\tprivate _recomputeIfNeeded() {\n\t\tif (this.state === DerivedState.upToDate) {\n\t\t\treturn;\n\t\t}\n\t\tconst emptySet = this.dependenciesToBeRemoved;\n\t\tthis.dependenciesToBeRemoved = this.dependencies;\n\t\tthis.dependencies = emptySet;\n\n\t\tconst hadValue = this.state !== DerivedState.initial;\n\t\tconst oldValue = this.value;\n\t\tthis.state = DerivedState.upToDate;\n\n\t\tconst changeSummary = this.changeSummary!;\n\t\tthis.changeSummary = this.createChangeSummary?.();\n\t\ttry {\n\t\t\t/** might call {@link handleChange} indirectly, which could invalidate us */\n\t\t\tthis.value = this._computeFn(this, changeSummary);\n\t\t} finally {\n\t\t\t// We don't want our observed observables to think that they are (not even temporarily) not being observed.\n\t\t\t// Thus, we only unsubscribe from observables that are definitely not read anymore.\n\t\t\tfor (const o of this.dependenciesToBeRemoved) {\n\t\t\t\to.removeObserver(this);\n\t\t\t}\n\t\t\tthis.dependenciesToBeRemoved.clear();\n\t\t}\n\n\t\tconst didChange = hadValue && !(this._equalityComparator(oldValue!, this.value));\n\n\t\tgetLogger()?.handleDerivedRecomputed(this, {\n\t\t\toldValue,\n\t\t\tnewValue: this.value,\n\t\t\tchange: undefined,\n\t\t\tdidChange,\n\t\t\thadValue,\n\t\t});\n\n\t\tif (didChange) {\n\t\t\tfor (const r of this.observers) {\n\t\t\t\tr.handleChange(this, undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic override toString(): string {\n\t\treturn `LazyDerived<${this.debugName}>`;\n\t}\n\n\t// IObserver Implementation\n\tpublic beginUpdate<T>(_observable: IObservable<T>): void {\n\t\tthis.updateCount++;\n\t\tconst propagateBeginUpdate = this.updateCount === 1;\n\t\tif (this.state === DerivedState.upToDate) {\n\t\t\tthis.state = DerivedState.dependenciesMightHaveChanged;\n\t\t\t// If we propagate begin update, that will already signal a possible change.\n\t\t\tif (!propagateBeginUpdate) {\n\t\t\t\tfor (const r of this.observers) {\n\t\t\t\t\tr.handlePossibleChange(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (propagateBeginUpdate) {\n\t\t\tfor (const r of this.observers) {\n\t\t\t\tr.beginUpdate(this); // This signals a possible change\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic endUpdate<T>(_observable: IObservable<T>): void {\n\t\tthis.updateCount--;\n\t\tif (this.updateCount === 0) {\n\t\t\t// End update could change the observer list.\n\t\t\tconst observers = [...this.observers];\n\t\t\tfor (const r of observers) {\n\t\t\t\tr.endUpdate(this);\n\t\t\t}\n\t\t}\n\t\tif (this.updateCount < 0) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\t}\n\n\tpublic handlePossibleChange<T>(observable: IObservable<T, unknown>): void {\n\t\t// In all other states, observers already know that we might have changed.\n\t\tif (this.state === DerivedState.upToDate && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n\t\t\tthis.state = DerivedState.dependenciesMightHaveChanged;\n\t\t\tfor (const r of this.observers) {\n\t\t\t\tr.handlePossibleChange(this);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleChange<T, TChange>(observable: IObservable<T, TChange>, change: TChange): void {\n\t\tif (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n\t\t\tconst shouldReact = this._handleChange ? this._handleChange({\n\t\t\t\tchangedObservable: observable,\n\t\t\t\tchange,\n\t\t\t\tdidChange: o => o === observable as any,\n\t\t\t}, this.changeSummary!) : true;\n\t\t\tconst wasUpToDate = this.state === DerivedState.upToDate;\n\t\t\tif (shouldReact && (this.state === DerivedState.dependenciesMightHaveChanged || wasUpToDate)) {\n\t\t\t\tthis.state = DerivedState.stale;\n\t\t\t\tif (wasUpToDate) {\n\t\t\t\t\tfor (const r of this.observers) {\n\t\t\t\t\t\tr.handlePossibleChange(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// IReader Implementation\n\tpublic readObservable<T>(observable: IObservable<T>): T {\n\t\t// Subscribe before getting the value to enable caching\n\t\tobservable.addObserver(this);\n\t\t/** This might call {@link handleChange} indirectly, which could invalidate us */\n\t\tconst value = observable.get();\n\t\t// Which is why we only add the observable to the dependencies now.\n\t\tthis.dependencies.add(observable);\n\t\tthis.dependenciesToBeRemoved.delete(observable);\n\t\treturn value;\n\t}\n\n\tpublic override addObserver(observer: IObserver): void {\n\t\tconst shouldCallBeginUpdate = !this.observers.has(observer) && this.updateCount > 0;\n\t\tsuper.addObserver(observer);\n\n\t\tif (shouldCallBeginUpdate) {\n\t\t\tobserver.beginUpdate(this);\n\t\t}\n\t}\n\n\tpublic override removeObserver(observer: IObserver): void {\n\t\tconst shouldCallEndUpdate = this.observers.has(observer) && this.updateCount > 0;\n\t\tsuper.removeObserver(observer);\n\n\t\tif (shouldCallEndUpdate) {\n\t\t\t// Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n\t\t\tobserver.endUpdate(this);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { autorun } from 'vs/base/common/observableInternal/autorun';\nimport { BaseObservable, ConvenientObservable, IObservable, IObserver, IReader, ITransaction, getFunctionName, observableValue, transaction } from 'vs/base/common/observableInternal/base';\nimport { derived } from 'vs/base/common/observableInternal/derived';\nimport { getLogger } from 'vs/base/common/observableInternal/logging';\n\n/**\n * Represents an efficient observable whose value never changes.\n */\nexport function constObservable<T>(value: T): IObservable<T> {\n\treturn new ConstObservable(value);\n}\n\nclass ConstObservable<T> extends ConvenientObservable<T, void> {\n\tconstructor(private readonly value: T) {\n\t\tsuper();\n\t}\n\n\tpublic override get debugName(): string {\n\t\treturn this.toString();\n\t}\n\n\tpublic get(): T {\n\t\treturn this.value;\n\t}\n\tpublic addObserver(observer: IObserver): void {\n\t\t// NO OP\n\t}\n\tpublic removeObserver(observer: IObserver): void {\n\t\t// NO OP\n\t}\n\n\toverride toString(): string {\n\t\treturn `Const: ${this.value}`;\n\t}\n}\n\n\nexport function observableFromPromise<T>(promise: Promise<T>): IObservable<{ value?: T }> {\n\tconst observable = observableValue<{ value?: T }>('promiseValue', {});\n\tpromise.then((value) => {\n\t\tobservable.set({ value }, undefined);\n\t});\n\treturn observable;\n}\n\nexport function waitForState<T, TState extends T>(observable: IObservable<T>, predicate: (state: T) => state is TState): Promise<TState>;\nexport function waitForState<T>(observable: IObservable<T>, predicate: (state: T) => boolean): Promise<T>;\nexport function waitForState<T>(observable: IObservable<T>, predicate: (state: T) => boolean): Promise<T> {\n\treturn new Promise(resolve => {\n\t\tlet didRun = false;\n\t\tlet shouldDispose = false;\n\t\tconst d = autorun(reader => {\n\t\t\t/** @description waitForState */\n\t\t\tconst currentState = observable.read(reader);\n\t\t\tif (predicate(currentState)) {\n\t\t\t\tif (!didRun) {\n\t\t\t\t\tshouldDispose = true;\n\t\t\t\t} else {\n\t\t\t\t\td.dispose();\n\t\t\t\t}\n\t\t\t\tresolve(currentState);\n\t\t\t}\n\t\t});\n\t\tdidRun = true;\n\t\tif (shouldDispose) {\n\t\t\td.dispose();\n\t\t}\n\t});\n}\n\nexport function observableFromEvent<T, TArgs = unknown>(\n\tevent: Event<TArgs>,\n\tgetValue: (args: TArgs | undefined) => T\n): IObservable<T> {\n\treturn new FromEventObservable(event, getValue);\n}\n\nexport class FromEventObservable<TArgs, T> extends BaseObservable<T> {\n\tprivate value: T | undefined;\n\tprivate hasValue = false;\n\tprivate subscription: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate readonly event: Event<TArgs>,\n\t\tpublic readonly _getValue: (args: TArgs | undefined) => T\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate getDebugName(): string | undefined {\n\t\treturn getFunctionName(this._getValue);\n\t}\n\n\tpublic get debugName(): string {\n\t\tconst name = this.getDebugName();\n\t\treturn 'From Event' + (name ? `: ${name}` : '');\n\t}\n\n\tprotected override onFirstObserverAdded(): void {\n\t\tthis.subscription = this.event(this.handleEvent);\n\t}\n\n\tprivate readonly handleEvent = (args: TArgs | undefined) => {\n\t\tconst newValue = this._getValue(args);\n\n\t\tconst didChange = !this.hasValue || this.value !== newValue;\n\n\t\tgetLogger()?.handleFromEventObservableTriggered(this, { oldValue: this.value, newValue, change: undefined, didChange, hadValue: this.hasValue });\n\n\t\tif (didChange) {\n\t\t\tthis.value = newValue;\n\n\t\t\tif (this.hasValue) {\n\t\t\t\ttransaction(\n\t\t\t\t\t(tx) => {\n\t\t\t\t\t\tfor (const o of this.observers) {\n\t\t\t\t\t\t\ttx.updateObserver(o, this);\n\t\t\t\t\t\t\to.handleChange(this, undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst name = this.getDebugName();\n\t\t\t\t\t\treturn 'Event fired' + (name ? `: ${name}` : '');\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.hasValue = true;\n\t\t}\n\t};\n\n\tprotected override onLastObserverRemoved(): void {\n\t\tthis.subscription!.dispose();\n\t\tthis.subscription = undefined;\n\t\tthis.hasValue = false;\n\t\tthis.value = undefined;\n\t}\n\n\tpublic get(): T {\n\t\tif (this.subscription) {\n\t\t\tif (!this.hasValue) {\n\t\t\t\tthis.handleEvent(undefined);\n\t\t\t}\n\t\t\treturn this.value!;\n\t\t} else {\n\t\t\t// no cache, as there are no subscribers to keep it updated\n\t\t\treturn this._getValue(undefined);\n\t\t}\n\t}\n}\n\nexport namespace observableFromEvent {\n\texport const Observer = FromEventObservable;\n}\n\nexport function observableSignalFromEvent(\n\tdebugName: string,\n\tevent: Event<any>\n): IObservable<void> {\n\treturn new FromEventObservableSignal(debugName, event);\n}\n\nclass FromEventObservableSignal extends BaseObservable<void> {\n\tprivate subscription: IDisposable | undefined;\n\n\tconstructor(\n\t\tpublic readonly debugName: string,\n\t\tprivate readonly event: Event<any>,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected override onFirstObserverAdded(): void {\n\t\tthis.subscription = this.event(this.handleEvent);\n\t}\n\n\tprivate readonly handleEvent = () => {\n\t\ttransaction(\n\t\t\t(tx) => {\n\t\t\t\tfor (const o of this.observers) {\n\t\t\t\t\ttx.updateObserver(o, this);\n\t\t\t\t\to.handleChange(this, undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\t() => this.debugName\n\t\t);\n\t};\n\n\tprotected override onLastObserverRemoved(): void {\n\t\tthis.subscription!.dispose();\n\t\tthis.subscription = undefined;\n\t}\n\n\tpublic override get(): void {\n\t\t// NO OP\n\t}\n}\n\n/**\n * Creates a signal that can be triggered to invalidate observers.\n * Signals don't have a value - when they are triggered they indicate a change.\n * However, signals can carry a delta that is passed to observers.\n */\nexport function observableSignal<TDelta = void>(\n\tdebugName: string\n): IObservableSignal<TDelta> {\n\treturn new ObservableSignal<TDelta>(debugName);\n}\n\nexport interface IObservableSignal<TChange> extends IObservable<void, TChange> {\n\ttrigger(tx: ITransaction | undefined, change: TChange): void;\n}\n\nclass ObservableSignal<TChange> extends BaseObservable<void, TChange> implements IObservableSignal<TChange> {\n\tconstructor(\n\t\tpublic readonly debugName: string\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic trigger(tx: ITransaction | undefined, change: TChange): void {\n\t\tif (!tx) {\n\t\t\ttransaction(tx => {\n\t\t\t\tthis.trigger(tx, change);\n\t\t\t}, () => `Trigger signal ${this.debugName}`);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const o of this.observers) {\n\t\t\ttx.updateObserver(o, this);\n\t\t\to.handleChange(this, change);\n\t\t}\n\t}\n\n\tpublic override get(): void {\n\t\t// NO OP\n\t}\n}\n\nexport function debouncedObservable<T>(observable: IObservable<T>, debounceMs: number, disposableStore: DisposableStore): IObservable<T | undefined> {\n\tconst debouncedObservable = observableValue<T | undefined>('debounced', undefined);\n\n\tlet timeout: any = undefined;\n\n\tdisposableStore.add(autorun(reader => {\n\t\t/** @description debounce */\n\t\tconst value = observable.read(reader);\n\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(() => {\n\t\t\ttransaction(tx => {\n\t\t\t\tdebouncedObservable.set(value, tx);\n\t\t\t});\n\t\t}, debounceMs);\n\n\t}));\n\n\treturn debouncedObservable;\n}\n\nexport function wasEventTriggeredRecently(event: Event<any>, timeoutMs: number, disposableStore: DisposableStore): IObservable<boolean> {\n\tconst observable = observableValue('triggeredRecently', false);\n\n\tlet timeout: any = undefined;\n\n\tdisposableStore.add(event(() => {\n\t\tobservable.set(true, undefined);\n\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(() => {\n\t\t\tobservable.set(false, undefined);\n\t\t}, timeoutMs);\n\t}));\n\n\treturn observable;\n}\n\n// TODO@hediet: Have `keepCacheAlive` and `recomputeOnChange` instead of forceRecompute\n/**\n * This ensures the observable is being observed.\n * Observed observables (such as {@link derived}s) can maintain a cache, as they receive invalidation events.\n * Unobserved observables are forced to recompute their value from scratch every time they are read.\n *\n * @param observable the observable to keep alive\n * @param forceRecompute if true, the observable will be eagerly recomputed after it changed.\n * Use this if recomputing the observables causes side-effects.\n*/\nexport function keepAlive(observable: IObservable<any>, forceRecompute?: boolean): IDisposable {\n\tconst o = new KeepAliveObserver(forceRecompute ?? false);\n\tobservable.addObserver(o);\n\tif (forceRecompute) {\n\t\tobservable.reportChanges();\n\t}\n\n\treturn toDisposable(() => {\n\t\tobservable.removeObserver(o);\n\t});\n}\n\nclass KeepAliveObserver implements IObserver {\n\tprivate counter = 0;\n\n\tconstructor(private readonly forceRecompute: boolean) { }\n\n\tbeginUpdate<T>(observable: IObservable<T, void>): void {\n\t\tthis.counter++;\n\t}\n\n\tendUpdate<T>(observable: IObservable<T, void>): void {\n\t\tthis.counter--;\n\t\tif (this.counter === 0 && this.forceRecompute) {\n\t\t\tobservable.reportChanges();\n\t\t}\n\t}\n\n\thandlePossibleChange<T>(observable: IObservable<T, unknown>): void {\n\t\t// NO OP\n\t}\n\n\thandleChange<T, TChange>(observable: IObservable<T, TChange>, change: TChange): void {\n\t\t// NO OP\n\t}\n}\n\nexport function derivedObservableWithCache<T>(name: string, computeFn: (reader: IReader, lastValue: T | undefined) => T): IObservable<T> {\n\tlet lastValue: T | undefined = undefined;\n\tconst observable = derived(reader => {\n\t\tlastValue = computeFn(reader, lastValue);\n\t\treturn lastValue;\n\t}, name);\n\treturn observable;\n}\n\nexport function derivedObservableWithWritableCache<T>(name: string, computeFn: (reader: IReader, lastValue: T | undefined) => T): IObservable<T> & { clearCache(transaction: ITransaction): void } {\n\tlet lastValue: T | undefined = undefined;\n\tconst counter = observableValue('derivedObservableWithWritableCache.counter', 0);\n\tconst observable = derived(reader => {\n\t\tcounter.read(reader);\n\t\tlastValue = computeFn(reader, lastValue);\n\t\treturn lastValue;\n\t}, name);\n\treturn Object.assign(observable, {\n\t\tclearCache: (transaction: ITransaction) => {\n\t\t\tlastValue = undefined;\n\t\t\tcounter.set(counter.get() + 1, transaction);\n\t\t},\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport {\n\tIObservable,\n\tIObserver,\n\tIReader,\n\tISettable,\n\tISettableObservable,\n\tITransaction,\n\tIChangeContext,\n\tIChangeTracker,\n\tobservableValue,\n\tdisposableObservableValue,\n\ttransaction,\n\tsubtransaction,\n} from 'vs/base/common/observableInternal/base';\nexport {\n\tderived,\n\tderivedOpts,\n\tderivedHandleChanges,\n\tderivedWithStore,\n} from 'vs/base/common/observableInternal/derived';\nexport {\n\tautorun,\n\tautorunDelta,\n\tautorunHandleChanges,\n\tautorunWithStore,\n\tautorunOpts,\n\tautorunWithStoreHandleChanges,\n} from 'vs/base/common/observableInternal/autorun';\nexport {\n\tIObservableSignal,\n\tconstObservable,\n\tdebouncedObservable,\n\tderivedObservableWithCache,\n\tderivedObservableWithWritableCache,\n\tkeepAlive,\n\tobservableFromEvent,\n\tobservableFromPromise,\n\tobservableSignal,\n\tobservableSignalFromEvent,\n\twaitForState,\n\twasEventTriggeredRecently,\n} from 'vs/base/common/observableInternal/utils';\n\nimport { ConsoleObservableLogger, setLogger } from 'vs/base/common/observableInternal/logging';\n\nconst enableLogging = false;\nif (enableLogging) {\n\tsetLogger(new ConsoleObservableLogger());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): IDisposable {\n\tlet destroyed = false;\n\n\tstream.on('error', error => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n\n\treturn toDisposable(() => destroyed = true);\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from 'vs/base/common/lazy';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n\n\tindexOf(subarray: VSBuffer | Uint8Array, offset = 0) {\n\t\treturn binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n\t}\n}\n\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack: Uint8Array, needle: Uint8Array, offset = 0): number {\n\tconst needleLen = needle.byteLength;\n\tconst haystackLen = haystack.byteLength;\n\n\tif (needleLen === 0) {\n\t\treturn 0;\n\t}\n\n\tif (needleLen === 1) {\n\t\treturn haystack.indexOf(needle[0]);\n\t}\n\n\tif (needleLen > haystackLen - offset) {\n\t\treturn -1;\n\t}\n\n\t// find index of the subarray using boyer-moore-horspool algorithm\n\tconst table = indexOfTable.value;\n\ttable.fill(needle.length);\n\tfor (let i = 0; i < needle.length; i++) {\n\t\ttable[needle[i]] = needle.length - i - 1;\n\t}\n\n\tlet i = offset + needle.length - 1;\n\tlet j = i;\n\tlet result = -1;\n\twhile (i < haystackLen) {\n\t\tif (haystack[i] === needle[j]) {\n\t\t\tif (j === 0) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti--;\n\t\t\tj--;\n\t\t} else {\n\t\t\ti += Math.max(needle.length - j, table[haystack[i]]);\n\t\t\tj = needle.length - 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Open ended enum at runtime\n */\nexport const enum LanguageId {\n\tNull = 0,\n\tPlainText = 1\n}\n\n/**\n * A font style. Values are 2^x such that a bit mask can be used.\n */\nexport const enum FontStyle {\n\tNotSet = -1,\n\tNone = 0,\n\tItalic = 1,\n\tBold = 2,\n\tUnderline = 4,\n\tStrikethrough = 8,\n}\n\n/**\n * Open ended enum at runtime\n */\nexport const enum ColorId {\n\tNone = 0,\n\tDefaultForeground = 1,\n\tDefaultBackground = 2\n}\n\n/**\n * A standard token type.\n */\nexport const enum StandardTokenType {\n\tOther = 0,\n\tComment = 1,\n\tString = 2,\n\tRegEx = 3\n}\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb ffff ffff fFFF FBTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (2 bits)\n *  - B = Balanced bracket (1 bit)\n *  - F = FontStyle (4 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n *\n */\nexport const enum MetadataConsts {\n\tLANGUAGEID_MASK = 0b00000000000000000000000011111111,\n\tTOKEN_TYPE_MASK = 0b00000000000000000000001100000000,\n\tBALANCED_BRACKETS_MASK = 0b00000000000000000000010000000000,\n\tFONT_STYLE_MASK = 0b00000000000000000111100000000000,\n\tFOREGROUND_MASK = 0b00000000111111111000000000000000,\n\tBACKGROUND_MASK = 0b11111111000000000000000000000000,\n\n\tITALIC_MASK = 0b00000000000000000000100000000000,\n\tBOLD_MASK = 0b00000000000000000001000000000000,\n\tUNDERLINE_MASK = 0b00000000000000000010000000000000,\n\tSTRIKETHROUGH_MASK = 0b00000000000000000100000000000000,\n\n\t// Semantic tokens cannot set the language id, so we can\n\t// use the first 8 bits for control purposes\n\tSEMANTIC_USE_ITALIC = 0b00000000000000000000000000000001,\n\tSEMANTIC_USE_BOLD = 0b00000000000000000000000000000010,\n\tSEMANTIC_USE_UNDERLINE = 0b00000000000000000000000000000100,\n\tSEMANTIC_USE_STRIKETHROUGH = 0b00000000000000000000000000001000,\n\tSEMANTIC_USE_FOREGROUND = 0b00000000000000000000000000010000,\n\tSEMANTIC_USE_BACKGROUND = 0b00000000000000000000000000100000,\n\n\tLANGUAGEID_OFFSET = 0,\n\tTOKEN_TYPE_OFFSET = 8,\n\tBALANCED_BRACKETS_OFFSET = 10,\n\tFONT_STYLE_OFFSET = 11,\n\tFOREGROUND_OFFSET = 15,\n\tBACKGROUND_OFFSET = 24\n}\n\n/**\n */\nexport class TokenMetadata {\n\n\tpublic static getLanguageId(metadata: number): LanguageId {\n\t\treturn (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n\t}\n\n\tpublic static getTokenType(metadata: number): StandardTokenType {\n\t\treturn (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n\t}\n\n\tpublic static containsBalancedBrackets(metadata: number): boolean {\n\t\treturn (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n\t}\n\n\tpublic static getFontStyle(metadata: number): FontStyle {\n\t\treturn (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n\t}\n\n\tpublic static getForeground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n\t}\n\n\tpublic static getBackground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n\t}\n\n\tpublic static getClassNameFromMetadata(metadata: number): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tlet className = 'mtk' + foreground;\n\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tclassName += ' mtki';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tclassName += ' mtkb';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tclassName += ' mtku';\n\t\t}\n\t\tif (fontStyle & FontStyle.Strikethrough) {\n\t\t\tclassName += ' mtks';\n\t\t}\n\n\t\treturn className;\n\t}\n\n\tpublic static getInlineStyleFromMetadata(metadata: number, colorMap: string[]): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\tlet result = `color: ${colorMap[foreground]};`;\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tresult += 'font-style: italic;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tresult += 'font-weight: bold;';\n\t\t}\n\t\tlet textDecoration = '';\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\ttextDecoration += ' underline';\n\t\t}\n\t\tif (fontStyle & FontStyle.Strikethrough) {\n\t\t\ttextDecoration += ' line-through';\n\t\t}\n\t\tif (textDecoration) {\n\t\t\tresult += `text-decoration:${textDecoration};`;\n\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static getPresentationFromMetadata(metadata: number): ITokenPresentation {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\treturn {\n\t\t\tforeground: foreground,\n\t\t\titalic: Boolean(fontStyle & FontStyle.Italic),\n\t\t\tbold: Boolean(fontStyle & FontStyle.Bold),\n\t\t\tunderline: Boolean(fontStyle & FontStyle.Underline),\n\t\t\tstrikethrough: Boolean(fontStyle & FontStyle.Strikethrough),\n\t\t};\n\t}\n}\n\n/**\n */\nexport interface ITokenPresentation {\n\tforeground: ColorId;\n\titalic: boolean;\n\tbold: boolean;\n\tunderline: boolean;\n\tstrikethrough: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { arrayInsert } from 'vs/base/common/arrays';\n\n/**\n * An array that avoids being sparse by always\n * filling up unused indices with a default value.\n */\nexport class FixedArray<T> {\n\tprivate _store: T[] = [];\n\n\tconstructor(\n\t\tprivate readonly _default: T\n\t) { }\n\n\tpublic get(index: number): T {\n\t\tif (index < this._store.length) {\n\t\t\treturn this._store[index];\n\t\t}\n\t\treturn this._default;\n\t}\n\n\tpublic set(index: number, value: T): void {\n\t\twhile (index >= this._store.length) {\n\t\t\tthis._store[this._store.length] = this._default;\n\t\t}\n\t\tthis._store[index] = value;\n\t}\n\n\tpublic replace(index: number, oldLength: number, newLength: number): void {\n\t\tif (index >= this._store.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oldLength === 0) {\n\t\t\tthis.insert(index, newLength);\n\t\t\treturn;\n\t\t} else if (newLength === 0) {\n\t\t\tthis.delete(index, oldLength);\n\t\t\treturn;\n\t\t}\n\n\t\tconst before = this._store.slice(0, index);\n\t\tconst after = this._store.slice(index + oldLength);\n\t\tconst insertArr = arrayFill(newLength, this._default);\n\t\tthis._store = before.concat(insertArr, after);\n\t}\n\n\tpublic delete(deleteIndex: number, deleteCount: number): void {\n\t\tif (deleteCount === 0 || deleteIndex >= this._store.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis._store.splice(deleteIndex, deleteCount);\n\t}\n\n\tpublic insert(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0 || insertIndex >= this._store.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst arr: T[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tarr[i] = this._default;\n\t\t}\n\t\tthis._store = arrayInsert(this._store, insertIndex, arr);\n\t}\n}\n\nfunction arrayFill<T>(length: number, value: T): T[] {\n\tconst arr: T[] = [];\n\tfor (let i = 0; i < length; i++) {\n\t\tarr[i] = value;\n\t}\n\treturn arr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILanguageIdCodec } from 'vs/editor/common/languages';\nimport { FontStyle, ColorId, StandardTokenType, MetadataConsts, TokenMetadata, ITokenPresentation } from 'vs/editor/common/encodedTokenAttributes';\n\nexport interface IViewLineTokens {\n\tequals(other: IViewLineTokens): boolean;\n\tgetCount(): number;\n\tgetForeground(tokenIndex: number): ColorId;\n\tgetEndOffset(tokenIndex: number): number;\n\tgetClassName(tokenIndex: number): string;\n\tgetInlineStyle(tokenIndex: number, colorMap: string[]): string;\n\tgetPresentation(tokenIndex: number): ITokenPresentation;\n\tfindTokenIndexAtOffset(offset: number): number;\n\tgetLineContent(): string;\n\tgetMetadata(tokenIndex: number): number;\n\tgetLanguageId(tokenIndex: number): string;\n}\n\nexport class LineTokens implements IViewLineTokens {\n\t_lineTokensBrand: void = undefined;\n\n\tprivate readonly _tokens: Uint32Array;\n\tprivate readonly _tokensCount: number;\n\tprivate readonly _text: string;\n\tprivate readonly _languageIdCodec: ILanguageIdCodec;\n\n\tpublic static defaultTokenMetadata = (\n\t\t(FontStyle.None << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t| (ColorId.DefaultForeground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t| (ColorId.DefaultBackground << MetadataConsts.BACKGROUND_OFFSET)\n\t) >>> 0;\n\n\tpublic static createEmpty(lineContent: string, decoder: ILanguageIdCodec): LineTokens {\n\t\tconst defaultMetadata = LineTokens.defaultTokenMetadata;\n\n\t\tconst tokens = new Uint32Array(2);\n\t\ttokens[0] = lineContent.length;\n\t\ttokens[1] = defaultMetadata;\n\n\t\treturn new LineTokens(tokens, lineContent, decoder);\n\t}\n\n\tconstructor(tokens: Uint32Array, text: string, decoder: ILanguageIdCodec) {\n\t\tthis._tokens = tokens;\n\t\tthis._tokensCount = (this._tokens.length >>> 1);\n\t\tthis._text = text;\n\t\tthis._languageIdCodec = decoder;\n\t}\n\n\tpublic equals(other: IViewLineTokens): boolean {\n\t\tif (other instanceof LineTokens) {\n\t\t\treturn this.slicedEquals(other, 0, this._tokensCount);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic slicedEquals(other: LineTokens, sliceFromTokenIndex: number, sliceTokenCount: number): boolean {\n\t\tif (this._text !== other._text) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._tokensCount !== other._tokensCount) {\n\t\t\treturn false;\n\t\t}\n\t\tconst from = (sliceFromTokenIndex << 1);\n\t\tconst to = from + (sliceTokenCount << 1);\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tif (this._tokens[i] !== other._tokens[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getLineContent(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokensCount;\n\t}\n\n\tpublic getStartOffset(tokenIndex: number): number {\n\t\tif (tokenIndex > 0) {\n\t\t\treturn this._tokens[(tokenIndex - 1) << 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic getMetadata(tokenIndex: number): number {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn metadata;\n\t}\n\n\tpublic getLanguageId(tokenIndex: number): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\tconst languageId = TokenMetadata.getLanguageId(metadata);\n\t\treturn this._languageIdCodec.decodeLanguageId(languageId);\n\t}\n\n\tpublic getStandardTokenType(tokenIndex: number): StandardTokenType {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getTokenType(metadata);\n\t}\n\n\tpublic getForeground(tokenIndex: number): ColorId {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getForeground(metadata);\n\t}\n\n\tpublic getClassName(tokenIndex: number): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getClassNameFromMetadata(metadata);\n\t}\n\n\tpublic getInlineStyle(tokenIndex: number, colorMap: string[]): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getInlineStyleFromMetadata(metadata, colorMap);\n\t}\n\n\tpublic getPresentation(tokenIndex: number): ITokenPresentation {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getPresentationFromMetadata(metadata);\n\t}\n\n\tpublic getEndOffset(tokenIndex: number): number {\n\t\treturn this._tokens[tokenIndex << 1];\n\t}\n\n\t/**\n\t * Find the token containing offset `offset`.\n\t * @param offset The search offset\n\t * @return The index of the token containing the offset.\n\t */\n\tpublic findTokenIndexAtOffset(offset: number): number {\n\t\treturn LineTokens.findIndexInTokensArray(this._tokens, offset);\n\t}\n\n\tpublic inflate(): IViewLineTokens {\n\t\treturn this;\n\t}\n\n\tpublic sliceAndInflate(startOffset: number, endOffset: number, deltaOffset: number): IViewLineTokens {\n\t\treturn new SliceLineTokens(this, startOffset, endOffset, deltaOffset);\n\t}\n\n\tpublic static convertToEndOffset(tokens: Uint32Array, lineTextLength: number): void {\n\t\tconst tokenCount = (tokens.length >>> 1);\n\t\tconst lastTokenIndex = tokenCount - 1;\n\t\tfor (let tokenIndex = 0; tokenIndex < lastTokenIndex; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] = tokens[(tokenIndex + 1) << 1];\n\t\t}\n\t\ttokens[lastTokenIndex << 1] = lineTextLength;\n\t}\n\n\tpublic static findIndexInTokensArray(tokens: Uint32Array, desiredIndex: number): number {\n\t\tif (tokens.length <= 2) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet low = 0;\n\t\tlet high = (tokens.length >>> 1) - 1;\n\n\t\twhile (low < high) {\n\n\t\t\tconst mid = low + Math.floor((high - low) / 2);\n\t\t\tconst endOffset = tokens[(mid << 1)];\n\n\t\t\tif (endOffset === desiredIndex) {\n\t\t\t\treturn mid + 1;\n\t\t\t} else if (endOffset < desiredIndex) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else if (endOffset > desiredIndex) {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\t/**\n\t * @pure\n\t * @param insertTokens Must be sorted by offset.\n\t*/\n\tpublic withInserted(insertTokens: { offset: number; text: string; tokenMetadata: number }[]): LineTokens {\n\t\tif (insertTokens.length === 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet nextOriginalTokenIdx = 0;\n\t\tlet nextInsertTokenIdx = 0;\n\t\tlet text = '';\n\t\tconst newTokens = new Array<number>();\n\n\t\tlet originalEndOffset = 0;\n\t\twhile (true) {\n\t\t\tconst nextOriginalTokenEndOffset = nextOriginalTokenIdx < this._tokensCount ? this._tokens[nextOriginalTokenIdx << 1] : -1;\n\t\t\tconst nextInsertToken = nextInsertTokenIdx < insertTokens.length ? insertTokens[nextInsertTokenIdx] : null;\n\n\t\t\tif (nextOriginalTokenEndOffset !== -1 && (nextInsertToken === null || nextOriginalTokenEndOffset <= nextInsertToken.offset)) {\n\t\t\t\t// original token ends before next insert token\n\t\t\t\ttext += this._text.substring(originalEndOffset, nextOriginalTokenEndOffset);\n\t\t\t\tconst metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n\t\t\t\tnewTokens.push(text.length, metadata);\n\t\t\t\tnextOriginalTokenIdx++;\n\t\t\t\toriginalEndOffset = nextOriginalTokenEndOffset;\n\n\t\t\t} else if (nextInsertToken) {\n\t\t\t\tif (nextInsertToken.offset > originalEndOffset) {\n\t\t\t\t\t// insert token is in the middle of the next token.\n\t\t\t\t\ttext += this._text.substring(originalEndOffset, nextInsertToken.offset);\n\t\t\t\t\tconst metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n\t\t\t\t\tnewTokens.push(text.length, metadata);\n\t\t\t\t\toriginalEndOffset = nextInsertToken.offset;\n\t\t\t\t}\n\n\t\t\t\ttext += nextInsertToken.text;\n\t\t\t\tnewTokens.push(text.length, nextInsertToken.tokenMetadata);\n\t\t\t\tnextInsertTokenIdx++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new LineTokens(new Uint32Array(newTokens), text, this._languageIdCodec);\n\t}\n}\n\nclass SliceLineTokens implements IViewLineTokens {\n\n\tprivate readonly _source: LineTokens;\n\tprivate readonly _startOffset: number;\n\tprivate readonly _endOffset: number;\n\tprivate readonly _deltaOffset: number;\n\n\tprivate readonly _firstTokenIndex: number;\n\tprivate readonly _tokensCount: number;\n\n\tconstructor(source: LineTokens, startOffset: number, endOffset: number, deltaOffset: number) {\n\t\tthis._source = source;\n\t\tthis._startOffset = startOffset;\n\t\tthis._endOffset = endOffset;\n\t\tthis._deltaOffset = deltaOffset;\n\t\tthis._firstTokenIndex = source.findTokenIndexAtOffset(startOffset);\n\n\t\tthis._tokensCount = 0;\n\t\tfor (let i = this._firstTokenIndex, len = source.getCount(); i < len; i++) {\n\t\t\tconst tokenStartOffset = source.getStartOffset(i);\n\t\t\tif (tokenStartOffset >= endOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._tokensCount++;\n\t\t}\n\t}\n\n\tpublic getMetadata(tokenIndex: number): number {\n\t\treturn this._source.getMetadata(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getLanguageId(tokenIndex: number): string {\n\t\treturn this._source.getLanguageId(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getLineContent(): string {\n\t\treturn this._source.getLineContent().substring(this._startOffset, this._endOffset);\n\t}\n\n\tpublic equals(other: IViewLineTokens): boolean {\n\t\tif (other instanceof SliceLineTokens) {\n\t\t\treturn (\n\t\t\t\tthis._startOffset === other._startOffset\n\t\t\t\t&& this._endOffset === other._endOffset\n\t\t\t\t&& this._deltaOffset === other._deltaOffset\n\t\t\t\t&& this._source.slicedEquals(other._source, this._firstTokenIndex, this._tokensCount)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokensCount;\n\t}\n\n\tpublic getForeground(tokenIndex: number): ColorId {\n\t\treturn this._source.getForeground(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getEndOffset(tokenIndex: number): number {\n\t\tconst tokenEndOffset = this._source.getEndOffset(this._firstTokenIndex + tokenIndex);\n\t\treturn Math.min(this._endOffset, tokenEndOffset) - this._startOffset + this._deltaOffset;\n\t}\n\n\tpublic getClassName(tokenIndex: number): string {\n\t\treturn this._source.getClassName(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getInlineStyle(tokenIndex: number, colorMap: string[]): string {\n\t\treturn this._source.getInlineStyle(this._firstTokenIndex + tokenIndex, colorMap);\n\t}\n\n\tpublic getPresentation(tokenIndex: number): ITokenPresentation {\n\t\treturn this._source.getPresentation(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic findTokenIndexAtOffset(offset: number): number {\n\t\treturn this._source.findTokenIndexAtOffset(offset + this._startOffset - this._deltaOffset) - this._firstTokenIndex;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LineTokens } from 'vs/editor/common/tokens/lineTokens';\n\nexport const EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\n\nexport class ContiguousTokensEditing {\n\n\tpublic static deleteBeginning(lineTokens: Uint32Array | ArrayBuffer | null, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\treturn ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n\t}\n\n\tpublic static deleteEnding(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst lineTextLength = tokens[tokens.length - 2];\n\t\treturn ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n\t}\n\n\tpublic static delete(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\t// special case: deleting everything\n\t\tif (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n\t\t\treturn EMPTY_LINE_TOKENS;\n\t\t}\n\n\t\tconst fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n\t\tconst fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n\t\tconst fromTokenEndOffset = tokens[fromTokenIndex << 1];\n\n\t\tif (toChIndex < fromTokenEndOffset) {\n\t\t\t// the delete range is inside a single token\n\t\t\tconst delta = (toChIndex - fromChIndex);\n\t\t\tfor (let i = fromTokenIndex; i < tokensCount; i++) {\n\t\t\t\ttokens[i << 1] -= delta;\n\t\t\t}\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tlet dest: number;\n\t\tlet lastEnd: number;\n\t\tif (fromTokenStartOffset !== fromChIndex) {\n\t\t\ttokens[fromTokenIndex << 1] = fromChIndex;\n\t\t\tdest = ((fromTokenIndex + 1) << 1);\n\t\t\tlastEnd = fromChIndex;\n\t\t} else {\n\t\t\tdest = (fromTokenIndex << 1);\n\t\t\tlastEnd = fromTokenStartOffset;\n\t\t}\n\n\t\tconst delta = (toChIndex - fromChIndex);\n\t\tfor (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\tconst tokenEndOffset = tokens[tokenIndex << 1] - delta;\n\t\t\tif (tokenEndOffset > lastEnd) {\n\t\t\t\ttokens[dest++] = tokenEndOffset;\n\t\t\t\ttokens[dest++] = tokens[(tokenIndex << 1) + 1];\n\t\t\t\tlastEnd = tokenEndOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (dest === tokens.length) {\n\t\t\t// nothing to trim\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tmp = new Uint32Array(dest);\n\t\ttmp.set(tokens.subarray(0, dest), 0);\n\t\treturn tmp.buffer;\n\t}\n\n\tpublic static append(lineTokens: Uint32Array | ArrayBuffer | null, _otherTokens: Uint32Array | ArrayBuffer | null): Uint32Array | ArrayBuffer | null {\n\t\tif (_otherTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn _otherTokens;\n\t\t}\n\t\tif (lineTokens === null) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (_otherTokens === null) {\n\t\t\t// cannot determine combined line length...\n\t\t\treturn null;\n\t\t}\n\t\tconst myTokens = toUint32Array(lineTokens);\n\t\tconst otherTokens = toUint32Array(_otherTokens);\n\t\tconst otherTokensCount = (otherTokens.length >>> 1);\n\n\t\tconst result = new Uint32Array(myTokens.length + otherTokens.length);\n\t\tresult.set(myTokens, 0);\n\t\tlet dest = myTokens.length;\n\t\tconst delta = myTokens[myTokens.length - 2];\n\t\tfor (let i = 0; i < otherTokensCount; i++) {\n\t\t\tresult[dest++] = otherTokens[(i << 1)] + delta;\n\t\t\tresult[dest++] = otherTokens[(i << 1) + 1];\n\t\t}\n\t\treturn result.buffer;\n\t}\n\n\tpublic static insert(lineTokens: Uint32Array | ArrayBuffer | null, chIndex: number, textLength: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\t// nothing to do\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\tlet fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n\t\tif (fromTokenIndex > 0) {\n\t\t\tconst fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n\t\t\tif (fromTokenStartOffset === chIndex) {\n\t\t\t\tfromTokenIndex--;\n\t\t\t}\n\t\t}\n\t\tfor (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] += textLength;\n\t\t}\n\t\treturn lineTokens;\n\t}\n}\n\nexport function toUint32Array(arr: Uint32Array | ArrayBuffer): Uint32Array {\n\tif (arr instanceof Uint32Array) {\n\t\treturn arr;\n\t} else {\n\t\treturn new Uint32Array(arr);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { readUInt32BE, writeUInt32BE } from 'vs/base/common/buffer';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { countEOL } from 'vs/editor/common/core/eolCounter';\nimport { ContiguousTokensEditing } from 'vs/editor/common/tokens/contiguousTokensEditing';\nimport { LineRange } from 'vs/editor/common/core/lineRange';\n\n/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n\tpublic static deserialize(buff: Uint8Array, offset: number, result: ContiguousMultilineTokens[]): number {\n\t\tconst view32 = new Uint32Array(buff.buffer);\n\t\tconst startLineNumber = readUInt32BE(buff, offset); offset += 4;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tconst tokens: Uint32Array[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst byteCount = readUInt32BE(buff, offset); offset += 4;\n\t\t\ttokens.push(view32.subarray(offset / 4, offset / 4 + byteCount / 4));\n\t\t\toffset += byteCount;\n\t\t}\n\t\tresult.push(new ContiguousMultilineTokens(startLineNumber, tokens));\n\t\treturn offset;\n\t}\n\n\t/**\n\t * The start line number for this block of tokens.\n\t */\n\tprivate _startLineNumber: number;\n\n\t/**\n\t * The tokens are stored in a binary format. There is an element for each line,\n\t * so `tokens[index]` contains all tokens on line `startLineNumber + index`.\n\t *\n\t * On a specific line, each token occupies two array indices. For token i:\n\t *  - at offset 2*i => endOffset\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tprivate _tokens: (Uint32Array | ArrayBuffer | null)[];\n\n\t/**\n\t * (Inclusive) start line number for these tokens.\n\t */\n\tpublic get startLineNumber(): number {\n\t\treturn this._startLineNumber;\n\t}\n\n\t/**\n\t * (Inclusive) end line number for these tokens.\n\t */\n\tpublic get endLineNumber(): number {\n\t\treturn this._startLineNumber + this._tokens.length - 1;\n\t}\n\n\tconstructor(startLineNumber: number, tokens: Uint32Array[]) {\n\t\tthis._startLineNumber = startLineNumber;\n\t\tthis._tokens = tokens;\n\t}\n\n\tgetLineRange(): LineRange {\n\t\treturn new LineRange(this._startLineNumber, this._startLineNumber + this._tokens.length);\n\t}\n\n\t/**\n\t * @see {@link _tokens}\n\t */\n\tpublic getLineTokens(lineNumber: number): Uint32Array | ArrayBuffer | null {\n\t\treturn this._tokens[lineNumber - this._startLineNumber];\n\t}\n\n\tpublic appendLineTokens(lineTokens: Uint32Array): void {\n\t\tthis._tokens.push(lineTokens);\n\t}\n\n\tpublic serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the start line number\n\t\tresult += 4; // 4 bytes for the line count\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tconst lineTokens = this._tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\tresult += 4; // 4 bytes for the byte count\n\t\t\tresult += lineTokens.byteLength;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic serialize(destination: Uint8Array, offset: number): number {\n\t\twriteUInt32BE(destination, this._startLineNumber, offset); offset += 4;\n\t\twriteUInt32BE(destination, this._tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tconst lineTokens = this._tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\twriteUInt32BE(destination, lineTokens.byteLength, offset); offset += 4;\n\t\t\tdestination.set(new Uint8Array(lineTokens.buffer), offset); offset += lineTokens.byteLength;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tpublic applyEdit(range: IRange, text: string): void {\n\t\tconst [eolCount, firstLineLength] = countEOL(text);\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\t// Nothing to delete\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstLineIndex = range.startLineNumber - this._startLineNumber;\n\t\tconst lastLineIndex = range.endLineNumber - this._startLineNumber;\n\n\t\tif (lastLineIndex < 0) {\n\t\t\t// this deletion occurs entirely before this block, so we only need to adjust line numbers\n\t\t\tconst deletedLinesCount = lastLineIndex - firstLineIndex;\n\t\t\tthis._startLineNumber -= deletedLinesCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= this._tokens.length) {\n\t\t\t// this deletion occurs entirely after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex < 0 && lastLineIndex >= this._tokens.length) {\n\t\t\t// this deletion completely encompasses this block\n\t\t\tthis._startLineNumber = 0;\n\t\t\tthis._tokens = [];\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex === lastLineIndex) {\n\t\t\t// a delete on a single line\n\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.delete(this._tokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= 0) {\n\t\t\t// The first line survives\n\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[firstLineIndex], range.startColumn - 1);\n\n\t\t\tif (lastLineIndex < this._tokens.length) {\n\t\t\t\t// The last line survives\n\t\t\t\tconst lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], lastLineTokens);\n\n\t\t\t\t// Delete middle lines\n\t\t\t\tthis._tokens.splice(firstLineIndex + 1, lastLineIndex - firstLineIndex);\n\t\t\t} else {\n\t\t\t\t// The last line does not survive\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], null);\n\n\t\t\t\t// Delete lines\n\t\t\t\tthis._tokens = this._tokens.slice(0, firstLineIndex + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// The first line does not survive\n\n\t\t\tconst deletedBefore = -firstLineIndex;\n\t\t\tthis._startLineNumber -= deletedBefore;\n\n\t\t\t// Remove beginning from last line\n\t\t\tthis._tokens[lastLineIndex] = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t// Delete lines\n\t\t\tthis._tokens = this._tokens.slice(lastLineIndex);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number, firstLineLength: number): void {\n\n\t\tif (eolCount === 0 && firstLineLength === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineIndex = position.lineNumber - this._startLineNumber;\n\n\t\tif (lineIndex < 0) {\n\t\t\t// this insertion occurs before this block, so we only need to adjust line numbers\n\t\t\tthis._startLineNumber += eolCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (lineIndex >= this._tokens.length) {\n\t\t\t// this insertion occurs after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (eolCount === 0) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[lineIndex], position.column - 1);\n\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n\n\t\tthis._insertLines(position.lineNumber, eolCount);\n\t}\n\n\tprivate _insertLines(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst lineTokens: (Uint32Array | ArrayBuffer | null)[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tlineTokens[i] = null;\n\t\t}\n\t\tthis._tokens = arrays.arrayInsert(this._tokens, insertIndex, lineTokens);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readUInt32BE, writeUInt32BE } from 'vs/base/common/buffer';\nimport { ContiguousMultilineTokens } from 'vs/editor/common/tokens/contiguousMultilineTokens';\n\nexport class ContiguousMultilineTokensBuilder {\n\n\tpublic static deserialize(buff: Uint8Array): ContiguousMultilineTokens[] {\n\t\tlet offset = 0;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tconst result: ContiguousMultilineTokens[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\toffset = ContiguousMultilineTokens.deserialize(buff, offset, result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate readonly _tokens: ContiguousMultilineTokens[];\n\n\tconstructor() {\n\t\tthis._tokens = [];\n\t}\n\n\tpublic add(lineNumber: number, lineTokens: Uint32Array): void {\n\t\tif (this._tokens.length > 0) {\n\t\t\tconst last = this._tokens[this._tokens.length - 1];\n\t\t\tif (last.endLineNumber + 1 === lineNumber) {\n\t\t\t\t// append\n\t\t\t\tlast.appendLineTokens(lineTokens);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._tokens.push(new ContiguousMultilineTokens(lineNumber, [lineTokens]));\n\t}\n\n\tpublic finalize(): ContiguousMultilineTokens[] {\n\t\treturn this._tokens;\n\t}\n\n\tpublic serialize(): Uint8Array {\n\t\tconst size = this._serializeSize();\n\t\tconst result = new Uint8Array(size);\n\t\tthis._serialize(result);\n\t\treturn result;\n\t}\n\n\tprivate _serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the count\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tresult += this._tokens[i].serializeSize();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _serialize(destination: Uint8Array): void {\n\t\tlet offset = 0;\n\t\twriteUInt32BE(destination, this._tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\toffset = this._tokens[i].serialize(destination, offset);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _remoteResourcesPath: string = `/${Schemas.vscodeRemoteResource}`;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(serverRootPath: string): void {\n\t\tthis._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isESM } from 'vs/base/common/amd';\nimport { AppResourcePath, FileAccess, nodeModulesAsarPath, nodeModulesPath } from 'vs/base/common/network';\nimport * as platform from 'vs/base/common/platform';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { URI } from 'vs/base/common/uri';\n\n\nclass DefineCall {\n\tconstructor(\n\t\tpublic readonly id: string | null | undefined,\n\t\tpublic readonly dependencies: string[] | null | undefined,\n\t\tpublic readonly callback: any\n\t) { }\n}\n\nclass AMDModuleImporter {\n\tpublic static INSTANCE = new AMDModuleImporter();\n\n\tprivate readonly _isWebWorker = (typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope');\n\tprivate readonly _isRenderer = typeof document === 'object';\n\n\tprivate readonly _defineCalls: DefineCall[] = [];\n\tprivate _initialized = false;\n\tprivate _amdPolicy: Pick<TrustedTypePolicy<{\n\t\tcreateScriptURL(value: string): string;\n\t}>, 'name' | 'createScriptURL'> | undefined;\n\n\tconstructor() { }\n\n\tprivate _initialize(): void {\n\t\tif (this._initialized) {\n\t\t\treturn;\n\t\t}\n\t\tthis._initialized = true;\n\n\t\t(<any>globalThis).define = (id: any, dependencies: any, callback: any) => {\n\t\t\tif (typeof id !== 'string') {\n\t\t\t\tcallback = dependencies;\n\t\t\t\tdependencies = id;\n\t\t\t\tid = null;\n\t\t\t}\n\t\t\tif (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n\t\t\t\tcallback = dependencies;\n\t\t\t\tdependencies = null;\n\t\t\t}\n\t\t\t// if (!dependencies) {\n\t\t\t// \tdependencies = ['require', 'exports', 'module'];\n\t\t\t// }\n\t\t\tthis._defineCalls.push(new DefineCall(id, dependencies, callback));\n\t\t};\n\n\t\t(<any>globalThis).define.amd = true;\n\n\t\tif (this._isRenderer) {\n\t\t\tthis._amdPolicy = window.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value) {\n\t\t\t\t\tif (value.startsWith(window.location.origin)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tif (value.startsWith('vscode-file://vscode-app')) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`[trusted_script_src] Invalid script url: ${value}`);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._isWebWorker) {\n\t\t\tthis._amdPolicy = (<any>globalThis).trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value: string) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async load<T>(scriptSrc: string): Promise<T> {\n\t\tthis._initialize();\n\t\tconst defineCall = await (this._isWebWorker ? this._workerLoadScript(scriptSrc) : this._isRenderer ? this._rendererLoadScript(scriptSrc) : this._nodeJSLoadScript(scriptSrc));\n\t\tif (!defineCall) {\n\t\t\tthrow new Error(`Did not receive a define call from script ${scriptSrc}`);\n\t\t}\n\t\t// TODO require, exports, module\n\t\tif (Array.isArray(defineCall.dependencies) && defineCall.dependencies.length > 0) {\n\t\t\tthrow new Error(`Cannot resolve dependencies for script ${scriptSrc}. The dependencies are: ${defineCall.dependencies.join(', ')}`);\n\t\t}\n\t\tif (typeof defineCall.callback === 'function') {\n\t\t\treturn defineCall.callback([]);\n\t\t} else {\n\t\t\treturn defineCall.callback;\n\t\t}\n\t}\n\n\tprivate _rendererLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\treturn new Promise<DefineCall | undefined>((resolve, reject) => {\n\t\t\tconst scriptElement = document.createElement('script');\n\t\t\tscriptElement.setAttribute('async', 'async');\n\t\t\tscriptElement.setAttribute('type', 'text/javascript');\n\n\t\t\tconst unbind = () => {\n\t\t\t\tscriptElement.removeEventListener('load', loadEventListener);\n\t\t\t\tscriptElement.removeEventListener('error', errorEventListener);\n\t\t\t};\n\n\t\t\tconst loadEventListener = (e: any) => {\n\t\t\t\tunbind();\n\t\t\t\tresolve(this._defineCalls.pop());\n\t\t\t};\n\n\t\t\tconst errorEventListener = (e: any) => {\n\t\t\t\tunbind();\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\tscriptElement.addEventListener('load', loadEventListener);\n\t\t\tscriptElement.addEventListener('error', errorEventListener);\n\t\t\tif (this._amdPolicy) {\n\t\t\t\tscriptSrc = this._amdPolicy.createScriptURL(scriptSrc) as any as string;\n\t\t\t}\n\t\t\tscriptElement.setAttribute('src', scriptSrc);\n\t\t\tdocument.getElementsByTagName('head')[0].appendChild(scriptElement);\n\t\t});\n\t}\n\n\tprivate _workerLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\treturn new Promise<DefineCall | undefined>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tif (this._amdPolicy) {\n\t\t\t\t\tscriptSrc = this._amdPolicy.createScriptURL(scriptSrc) as any as string;\n\t\t\t\t}\n\t\t\t\timportScripts(scriptSrc);\n\t\t\t\tresolve(this._defineCalls.pop());\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _nodeJSLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\ttry {\n\t\t\tconst fs = <typeof import('fs')>globalThis._VSCODE_NODE_MODULES['fs'];\n\t\t\tconst vm = <typeof import('vm')>globalThis._VSCODE_NODE_MODULES['vm'];\n\t\t\tconst module = <typeof import('module')>globalThis._VSCODE_NODE_MODULES['module'];\n\n\t\t\tconst filePath = URI.parse(scriptSrc).fsPath;\n\t\t\tconst content = fs.readFileSync(filePath).toString();\n\t\t\tconst scriptSource = module.wrap(content.replace(/^#!.*/, ''));\n\t\t\tconst script = new vm.Script(scriptSource);\n\t\t\tconst compileWrapper = script.runInThisContext();\n\t\t\tcompileWrapper.apply();\n\t\t\treturn this._defineCalls.pop();\n\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nconst cache = new Map<string, Promise<any>>();\n\nlet _paths: Record<string, string> = {};\nif (typeof globalThis.require === 'object') {\n\t_paths = (<Record<string, any>>globalThis.require).paths ?? {};\n}\n\n/**\n * Utility for importing an AMD node module. This util supports AMD and ESM contexts and should be used while the ESM adoption\n * is on its way.\n *\n * e.g. pass in `vscode-textmate/release/main.js`\n */\nexport async function importAMDNodeModule<T>(nodeModuleName: string, pathInsideNodeModule: string, isBuilt?: boolean): Promise<T> {\n\tif (isESM) {\n\n\t\tif (isBuilt === undefined) {\n\t\t\tconst product = globalThis._VSCODE_PRODUCT_JSON as unknown as IProductConfiguration;\n\t\t\tisBuilt = Boolean((product ?? (<any>globalThis).vscode?.context?.configuration()?.product)?.commit);\n\t\t}\n\n\t\tif (_paths[nodeModuleName]) {\n\t\t\tnodeModuleName = _paths[nodeModuleName];\n\t\t}\n\n\t\tconst nodeModulePath = `${nodeModuleName}/${pathInsideNodeModule}`;\n\t\tif (cache.has(nodeModulePath)) {\n\t\t\treturn cache.get(nodeModulePath)!;\n\t\t}\n\t\tlet scriptSrc: string;\n\t\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(nodeModulePath)) {\n\t\t\t// looks like a URL\n\t\t\t// bit of a special case for: src/vs/workbench/services/languageDetection/browser/languageDetectionSimpleWorker.ts\n\t\t\tscriptSrc = nodeModulePath;\n\t\t} else {\n\t\t\tconst useASAR = (isBuilt && !platform.isWeb);\n\t\t\tconst actualNodeModulesPath = (useASAR ? nodeModulesAsarPath : nodeModulesPath);\n\t\t\tconst resourcePath: AppResourcePath = `${actualNodeModulesPath}/${nodeModulePath}`;\n\t\t\tscriptSrc = FileAccess.asBrowserUri(resourcePath).toString(true);\n\t\t}\n\t\tconst result = AMDModuleImporter.INSTANCE.load<T>(scriptSrc);\n\t\tcache.set(nodeModulePath, result);\n\t\treturn result;\n\t} else {\n\t\treturn await import(nodeModuleName);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { MicrotaskDelay } from './symbols';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises resolves or rejects and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\ttry {\n\t\tconst result = await Promise.race(promises);\n\t\treturn result;\n\t} finally {\n\t\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\t\tif (index !== resolvedPromiseIndex) {\n\t\t\t\tcancellablePromise.cancel();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler implements IDisposable {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tprivate isDisposed = false;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.isDisposed) {\n\t\t\tthrow new Error('Throttler is disposed');\n\t\t}\n\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tif (this.isDisposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t\tthis.throttler.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T>{\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t * An event that fires when every promise in the queue\n\t * has started to execute. In other words: no work is\n\t * pending to be scheduled.\n\t *\n\t * This is NOT an event that signals when all promises\n\t * have finished though.\n\t */\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): ILimiter<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface INextTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithNextTask {\n\treadonly next: INextTask;\n}\n\nexport class TaskSequentializer {\n\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: INextTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending?.promise;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n\n\thasNext(): this is ITaskSequentializerWithNextTask {\n\t\treturn !!this._next;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._next?.promise ?? this._pending?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate outcome?: { outcome: DeferredOutcome.Rejected; value: any } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.outcome;\n\t}\n\n\tpublic get value() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\treturn this.error(new CancellationError());\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Token, TokenizationResult, EncodedTokenizationResult, IState } from 'vs/editor/common/languages';\nimport { LanguageId, FontStyle, ColorId, StandardTokenType, MetadataConsts } from 'vs/editor/common/encodedTokenAttributes';\n\nexport const NullState: IState = new class implements IState {\n\tpublic clone(): IState {\n\t\treturn this;\n\t}\n\tpublic equals(other: IState): boolean {\n\t\treturn (this === other);\n\t}\n};\n\nexport function nullTokenize(languageId: string, state: IState): TokenizationResult {\n\treturn new TokenizationResult([new Token(0, '', languageId)], state);\n}\n\nexport function nullTokenizeEncoded(languageId: LanguageId, state: IState | null): EncodedTokenizationResult {\n\tconst tokens = new Uint32Array(2);\n\ttokens[0] = 0;\n\ttokens[1] = (\n\t\t(languageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t| (FontStyle.None << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t| (ColorId.DefaultForeground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t| (ColorId.DefaultBackground << MetadataConsts.BACKGROUND_OFFSET)\n\t) >>> 0;\n\n\treturn new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IdleDeadline, runWhenIdle } from 'vs/base/common/async';\nimport { BugIndicatingError, onUnexpectedError } from 'vs/base/common/errors';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { countEOL } from 'vs/editor/common/core/eolCounter';\nimport { LineRange } from 'vs/editor/common/core/lineRange';\nimport { OffsetRange } from 'vs/editor/common/core/offsetRange';\nimport { Position } from 'vs/editor/common/core/position';\nimport { StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\nimport { EncodedTokenizationResult, IBackgroundTokenizationStore, IBackgroundTokenizer, ILanguageIdCodec, IState, ITokenizationSupport } from 'vs/editor/common/languages';\nimport { nullTokenizeEncoded } from 'vs/editor/common/languages/nullTokenize';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { FixedArray } from 'vs/editor/common/model/fixedArray';\nimport { IModelContentChange } from 'vs/editor/common/textModelEvents';\nimport { ContiguousMultilineTokensBuilder } from 'vs/editor/common/tokens/contiguousMultilineTokensBuilder';\nimport { LineTokens } from 'vs/editor/common/tokens/lineTokens';\n\nconst enum Constants {\n\tCHEAP_TOKENIZATION_LENGTH_LIMIT = 2048\n}\n\nexport class TokenizerWithStateStore<TState extends IState = IState> {\n\tprivate readonly initialState = this.tokenizationSupport.getInitialState() as TState;\n\n\tpublic readonly store: TrackingTokenizationStateStore<TState>;\n\n\tconstructor(\n\t\tlineCount: number,\n\t\tpublic readonly tokenizationSupport: ITokenizationSupport\n\t) {\n\t\tthis.store = new TrackingTokenizationStateStore<TState>(lineCount);\n\t}\n\n\tpublic getStartState(lineNumber: number): TState | null {\n\t\treturn this.store.getStartState(lineNumber, this.initialState);\n\t}\n\n\tpublic getFirstInvalidLine(): { lineNumber: number; startState: TState } | null {\n\t\treturn this.store.getFirstInvalidLine(this.initialState);\n\t}\n}\n\nexport class TokenizerWithStateStoreAndTextModel<TState extends IState = IState> extends TokenizerWithStateStore<TState> {\n\tconstructor(\n\t\tlineCount: number,\n\t\ttokenizationSupport: ITokenizationSupport,\n\t\tpublic readonly _textModel: ITextModel,\n\t\tpublic readonly _languageIdCodec: ILanguageIdCodec\n\t) {\n\t\tsuper(lineCount, tokenizationSupport);\n\t}\n\n\tpublic updateTokensUntilLine(builder: ContiguousMultilineTokensBuilder, lineNumber: number): void {\n\t\tconst languageId = this._textModel.getLanguageId();\n\n\t\twhile (true) {\n\t\t\tconst lineToTokenize = this.getFirstInvalidLine();\n\t\t\tif (!lineToTokenize || lineToTokenize.lineNumber > lineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst text = this._textModel.getLineContent(lineToTokenize.lineNumber);\n\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineToTokenize.startState);\n\t\t\tbuilder.add(lineToTokenize.lineNumber, r.tokens);\n\t\t\tthis.store.setEndState(lineToTokenize.lineNumber, r.endState as TState);\n\t\t}\n\t}\n\n\t/** assumes state is up to date */\n\tpublic getTokenTypeIfInsertingCharacter(position: Position, character: string): StandardTokenType {\n\t\t// TODO@hediet: use tokenizeLineWithEdit\n\t\tconst lineStartState = this.getStartState(position.lineNumber);\n\t\tif (!lineStartState) {\n\t\t\treturn StandardTokenType.Other;\n\t\t}\n\n\t\tconst languageId = this._textModel.getLanguageId();\n\t\tconst lineContent = this._textModel.getLineContent(position.lineNumber);\n\n\t\t// Create the text as if `character` was inserted\n\t\tconst text = (\n\t\t\tlineContent.substring(0, position.column - 1)\n\t\t\t+ character\n\t\t\t+ lineContent.substring(position.column - 1)\n\t\t);\n\n\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineStartState);\n\t\tconst lineTokens = new LineTokens(r.tokens, text, this._languageIdCodec);\n\t\tif (lineTokens.getCount() === 0) {\n\t\t\treturn StandardTokenType.Other;\n\t\t}\n\n\t\tconst tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\treturn lineTokens.getStandardTokenType(tokenIndex);\n\t}\n\n\t/** assumes state is up to date */\n\tpublic tokenizeLineWithEdit(position: Position, length: number, newText: string): LineTokens | null {\n\t\tconst lineNumber = position.lineNumber;\n\t\tconst column = position.column;\n\n\t\tconst lineStartState = this.getStartState(lineNumber);\n\t\tif (!lineStartState) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst curLineContent = this._textModel.getLineContent(lineNumber);\n\t\tconst newLineContent = curLineContent.substring(0, column - 1)\n\t\t\t+ newText + curLineContent.substring(column - 1 + length);\n\n\t\tconst languageId = this._textModel.getLanguageIdAtPosition(lineNumber, 0);\n\t\tconst result = safeTokenize(\n\t\t\tthis._languageIdCodec,\n\t\t\tlanguageId,\n\t\t\tthis.tokenizationSupport,\n\t\t\tnewLineContent,\n\t\t\ttrue,\n\t\t\tlineStartState\n\t\t);\n\n\t\tconst lineTokens = new LineTokens(result.tokens, newLineContent, this._languageIdCodec);\n\t\treturn lineTokens;\n\t}\n\n\tpublic isCheapToTokenize(lineNumber: number): boolean {\n\t\tconst firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n\t\tif (lineNumber < firstInvalidLineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (lineNumber === firstInvalidLineNumber\n\t\t\t&& this._textModel.getLineLength(lineNumber) < Constants.CHEAP_TOKENIZATION_LENGTH_LIMIT) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * The result is not cached.\n\t */\n\tpublic tokenizeHeuristically(builder: ContiguousMultilineTokensBuilder, startLineNumber: number, endLineNumber: number): { heuristicTokens: boolean } {\n\t\tif (endLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n\t\t\t// nothing to do\n\t\t\treturn { heuristicTokens: false };\n\t\t}\n\n\t\tif (startLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n\t\t\t// tokenization has reached the viewport start...\n\t\t\tthis.updateTokensUntilLine(builder, endLineNumber);\n\t\t\treturn { heuristicTokens: false };\n\t\t}\n\n\t\tlet state = this.guessStartState(startLineNumber);\n\t\tconst languageId = this._textModel.getLanguageId();\n\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst text = this._textModel.getLineContent(lineNumber);\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, state);\n\t\t\tbuilder.add(lineNumber, r.tokens);\n\t\t\tstate = r.endState;\n\t\t}\n\n\t\treturn { heuristicTokens: true };\n\t}\n\n\tprivate guessStartState(lineNumber: number): IState {\n\t\tlet nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(lineNumber);\n\t\tconst likelyRelevantLines: string[] = [];\n\t\tlet initialState: IState | null = null;\n\t\tfor (let i = lineNumber - 1; nonWhitespaceColumn > 1 && i >= 1; i--) {\n\t\t\tconst newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n\t\t\t// Ignore lines full of whitespace\n\t\t\tif (newNonWhitespaceIndex === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (newNonWhitespaceIndex < nonWhitespaceColumn) {\n\t\t\t\tlikelyRelevantLines.push(this._textModel.getLineContent(i));\n\t\t\t\tnonWhitespaceColumn = newNonWhitespaceIndex;\n\t\t\t\tinitialState = this.getStartState(i);\n\t\t\t\tif (initialState) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!initialState) {\n\t\t\tinitialState = this.tokenizationSupport.getInitialState();\n\t\t}\n\t\tlikelyRelevantLines.reverse();\n\n\t\tconst languageId = this._textModel.getLanguageId();\n\t\tlet state = initialState;\n\t\tfor (const line of likelyRelevantLines) {\n\t\t\tconst r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, line, false, state);\n\t\t\tstate = r.endState;\n\t\t}\n\t\treturn state;\n\t}\n}\n\n/**\n * **Invariant:**\n * If the text model is retokenized from line 1 to {@link getFirstInvalidEndStateLineNumber}() - 1,\n * then the recomputed end state for line l will be equal to {@link getEndState}(l).\n */\nexport class TrackingTokenizationStateStore<TState extends IState> {\n\tprivate readonly _tokenizationStateStore = new TokenizationStateStore<TState>();\n\tprivate readonly _invalidEndStatesLineNumbers = new RangePriorityQueueImpl();\n\n\tconstructor(private lineCount: number) {\n\t\tthis._invalidEndStatesLineNumbers.addRange(new OffsetRange(1, lineCount + 1));\n\t}\n\n\tpublic getEndState(lineNumber: number): TState | null {\n\t\treturn this._tokenizationStateStore.getEndState(lineNumber);\n\t}\n\n\t/**\n\t * @returns if the end state has changed.\n\t */\n\tpublic setEndState(lineNumber: number, state: TState): boolean {\n\t\tif (!state) {\n\t\t\tthrow new BugIndicatingError('Cannot set null/undefined state');\n\t\t}\n\n\t\tthis._invalidEndStatesLineNumbers.delete(lineNumber);\n\t\tconst r = this._tokenizationStateStore.setEndState(lineNumber, state);\n\t\tif (r && lineNumber < this.lineCount) {\n\t\t\t// because the state changed, we cannot trust the next state anymore and have to invalidate it.\n\t\t\tthis._invalidEndStatesLineNumbers.addRange(new OffsetRange(lineNumber + 1, lineNumber + 2));\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic acceptChange(range: LineRange, newLineCount: number): void {\n\t\tthis.lineCount += newLineCount - range.length;\n\t\tthis._tokenizationStateStore.acceptChange(range, newLineCount);\n\t\tthis._invalidEndStatesLineNumbers.addRangeAndResize(new OffsetRange(range.startLineNumber, range.endLineNumberExclusive), newLineCount);\n\t}\n\n\tpublic acceptChanges(changes: IModelContentChange[]) {\n\t\tfor (const c of changes) {\n\t\t\tconst [eolCount] = countEOL(c.text);\n\t\t\tthis.acceptChange(new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1), eolCount + 1);\n\t\t}\n\t}\n\n\tpublic invalidateEndStateRange(range: LineRange): void {\n\t\tthis._invalidEndStatesLineNumbers.addRange(new OffsetRange(range.startLineNumber, range.endLineNumberExclusive));\n\t}\n\n\tpublic getFirstInvalidEndStateLineNumber(): number | null { return this._invalidEndStatesLineNumbers.min; }\n\n\tpublic getFirstInvalidEndStateLineNumberOrMax(): number {\n\t\treturn this.getFirstInvalidEndStateLineNumber() || Number.MAX_SAFE_INTEGER;\n\t}\n\n\tpublic allStatesValid(): boolean { return this._invalidEndStatesLineNumbers.min === null; }\n\n\tpublic getStartState(lineNumber: number, initialState: TState): TState | null {\n\t\tif (lineNumber === 1) { return initialState; }\n\t\treturn this.getEndState(lineNumber - 1);\n\t}\n\n\tpublic getFirstInvalidLine(initialState: TState): { lineNumber: number; startState: TState } | null {\n\t\tconst lineNumber = this.getFirstInvalidEndStateLineNumber();\n\t\tif (lineNumber === null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst startState = this.getStartState(lineNumber, initialState);\n\t\tif (!startState) {\n\t\t\tthrow new BugIndicatingError('Start state must be defined');\n\t\t}\n\n\t\treturn { lineNumber, startState };\n\t}\n}\n\nexport class TokenizationStateStore<TState extends IState> {\n\tprivate readonly _lineEndStates = new FixedArray<TState | null>(null);\n\n\tpublic getEndState(lineNumber: number): TState | null {\n\t\treturn this._lineEndStates.get(lineNumber);\n\t}\n\n\tpublic setEndState(lineNumber: number, state: TState): boolean {\n\t\tconst oldState = this._lineEndStates.get(lineNumber);\n\t\tif (oldState && oldState.equals(state)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._lineEndStates.set(lineNumber, state);\n\t\treturn true;\n\t}\n\n\tpublic acceptChange(range: LineRange, newLineCount: number): void {\n\t\tlet length = range.length;\n\t\tif (newLineCount > 0 && length > 0) {\n\t\t\t// Keep the last state, even though it is unrelated.\n\t\t\t// But if the new state happens to agree with this last state, then we know we can stop tokenizing.\n\t\t\tlength--;\n\t\t\tnewLineCount--;\n\t\t}\n\n\t\tthis._lineEndStates.replace(range.startLineNumber, length, newLineCount);\n\t}\n\n\tpublic acceptChanges(changes: IModelContentChange[]) {\n\t\tfor (const c of changes) {\n\t\t\tconst [eolCount] = countEOL(c.text);\n\t\t\tthis.acceptChange(new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1), eolCount + 1);\n\t\t}\n\t}\n}\n\ninterface RangePriorityQueue {\n\tget min(): number | null;\n\tremoveMin(): number | null;\n\n\taddRange(range: OffsetRange): void;\n\n\taddRangeAndResize(range: OffsetRange, newLength: number): void;\n}\n\nexport class RangePriorityQueueImpl implements RangePriorityQueue {\n\tprivate readonly _ranges: OffsetRange[] = [];\n\n\tpublic getRanges(): OffsetRange[] {\n\t\treturn this._ranges;\n\t}\n\n\tpublic get min(): number | null {\n\t\tif (this._ranges.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._ranges[0].start;\n\t}\n\n\tpublic removeMin(): number | null {\n\t\tif (this._ranges.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[0];\n\t\tif (range.start + 1 === range.endExclusive) {\n\t\t\tthis._ranges.shift();\n\t\t} else {\n\t\t\tthis._ranges[0] = new OffsetRange(range.start + 1, range.endExclusive);\n\t\t}\n\t\treturn range.start;\n\t}\n\n\tpublic delete(value: number): void {\n\t\tconst idx = this._ranges.findIndex(r => r.contains(value));\n\t\tif (idx !== -1) {\n\t\t\tconst range = this._ranges[idx];\n\t\t\tif (range.start === value) {\n\t\t\t\tif (range.endExclusive === value + 1) {\n\t\t\t\t\tthis._ranges.splice(idx, 1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._ranges[idx] = new OffsetRange(value + 1, range.endExclusive);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (range.endExclusive === value + 1) {\n\t\t\t\t\tthis._ranges[idx] = new OffsetRange(range.start, value);\n\t\t\t\t} else {\n\t\t\t\t\tthis._ranges.splice(idx, 1, new OffsetRange(range.start, value), new OffsetRange(value + 1, range.endExclusive));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic addRange(range: OffsetRange): void {\n\t\tOffsetRange.addRange(range, this._ranges);\n\t}\n\n\tpublic addRangeAndResize(range: OffsetRange, newLength: number): void {\n\t\tlet idxFirstMightBeIntersecting = 0;\n\t\twhile (!(idxFirstMightBeIntersecting >= this._ranges.length || range.start <= this._ranges[idxFirstMightBeIntersecting].endExclusive)) {\n\t\t\tidxFirstMightBeIntersecting++;\n\t\t}\n\t\tlet idxFirstIsAfter = idxFirstMightBeIntersecting;\n\t\twhile (!(idxFirstIsAfter >= this._ranges.length || range.endExclusive < this._ranges[idxFirstIsAfter].start)) {\n\t\t\tidxFirstIsAfter++;\n\t\t}\n\t\tconst delta = newLength - range.length;\n\n\t\tfor (let i = idxFirstIsAfter; i < this._ranges.length; i++) {\n\t\t\tthis._ranges[i] = this._ranges[i].delta(delta);\n\t\t}\n\n\t\tif (idxFirstMightBeIntersecting === idxFirstIsAfter) {\n\t\t\tconst newRange = new OffsetRange(range.start, range.start + newLength);\n\t\t\tif (!newRange.isEmpty) {\n\t\t\t\tthis._ranges.splice(idxFirstMightBeIntersecting, 0, newRange);\n\t\t\t}\n\t\t} else {\n\t\t\tconst start = Math.min(range.start, this._ranges[idxFirstMightBeIntersecting].start);\n\t\t\tconst endEx = Math.max(range.endExclusive, this._ranges[idxFirstIsAfter - 1].endExclusive);\n\n\t\t\tconst newRange = new OffsetRange(start, endEx + delta);\n\t\t\tif (!newRange.isEmpty) {\n\t\t\t\tthis._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting, newRange);\n\t\t\t} else {\n\t\t\t\tthis._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn this._ranges.map(r => r.toString()).join(' + ');\n\t}\n}\n\n\nfunction safeTokenize(languageIdCodec: ILanguageIdCodec, languageId: string, tokenizationSupport: ITokenizationSupport | null, text: string, hasEOL: boolean, state: IState): EncodedTokenizationResult {\n\tlet r: EncodedTokenizationResult | null = null;\n\n\tif (tokenizationSupport) {\n\t\ttry {\n\t\t\tr = tokenizationSupport.tokenizeEncoded(text, hasEOL, state.clone());\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\tif (!r) {\n\t\tr = nullTokenizeEncoded(languageIdCodec.encodeLanguageId(languageId), state);\n\t}\n\n\tLineTokens.convertToEndOffset(r.tokens, text.length);\n\treturn r;\n}\n\nexport class DefaultBackgroundTokenizer implements IBackgroundTokenizer {\n\tprivate _isDisposed = false;\n\n\tconstructor(\n\t\tprivate readonly _tokenizerWithStateStore: TokenizerWithStateStoreAndTextModel,\n\t\tprivate readonly _backgroundTokenStore: IBackgroundTokenizationStore,\n\t) {\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic handleChanges(): void {\n\t\tthis._beginBackgroundTokenization();\n\t}\n\n\tprivate _isScheduled = false;\n\tprivate _beginBackgroundTokenization(): void {\n\t\tif (this._isScheduled || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isScheduled = true;\n\t\trunWhenIdle((deadline) => {\n\t\t\tthis._isScheduled = false;\n\n\t\t\tthis._backgroundTokenizeWithDeadline(deadline);\n\t\t});\n\t}\n\n\t/**\n\t * Tokenize until the deadline occurs, but try to yield every 1-2ms.\n\t */\n\tprivate _backgroundTokenizeWithDeadline(deadline: IdleDeadline): void {\n\t\t// Read the time remaining from the `deadline` immediately because it is unclear\n\t\t// if the `deadline` object will be valid after execution leaves this function.\n\t\tconst endTime = Date.now() + deadline.timeRemaining();\n\n\t\tconst execute = () => {\n\t\t\tif (this._isDisposed || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n\t\t\t\t// disposed in the meantime or detached or finished\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._backgroundTokenizeForAtLeast1ms();\n\n\t\t\tif (Date.now() < endTime) {\n\t\t\t\t// There is still time before reaching the deadline, so yield to the browser and then\n\t\t\t\t// continue execution\n\t\t\t\tsetTimeout0(execute);\n\t\t\t} else {\n\t\t\t\t// The deadline has been reached, so schedule a new idle callback if necessary\n\t\t\t\tthis._beginBackgroundTokenization();\n\t\t\t}\n\t\t};\n\t\texecute();\n\t}\n\n\t/**\n\t * Tokenize for at least 1ms.\n\t */\n\tprivate _backgroundTokenizeForAtLeast1ms(): void {\n\t\tconst lineCount = this._tokenizerWithStateStore._textModel.getLineCount();\n\t\tconst builder = new ContiguousMultilineTokensBuilder();\n\t\tconst sw = StopWatch.create(false);\n\n\t\tdo {\n\t\t\tif (sw.elapsed() > 1) {\n\t\t\t\t// the comparison is intentionally > 1 and not >= 1 to ensure that\n\t\t\t\t// a full millisecond has elapsed, given how microseconds are rounded\n\t\t\t\t// to milliseconds\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n\n\t\t\tif (tokenizedLineNumber >= lineCount) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (this._hasLinesToTokenize());\n\n\t\tthis._backgroundTokenStore.setTokens(builder.finalize());\n\t\tthis.checkFinished();\n\t}\n\n\tprivate _hasLinesToTokenize(): boolean {\n\t\tif (!this._tokenizerWithStateStore) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this._tokenizerWithStateStore.store.allStatesValid();\n\t}\n\n\tprivate _tokenizeOneInvalidLine(builder: ContiguousMultilineTokensBuilder): number {\n\t\tconst firstInvalidLine = this._tokenizerWithStateStore?.getFirstInvalidLine();\n\t\tif (!firstInvalidLine) {\n\t\t\treturn this._tokenizerWithStateStore._textModel.getLineCount() + 1;\n\t\t}\n\t\tthis._tokenizerWithStateStore.updateTokensUntilLine(builder, firstInvalidLine.lineNumber);\n\t\treturn firstInvalidLine.lineNumber;\n\t}\n\n\tpublic checkFinished(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._tokenizerWithStateStore.store.allStatesValid()) {\n\t\t\tthis._backgroundTokenStore.backgroundTokenizationFinished();\n\t\t}\n\t}\n\n\tpublic requestTokens(startLineNumber: number, endLineNumberExclusive: number): void {\n\t\tthis._tokenizerWithStateStore.store.invalidateEndStateRange(new LineRange(startLineNumber, endLineNumberExclusive));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { LanguageId, TokenMetadata } from 'vs/editor/common/encodedTokenAttributes';\nimport { EncodedTokenizationResult, IBackgroundTokenizationStore, IBackgroundTokenizer, IState, ITokenizationSupport, TokenizationResult } from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport type { IGrammar, StateStack } from 'vscode-textmate';\n\nexport class TextMateTokenizationSupport extends Disposable implements ITokenizationSupport {\n\tprivate readonly _seenLanguages: boolean[] = [];\n\tprivate readonly _onDidEncounterLanguage: Emitter<LanguageId> = this._register(new Emitter<LanguageId>());\n\tpublic readonly onDidEncounterLanguage: Event<LanguageId> = this._onDidEncounterLanguage.event;\n\n\tconstructor(\n\t\tprivate readonly _grammar: IGrammar,\n\t\tprivate readonly _initialState: StateStack,\n\t\tprivate readonly _containsEmbeddedLanguages: boolean,\n\t\tprivate readonly _createBackgroundTokenizer: ((textModel: ITextModel, tokenStore: IBackgroundTokenizationStore) => IBackgroundTokenizer | undefined) | undefined,\n\t\tprivate readonly _backgroundTokenizerShouldOnlyVerifyTokens: () => boolean,\n\t\tprivate readonly _reportTokenizationTime: (timeMs: number, lineLength: number, isRandomSample: boolean) => void,\n\t\tprivate readonly _reportSlowTokenization: boolean,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic get backgroundTokenizerShouldOnlyVerifyTokens(): boolean | undefined {\n\t\treturn this._backgroundTokenizerShouldOnlyVerifyTokens();\n\t}\n\n\tpublic getInitialState(): IState {\n\t\treturn this._initialState;\n\t}\n\n\tpublic tokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult {\n\t\tthrow new Error('Not supported!');\n\t}\n\n\tpublic createBackgroundTokenizer(textModel: ITextModel, store: IBackgroundTokenizationStore): IBackgroundTokenizer | undefined {\n\t\tif (this._createBackgroundTokenizer) {\n\t\t\treturn this._createBackgroundTokenizer(textModel, store);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic tokenizeEncoded(line: string, hasEOL: boolean, state: StateStack): EncodedTokenizationResult {\n\t\tconst isRandomSample = Math.random() * 10_000 < 1;\n\t\tconst shouldMeasure = this._reportSlowTokenization || isRandomSample;\n\t\tconst sw = shouldMeasure ? new StopWatch(true) : undefined;\n\t\tconst textMateResult = this._grammar.tokenizeLine2(line, state, 500);\n\t\tif (shouldMeasure) {\n\t\t\tconst timeMS = sw!.elapsed();\n\t\t\tif (isRandomSample || timeMS > 32) {\n\t\t\t\tthis._reportTokenizationTime!(timeMS, line.length, isRandomSample);\n\t\t\t}\n\t\t}\n\n\t\tif (textMateResult.stoppedEarly) {\n\t\t\tconsole.warn(`Time limit reached when tokenizing line: ${line.substring(0, 100)}`);\n\t\t\t// return the state at the beginning of the line\n\t\t\treturn new EncodedTokenizationResult(textMateResult.tokens, state);\n\t\t}\n\n\t\tif (this._containsEmbeddedLanguages) {\n\t\t\tconst seenLanguages = this._seenLanguages;\n\t\t\tconst tokens = textMateResult.tokens;\n\n\t\t\t// Must check if any of the embedded languages was hit\n\t\t\tfor (let i = 0, len = (tokens.length >>> 1); i < len; i++) {\n\t\t\t\tconst metadata = tokens[(i << 1) + 1];\n\t\t\t\tconst languageId = TokenMetadata.getLanguageId(metadata);\n\n\t\t\t\tif (!seenLanguages[languageId]) {\n\t\t\t\t\tseenLanguages[languageId] = true;\n\t\t\t\t\tthis._onDidEncounterLanguage.fire(languageId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet endState: StateStack;\n\t\t// try to save an object if possible\n\t\tif (state.equals(textMateResult.ruleStack)) {\n\t\t\tendState = state;\n\t\t} else {\n\t\t\tendState = textMateResult.ruleStack;\n\t\t}\n\n\t\treturn new EncodedTokenizationResult(textMateResult.tokens, endState);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageId } from 'vs/editor/common/encodedTokenAttributes';\nimport { EncodedTokenizationResult, IBackgroundTokenizationStore, IBackgroundTokenizer, IState, ITokenizationSupport, TokenizationResult } from 'vs/editor/common/languages';\nimport { nullTokenizeEncoded } from 'vs/editor/common/languages/nullTokenize';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IObservable, keepAlive } from 'vs/base/common/observable';\n\nexport class TokenizationSupportWithLineLimit extends Disposable implements ITokenizationSupport {\n\tget backgroundTokenizerShouldOnlyVerifyTokens(): boolean | undefined {\n\t\treturn this._actual.backgroundTokenizerShouldOnlyVerifyTokens;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _encodedLanguageId: LanguageId,\n\t\tprivate readonly _actual: ITokenizationSupport,\n\t\tprivate readonly _maxTokenizationLineLength: IObservable<number>,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(keepAlive(this._maxTokenizationLineLength));\n\t}\n\n\tgetInitialState(): IState {\n\t\treturn this._actual.getInitialState();\n\t}\n\n\ttokenize(line: string, hasEOL: boolean, state: IState): TokenizationResult {\n\t\tthrow new Error('Not supported!');\n\t}\n\n\ttokenizeEncoded(line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult {\n\t\t// Do not attempt to tokenize if a line is too long\n\t\tif (line.length >= this._maxTokenizationLineLength.get()) {\n\t\t\treturn nullTokenizeEncoded(this._encodedLanguageId, state);\n\t\t}\n\n\t\treturn this._actual.tokenizeEncoded(line, hasEOL, state);\n\t}\n\n\tcreateBackgroundTokenizer(textModel: ITextModel, store: IBackgroundTokenizationStore): IBackgroundTokenizer | undefined {\n\t\tif (this._actual.createBackgroundTokenizer) {\n\t\t\treturn this._actual.createBackgroundTokenizer(textModel, store);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { importAMDNodeModule } from 'vs/amdX';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { observableValue } from 'vs/base/common/observable';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { LineRange } from 'vs/editor/common/core/lineRange';\nimport { LanguageId } from 'vs/editor/common/encodedTokenAttributes';\nimport { IModelChangedEvent, MirrorTextModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { TokenizerWithStateStore } from 'vs/editor/common/model/textModelTokens';\nimport { ContiguousMultilineTokensBuilder } from 'vs/editor/common/tokens/contiguousMultilineTokensBuilder';\nimport { LineTokens } from 'vs/editor/common/tokens/lineTokens';\nimport { TextMateTokenizationSupport } from 'vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport';\nimport { TokenizationSupportWithLineLimit } from 'vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit';\nimport type { StackDiff, StateStack, diffStateStacksRefEq } from 'vscode-textmate';\nimport { ICreateGrammarResult } from 'vs/workbench/services/textMate/common/TMGrammarFactory';\nimport { StateDeltas } from 'vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.worker';\n\nexport interface TextMateModelTokenizerHost {\n\tgetOrCreateGrammar(languageId: string, encodedLanguageId: LanguageId): Promise<ICreateGrammarResult | null>;\n\tsetTokensAndStates(versionId: number, tokens: Uint8Array, stateDeltas: StateDeltas[]): void;\n\treportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, isRandomSample: boolean): void;\n}\n\nexport class TextMateWorkerTokenizer extends MirrorTextModel {\n\tprivate _tokenizerWithStateStore: TokenizerWithStateStore<StateStack> | null = null;\n\tprivate _isDisposed: boolean = false;\n\tprivate readonly _maxTokenizationLineLength = observableValue('_maxTokenizationLineLength', -1);\n\tprivate _diffStateStacksRefEqFn?: typeof diffStateStacksRefEq;\n\tprivate readonly _tokenizeDebouncer = new RunOnceScheduler(() => this._tokenize(), 10);\n\n\tconstructor(\n\t\turi: URI,\n\t\tlines: string[],\n\t\teol: string,\n\t\tversionId: number,\n\t\tprivate readonly _host: TextMateModelTokenizerHost,\n\t\tprivate _languageId: string,\n\t\tprivate _encodedLanguageId: LanguageId,\n\t\tmaxTokenizationLineLength: number,\n\t) {\n\t\tsuper(uri, lines, eol, versionId);\n\t\tthis._maxTokenizationLineLength.set(maxTokenizationLineLength, undefined);\n\t\tthis._resetTokenization();\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tpublic onLanguageId(languageId: string, encodedLanguageId: LanguageId): void {\n\t\tthis._languageId = languageId;\n\t\tthis._encodedLanguageId = encodedLanguageId;\n\t\tthis._resetTokenization();\n\t}\n\n\toverride onEvents(e: IModelChangedEvent): void {\n\t\tsuper.onEvents(e);\n\n\t\tthis._tokenizerWithStateStore?.store.acceptChanges(e.changes);\n\t\tthis._tokenizeDebouncer.schedule();\n\t}\n\n\tpublic acceptMaxTokenizationLineLength(maxTokenizationLineLength: number): void {\n\t\tthis._maxTokenizationLineLength.set(maxTokenizationLineLength, undefined);\n\t}\n\n\tpublic retokenize(startLineNumber: number, endLineNumberExclusive: number) {\n\t\tif (this._tokenizerWithStateStore) {\n\t\t\tthis._tokenizerWithStateStore.store.invalidateEndStateRange(new LineRange(startLineNumber, endLineNumberExclusive));\n\t\t\tthis._tokenizeDebouncer.schedule();\n\t\t}\n\t}\n\n\tprivate async _resetTokenization() {\n\t\tthis._tokenizerWithStateStore = null;\n\n\t\tconst languageId = this._languageId;\n\t\tconst encodedLanguageId = this._encodedLanguageId;\n\n\t\tconst r = await this._host.getOrCreateGrammar(languageId, encodedLanguageId);\n\n\t\tif (this._isDisposed || languageId !== this._languageId || encodedLanguageId !== this._encodedLanguageId || !r) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (r.grammar) {\n\t\t\tconst tokenizationSupport = new TokenizationSupportWithLineLimit(\n\t\t\t\tthis._encodedLanguageId,\n\t\t\t\tnew TextMateTokenizationSupport(r.grammar, r.initialState, false, undefined, () => false,\n\t\t\t\t\t(timeMs, lineLength, isRandomSample) => {\n\t\t\t\t\t\tthis._host.reportTokenizationTime(timeMs, languageId, r.sourceExtensionId, lineLength, isRandomSample);\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t),\n\t\t\t\tthis._maxTokenizationLineLength\n\t\t\t);\n\t\t\tthis._tokenizerWithStateStore = new TokenizerWithStateStore(this._lines.length, tokenizationSupport);\n\t\t} else {\n\t\t\tthis._tokenizerWithStateStore = null;\n\t\t}\n\t\tthis._tokenize();\n\t}\n\n\tprivate async _tokenize(): Promise<void> {\n\t\tif (this._isDisposed || !this._tokenizerWithStateStore) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._diffStateStacksRefEqFn) {\n\t\t\tconst { diffStateStacksRefEq } = await importAMDNodeModule<typeof import('vscode-textmate')>('vscode-textmate', 'release/main.js');\n\t\t\tthis._diffStateStacksRefEqFn = diffStateStacksRefEq;\n\t\t}\n\n\t\tconst startTime = new Date().getTime();\n\n\t\twhile (true) {\n\t\t\tlet tokenizedLines = 0;\n\t\t\tconst tokenBuilder = new ContiguousMultilineTokensBuilder();\n\t\t\tconst stateDeltaBuilder = new StateDeltaBuilder();\n\n\t\t\twhile (true) {\n\t\t\t\tconst lineToTokenize = this._tokenizerWithStateStore.getFirstInvalidLine();\n\t\t\t\tif (lineToTokenize === null || tokenizedLines > 200) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ttokenizedLines++;\n\n\t\t\t\tconst text = this._lines[lineToTokenize.lineNumber - 1];\n\t\t\t\tconst r = this._tokenizerWithStateStore.tokenizationSupport.tokenizeEncoded(text, true, lineToTokenize.startState);\n\t\t\t\tif (this._tokenizerWithStateStore.store.setEndState(lineToTokenize.lineNumber, r.endState as StateStack)) {\n\t\t\t\t\tconst delta = this._diffStateStacksRefEqFn(lineToTokenize.startState, r.endState as StateStack);\n\t\t\t\t\tstateDeltaBuilder.setState(lineToTokenize.lineNumber, delta);\n\t\t\t\t} else {\n\t\t\t\t\tstateDeltaBuilder.setState(lineToTokenize.lineNumber, null);\n\t\t\t\t}\n\n\t\t\t\tLineTokens.convertToEndOffset(r.tokens, text.length);\n\t\t\t\ttokenBuilder.add(lineToTokenize.lineNumber, r.tokens);\n\n\t\t\t\tconst deltaMs = new Date().getTime() - startTime;\n\t\t\t\tif (deltaMs > 20) {\n\t\t\t\t\t// yield to check for changes\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tokenizedLines === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst stateDeltas = stateDeltaBuilder.getStateDeltas();\n\t\t\tthis._host.setTokensAndStates(\n\t\t\t\tthis._versionId,\n\t\t\t\ttokenBuilder.serialize(),\n\t\t\t\tstateDeltas\n\t\t\t);\n\n\t\t\tconst deltaMs = new Date().getTime() - startTime;\n\t\t\tif (deltaMs > 20) {\n\t\t\t\t// yield to check for changes\n\t\t\t\tsetTimeout0(() => this._tokenize());\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass StateDeltaBuilder {\n\tprivate _lastStartLineNumber: number = -1;\n\tprivate _stateDeltas: StateDeltas[] = [];\n\n\tpublic setState(lineNumber: number, stackDiff: StackDiff | null): void {\n\t\tif (lineNumber === this._lastStartLineNumber + 1) {\n\t\t\tthis._stateDeltas[this._stateDeltas.length - 1].stateDeltas.push(stackDiff);\n\t\t} else {\n\t\t\tthis._stateDeltas.push({ startLineNumber: lineNumber, stateDeltas: [stackDiff] });\n\t\t}\n\t\tthis._lastStartLineNumber = lineNumber;\n\t}\n\n\tpublic getStateDeltas(): StateDeltas[] {\n\t\treturn this._stateDeltas;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as resources from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { LanguageId, StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\n\nexport interface IValidGrammarDefinition {\n\tlocation: URI;\n\tlanguage?: string;\n\tscopeName: string;\n\tembeddedLanguages: IValidEmbeddedLanguagesMap;\n\ttokenTypes: IValidTokenTypeMap;\n\tinjectTo?: string[];\n\tbalancedBracketSelectors: string[];\n\tunbalancedBracketSelectors: string[];\n\tsourceExtensionId?: string;\n}\n\nexport interface IValidTokenTypeMap {\n\t[selector: string]: StandardTokenType;\n}\n\nexport interface IValidEmbeddedLanguagesMap {\n\t[scopeName: string]: LanguageId;\n}\n\nexport class TMScopeRegistry {\n\n\tprivate _scopeNameToLanguageRegistration: { [scopeName: string]: IValidGrammarDefinition };\n\n\tconstructor() {\n\t\tthis._scopeNameToLanguageRegistration = Object.create(null);\n\t}\n\n\tpublic reset(): void {\n\t\tthis._scopeNameToLanguageRegistration = Object.create(null);\n\t}\n\n\tpublic register(def: IValidGrammarDefinition): void {\n\t\tif (this._scopeNameToLanguageRegistration[def.scopeName]) {\n\t\t\tconst existingRegistration = this._scopeNameToLanguageRegistration[def.scopeName];\n\t\t\tif (!resources.isEqual(existingRegistration.location, def.location)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Overwriting grammar scope name to file mapping for scope ${def.scopeName}.\\n` +\n\t\t\t\t\t`Old grammar file: ${existingRegistration.location.toString()}.\\n` +\n\t\t\t\t\t`New grammar file: ${def.location.toString()}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis._scopeNameToLanguageRegistration[def.scopeName] = def;\n\t}\n\n\tpublic getGrammarDefinition(scopeName: string): IValidGrammarDefinition | null {\n\t\treturn this._scopeNameToLanguageRegistration[scopeName] || null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IValidEmbeddedLanguagesMap, IValidGrammarDefinition, TMScopeRegistry } from 'vs/workbench/services/textMate/common/TMScopeRegistry';\nimport type { IGrammar, IOnigLib, IRawTheme, Registry, StateStack } from 'vscode-textmate';\n\ninterface ITMGrammarFactoryHost {\n\tlogTrace(msg: string): void;\n\tlogError(msg: string, err: any): void;\n\treadFile(resource: URI): Promise<string>;\n}\n\nexport interface ICreateGrammarResult {\n\tlanguageId: string;\n\tgrammar: IGrammar | null;\n\tinitialState: StateStack;\n\tcontainsEmbeddedLanguages: boolean;\n\tsourceExtensionId?: string;\n}\n\nexport const missingTMGrammarErrorMessage = 'No TM Grammar registered for this language.';\n\nexport class TMGrammarFactory extends Disposable {\n\n\tprivate readonly _host: ITMGrammarFactoryHost;\n\tprivate readonly _initialState: StateStack;\n\tprivate readonly _scopeRegistry: TMScopeRegistry;\n\tprivate readonly _injections: { [scopeName: string]: string[] };\n\tprivate readonly _injectedEmbeddedLanguages: { [scopeName: string]: IValidEmbeddedLanguagesMap[] };\n\tprivate readonly _languageToScope: Map<string, string>;\n\tprivate readonly _grammarRegistry: Registry;\n\n\tconstructor(host: ITMGrammarFactoryHost, grammarDefinitions: IValidGrammarDefinition[], vscodeTextmate: typeof import('vscode-textmate'), onigLib: Promise<IOnigLib>) {\n\t\tsuper();\n\t\tthis._host = host;\n\t\tthis._initialState = vscodeTextmate.INITIAL;\n\t\tthis._scopeRegistry = new TMScopeRegistry();\n\t\tthis._injections = {};\n\t\tthis._injectedEmbeddedLanguages = {};\n\t\tthis._languageToScope = new Map<string, string>();\n\t\tthis._grammarRegistry = this._register(new vscodeTextmate.Registry({\n\t\t\tonigLib: onigLib,\n\t\t\tloadGrammar: async (scopeName: string) => {\n\t\t\t\tconst grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n\t\t\t\tif (!grammarDefinition) {\n\t\t\t\t\tthis._host.logTrace(`No grammar found for scope ${scopeName}`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst location = grammarDefinition.location;\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this._host.readFile(location);\n\t\t\t\t\treturn vscodeTextmate.parseRawGrammar(content, location.path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis._host.logError(`Unable to load and parse grammar for scope ${scopeName} from ${location}`, e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetInjections: (scopeName: string) => {\n\t\t\t\tconst scopeParts = scopeName.split('.');\n\t\t\t\tlet injections: string[] = [];\n\t\t\t\tfor (let i = 1; i <= scopeParts.length; i++) {\n\t\t\t\t\tconst subScopeName = scopeParts.slice(0, i).join('.');\n\t\t\t\t\tinjections = [...injections, ...(this._injections[subScopeName] || [])];\n\t\t\t\t}\n\t\t\t\treturn injections;\n\t\t\t}\n\t\t}));\n\n\t\tfor (const validGrammar of grammarDefinitions) {\n\t\t\tthis._scopeRegistry.register(validGrammar);\n\n\t\t\tif (validGrammar.injectTo) {\n\t\t\t\tfor (const injectScope of validGrammar.injectTo) {\n\t\t\t\t\tlet injections = this._injections[injectScope];\n\t\t\t\t\tif (!injections) {\n\t\t\t\t\t\tthis._injections[injectScope] = injections = [];\n\t\t\t\t\t}\n\t\t\t\t\tinjections.push(validGrammar.scopeName);\n\t\t\t\t}\n\n\t\t\t\tif (validGrammar.embeddedLanguages) {\n\t\t\t\t\tfor (const injectScope of validGrammar.injectTo) {\n\t\t\t\t\t\tlet injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[injectScope];\n\t\t\t\t\t\tif (!injectedEmbeddedLanguages) {\n\t\t\t\t\t\t\tthis._injectedEmbeddedLanguages[injectScope] = injectedEmbeddedLanguages = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinjectedEmbeddedLanguages.push(validGrammar.embeddedLanguages);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (validGrammar.language) {\n\t\t\t\tthis._languageToScope.set(validGrammar.language, validGrammar.scopeName);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic has(languageId: string): boolean {\n\t\treturn this._languageToScope.has(languageId);\n\t}\n\n\tpublic setTheme(theme: IRawTheme, colorMap: string[]): void {\n\t\tthis._grammarRegistry.setTheme(theme, colorMap);\n\t}\n\n\tpublic getColorMap(): string[] {\n\t\treturn this._grammarRegistry.getColorMap();\n\t}\n\n\tpublic async createGrammar(languageId: string, encodedLanguageId: number): Promise<ICreateGrammarResult> {\n\t\tconst scopeName = this._languageToScope.get(languageId);\n\t\tif (typeof scopeName !== 'string') {\n\t\t\t// No TM grammar defined\n\t\t\tthrow new Error(missingTMGrammarErrorMessage);\n\t\t}\n\n\t\tconst grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n\t\tif (!grammarDefinition) {\n\t\t\t// No TM grammar defined\n\t\t\tthrow new Error(missingTMGrammarErrorMessage);\n\t\t}\n\n\t\tconst embeddedLanguages = grammarDefinition.embeddedLanguages;\n\t\tif (this._injectedEmbeddedLanguages[scopeName]) {\n\t\t\tconst injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[scopeName];\n\t\t\tfor (const injected of injectedEmbeddedLanguages) {\n\t\t\t\tfor (const scope of Object.keys(injected)) {\n\t\t\t\t\tembeddedLanguages[scope] = injected[scope];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst containsEmbeddedLanguages = (Object.keys(embeddedLanguages).length > 0);\n\n\t\tlet grammar: IGrammar | null;\n\n\t\ttry {\n\t\t\tgrammar = await this._grammarRegistry.loadGrammarWithConfiguration(\n\t\t\t\tscopeName,\n\t\t\t\tencodedLanguageId,\n\t\t\t\t{\n\t\t\t\t\tembeddedLanguages,\n\t\t\t\t\ttokenTypes: <any>grammarDefinition.tokenTypes,\n\t\t\t\t\tbalancedBracketSelectors: grammarDefinition.balancedBracketSelectors,\n\t\t\t\t\tunbalancedBracketSelectors: grammarDefinition.unbalancedBracketSelectors,\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tif (err.message && err.message.startsWith('No grammar provided for')) {\n\t\t\t\t// No TM grammar defined\n\t\t\t\tthrow new Error(missingTMGrammarErrorMessage);\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\n\t\treturn {\n\t\t\tlanguageId: languageId,\n\t\t\tgrammar: grammar,\n\t\t\tinitialState: this._initialState,\n\t\t\tcontainsEmbeddedLanguages: containsEmbeddedLanguages,\n\t\t\tsourceExtensionId: grammarDefinition.sourceExtensionId,\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { LanguageId } from 'vs/editor/common/encodedTokenAttributes';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport { IWorkerContext } from 'vs/editor/common/services/editorSimpleWorker';\nimport { ICreateGrammarResult, TMGrammarFactory } from 'vs/workbench/services/textMate/common/TMGrammarFactory';\nimport { IValidEmbeddedLanguagesMap, IValidGrammarDefinition, IValidTokenTypeMap } from 'vs/workbench/services/textMate/common/TMScopeRegistry';\nimport type { IOnigLib, IRawTheme, StackDiff } from 'vscode-textmate';\nimport { TextMateWorkerTokenizer } from './textMateWorkerTokenizer';\n\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n */\nexport function create(ctx: IWorkerContext<ITextMateWorkerHost>, createData: ICreateData): TextMateTokenizationWorker {\n\treturn new TextMateTokenizationWorker(ctx, createData);\n}\n\nexport interface ITextMateWorkerHost {\n\treadFile(_resource: UriComponents): Promise<string>;\n\tsetTokensAndStates(controllerId: number, versionId: number, tokens: Uint8Array, lineEndStateDeltas: StateDeltas[]): Promise<void>;\n\treportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, isRandomSample: boolean): void;\n}\n\nexport interface ICreateData {\n\tgrammarDefinitions: IValidGrammarDefinitionDTO[];\n\ttextmateMainUri: string;\n\tonigurumaMainUri: string;\n\tonigurumaWASMUri: string;\n}\n\nexport interface IValidGrammarDefinitionDTO {\n\tlocation: UriComponents;\n\tlanguage?: string;\n\tscopeName: string;\n\tembeddedLanguages: IValidEmbeddedLanguagesMap;\n\ttokenTypes: IValidTokenTypeMap;\n\tinjectTo?: string[];\n\tbalancedBracketSelectors: string[];\n\tunbalancedBracketSelectors: string[];\n\tsourceExtensionId?: string;\n}\n\nexport interface StateDeltas {\n\tstartLineNumber: number;\n\t// null means the state for that line did not change\n\tstateDeltas: (StackDiff | null)[];\n}\n\nexport class TextMateTokenizationWorker {\n\tprivate readonly _host: ITextMateWorkerHost;\n\tprivate readonly _models = new Map</* controllerId */ number, TextMateWorkerTokenizer>();\n\tprivate readonly _grammarCache: Promise<ICreateGrammarResult>[] = [];\n\tprivate readonly _grammarFactory: Promise<TMGrammarFactory | null>;\n\n\tconstructor(\n\t\tctx: IWorkerContext<ITextMateWorkerHost>,\n\t\tprivate readonly _createData: ICreateData\n\t) {\n\t\tthis._host = ctx.host;\n\t\tconst grammarDefinitions = _createData.grammarDefinitions.map<IValidGrammarDefinition>((def) => {\n\t\t\treturn {\n\t\t\t\tlocation: URI.revive(def.location),\n\t\t\t\tlanguage: def.language,\n\t\t\t\tscopeName: def.scopeName,\n\t\t\t\tembeddedLanguages: def.embeddedLanguages,\n\t\t\t\ttokenTypes: def.tokenTypes,\n\t\t\t\tinjectTo: def.injectTo,\n\t\t\t\tbalancedBracketSelectors: def.balancedBracketSelectors,\n\t\t\t\tunbalancedBracketSelectors: def.unbalancedBracketSelectors,\n\t\t\t\tsourceExtensionId: def.sourceExtensionId,\n\t\t\t};\n\t\t});\n\t\tthis._grammarFactory = this._loadTMGrammarFactory(grammarDefinitions);\n\t}\n\n\tprivate async _loadTMGrammarFactory(grammarDefinitions: IValidGrammarDefinition[]): Promise<TMGrammarFactory> {\n\t\tconst uri = this._createData.textmateMainUri;\n\t\tconst vscodeTextmate = await import(uri);\n\t\tconst vscodeOniguruma = await import(this._createData.onigurumaMainUri);\n\t\tconst response = await fetch(this._createData.onigurumaWASMUri);\n\n\t\t// Using the response directly only works if the server sets the MIME type 'application/wasm'.\n\t\t// Otherwise, a TypeError is thrown when using the streaming compiler.\n\t\t// We therefore use the non-streaming compiler :(.\n\t\tconst bytes = await response.arrayBuffer();\n\t\tawait vscodeOniguruma.loadWASM(bytes);\n\n\t\tconst onigLib: Promise<IOnigLib> = Promise.resolve({\n\t\t\tcreateOnigScanner: (sources) => vscodeOniguruma.createOnigScanner(sources),\n\t\t\tcreateOnigString: (str) => vscodeOniguruma.createOnigString(str)\n\t\t});\n\n\t\treturn new TMGrammarFactory({\n\t\t\tlogTrace: (msg: string) => {/* console.log(msg) */ },\n\t\t\tlogError: (msg: string, err: any) => console.error(msg, err),\n\t\t\treadFile: (resource: URI) => this._host.readFile(resource)\n\t\t}, grammarDefinitions, vscodeTextmate, onigLib);\n\t}\n\n\t// These methods are called by the renderer\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tconst uri = URI.revive(data.uri);\n\t\tconst that = this;\n\t\tthis._models.set(data.controllerId, new TextMateWorkerTokenizer(uri, data.lines, data.EOL, data.versionId, {\n\t\t\tasync getOrCreateGrammar(languageId: string, encodedLanguageId: LanguageId): Promise<ICreateGrammarResult | null> {\n\t\t\t\tconst grammarFactory = await that._grammarFactory;\n\t\t\t\tif (!grammarFactory) {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t\tif (!that._grammarCache[encodedLanguageId]) {\n\t\t\t\t\tthat._grammarCache[encodedLanguageId] = grammarFactory.createGrammar(languageId, encodedLanguageId);\n\t\t\t\t}\n\t\t\t\treturn that._grammarCache[encodedLanguageId];\n\t\t\t},\n\t\t\tsetTokensAndStates(versionId: number, tokens: Uint8Array, stateDeltas: StateDeltas[]): void {\n\t\t\t\tthat._host.setTokensAndStates(data.controllerId, versionId, tokens, stateDeltas);\n\t\t\t},\n\t\t\treportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, isRandomSample: boolean): void {\n\t\t\t\tthat._host.reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, isRandomSample);\n\t\t\t},\n\t\t}, data.languageId, data.encodedLanguageId, data.maxTokenizationLineLength));\n\t}\n\n\tpublic acceptModelChanged(controllerId: number, e: IModelChangedEvent): void {\n\t\tthis._models.get(controllerId)!.onEvents(e);\n\t}\n\n\tpublic retokenize(controllerId: number, startLineNumber: number, endLineNumberExclusive: number): void {\n\t\tthis._models.get(controllerId)!.retokenize(startLineNumber, endLineNumberExclusive);\n\t}\n\n\tpublic acceptModelLanguageChanged(controllerId: number, newLanguageId: string, newEncodedLanguageId: LanguageId): void {\n\t\tthis._models.get(controllerId)!.onLanguageId(newLanguageId, newEncodedLanguageId);\n\t}\n\n\tpublic acceptRemovedModel(controllerId: number): void {\n\t\tconst model = this._models.get(controllerId);\n\t\tif (model) {\n\t\t\tmodel.dispose();\n\t\t\tthis._models.delete(controllerId);\n\t\t}\n\t}\n\n\tpublic async acceptTheme(theme: IRawTheme, colorMap: string[]): Promise<void> {\n\t\tconst grammarFactory = await this._grammarFactory;\n\t\tgrammarFactory?.setTheme(theme, colorMap);\n\t}\n\n\tpublic acceptMaxTokenizationLineLength(controllerId: number, value: number): void {\n\t\tthis._models.get(controllerId)!.acceptMaxTokenizationLineLength(value);\n\t}\n}\n\nexport interface IRawModelData {\n\turi: UriComponents;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n\tlanguageId: string;\n\tencodedLanguageId: LanguageId;\n\tmaxTokenizationLineLength: number;\n\tcontrollerId: number;\n}\n"]}
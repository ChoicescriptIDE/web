{"version":3,"file":"xterm-addon-serialize.js","mappings":"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","sources":["webpack://SerializeAddon/webpack/universalModuleDefinition","webpack://SerializeAddon/../../src/browser/ColorContrastCache.ts","webpack://SerializeAddon/../../src/browser/services/ThemeService.ts","webpack://SerializeAddon/../../src/common/Color.ts","webpack://SerializeAddon/../../src/common/EventEmitter.ts","webpack://SerializeAddon/../../src/common/Lifecycle.ts","webpack://SerializeAddon/../../src/common/MultiKeyMap.ts","webpack://SerializeAddon/../../src/common/Platform.ts","webpack://SerializeAddon/../../src/common/services/ServiceRegistry.ts","webpack://SerializeAddon/../../src/common/services/Services.ts","webpack://SerializeAddon/webpack/bootstrap","webpack://SerializeAddon/./src/SerializeAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SerializeAddon\"] = factory();\n\telse\n\t\troot[\"SerializeAddon\"] = factory();\n})(this, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, SpecialColorIndex, IColor, AllColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * (EXPERIMENTAL) This Addon is still under development\n */\n\nimport { Terminal, ITerminalAddon, IBuffer, IBufferCell, IBufferRange } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IAttributeData, IColor } from 'common/Types';\nimport { DEFAULT_ANSI_COLORS } from 'browser/services/ThemeService';\n\nfunction constrain(value: number, low: number, high: number): number {\n  return Math.max(low, Math.min(value, high));\n}\n\n// TODO: Refine this template class later\nabstract class BaseSerializeHandler {\n  constructor(\n    protected readonly _buffer: IBuffer\n  ) {\n  }\n\n  public serialize(range: IBufferRange): string {\n    // we need two of them to flip between old and new cell\n    const cell1 = this._buffer.getNullCell();\n    const cell2 = this._buffer.getNullCell();\n    let oldCell = cell1;\n\n    const startRow = range.start.x;\n    const endRow = range.end.x;\n    const startColumn = range.start.y;\n    const endColumn = range.end.y;\n\n    this._beforeSerialize(endRow - startRow, startRow, endRow);\n\n    for (let row = startRow; row <= endRow; row++) {\n      const line = this._buffer.getLine(row);\n      if (line) {\n        const startLineColumn = row !== range.start.x ? 0 : startColumn;\n        const endLineColumn = row !== range.end.x ? line.length : endColumn;\n        for (let col = startLineColumn; col < endLineColumn; col++) {\n          const c = line.getCell(col, oldCell === cell1 ? cell2 : cell1);\n          if (!c) {\n            console.warn(`Can't get cell at row=${row}, col=${col}`);\n            continue;\n          }\n          this._nextCell(c, oldCell, row, col);\n          oldCell = c;\n        }\n      }\n      this._rowEnd(row, row === endRow);\n    }\n\n    this._afterSerialize();\n\n    return this._serializeString();\n  }\n\n  protected _nextCell(cell: IBufferCell, oldCell: IBufferCell, row: number, col: number): void { }\n  protected _rowEnd(row: number, isLastRow: boolean): void { }\n  protected _beforeSerialize(rows: number, startRow: number, endRow: number): void { }\n  protected _afterSerialize(): void { }\n  protected _serializeString(): string { return ''; }\n}\n\nfunction equalFg(cell1: IBufferCell | IAttributeData, cell2: IBufferCell): boolean {\n  return cell1.getFgColorMode() === cell2.getFgColorMode()\n    && cell1.getFgColor() === cell2.getFgColor();\n}\n\nfunction equalBg(cell1: IBufferCell | IAttributeData, cell2: IBufferCell): boolean {\n  return cell1.getBgColorMode() === cell2.getBgColorMode()\n    && cell1.getBgColor() === cell2.getBgColor();\n}\n\nfunction equalFlags(cell1: IBufferCell | IAttributeData, cell2: IBufferCell): boolean {\n  return cell1.isInverse() === cell2.isInverse()\n    && cell1.isBold() === cell2.isBold()\n    && cell1.isUnderline() === cell2.isUnderline()\n    && cell1.isOverline() === cell2.isOverline()\n    && cell1.isBlink() === cell2.isBlink()\n    && cell1.isInvisible() === cell2.isInvisible()\n    && cell1.isItalic() === cell2.isItalic()\n    && cell1.isDim() === cell2.isDim()\n    && cell1.isStrikethrough() === cell2.isStrikethrough();\n}\n\nclass StringSerializeHandler extends BaseSerializeHandler {\n  private _rowIndex: number = 0;\n  private _allRows: string[] = new Array<string>();\n  private _allRowSeparators: string[] = new Array<string>();\n  private _currentRow: string = '';\n  private _nullCellCount: number = 0;\n\n  // we can see a full colored cell and a null cell that only have background the same style\n  // but the information isn't preserved by null cell itself\n  // so wee need to record it when required.\n  private _cursorStyle: IBufferCell = this._buffer.getNullCell();\n\n  // where exact the cursor styles comes from\n  // because we can't copy the cell directly\n  // so we remember where the content comes from instead\n  private _cursorStyleRow: number = 0;\n  private _cursorStyleCol: number = 0;\n\n  // this is a null cell for reference for checking whether background is empty or not\n  private _backgroundCell: IBufferCell = this._buffer.getNullCell();\n\n  private _firstRow: number = 0;\n  private _lastCursorRow: number = 0;\n  private _lastCursorCol: number = 0;\n  private _lastContentCursorRow: number = 0;\n  private _lastContentCursorCol: number = 0;\n\n  constructor(\n    buffer: IBuffer,\n    private readonly _terminal: Terminal\n  ) {\n    super(buffer);\n  }\n\n  protected _beforeSerialize(rows: number, start: number, end: number): void {\n    this._allRows = new Array<string>(rows);\n    this._lastContentCursorRow = start;\n    this._lastCursorRow = start;\n    this._firstRow = start;\n  }\n\n  private _thisRowLastChar: IBufferCell = this._buffer.getNullCell();\n  private _thisRowLastSecondChar: IBufferCell = this._buffer.getNullCell();\n  private _nextRowFirstChar: IBufferCell = this._buffer.getNullCell();\n  protected _rowEnd(row: number, isLastRow: boolean): void {\n    // if there is colorful empty cell at line end, whe must pad it back, or the the color block\n    // will missing\n    if (this._nullCellCount > 0 && !equalBg(this._cursorStyle, this._backgroundCell)) {\n      // use clear right to set background.\n      this._currentRow += `\\u001b[${this._nullCellCount}X`;\n    }\n\n    let rowSeparator = '';\n\n    // handle row separator\n    if (!isLastRow) {\n      // Enable BCE\n      if (row - this._firstRow >= this._terminal.rows) {\n        this._buffer.getLine(this._cursorStyleRow)?.getCell(this._cursorStyleCol, this._backgroundCell);\n      }\n\n      // Fetch current line\n      const currentLine = this._buffer.getLine(row)!;\n      // Fetch next line\n      const nextLine = this._buffer.getLine(row + 1)!;\n\n      if (!nextLine.isWrapped) {\n        // just insert the line break\n        rowSeparator = '\\r\\n';\n        // we sended the enter\n        this._lastCursorRow = row + 1;\n        this._lastCursorCol = 0;\n      } else {\n        rowSeparator = '';\n        const thisRowLastChar = currentLine.getCell(currentLine.length - 1, this._thisRowLastChar)!;\n        const thisRowLastSecondChar = currentLine.getCell(currentLine.length - 2, this._thisRowLastSecondChar)!;\n        const nextRowFirstChar = nextLine.getCell(0, this._nextRowFirstChar)!;\n        const isNextRowFirstCharDoubleWidth = nextRowFirstChar.getWidth() > 1;\n\n        // validate whether this line wrap is ever possible\n        // which mean whether cursor can placed at a overflow position (x === row) naturally\n        let isValid = false;\n\n        if (\n          // you must output character to cause overflow, control sequence can't do this\n          nextRowFirstChar.getChars() &&\n            isNextRowFirstCharDoubleWidth ? this._nullCellCount <= 1 : this._nullCellCount <= 0\n        ) {\n          if (\n            // the last character can't be null,\n            // you can't use control sequence to move cursor to (x === row)\n            (thisRowLastChar.getChars() || thisRowLastChar.getWidth() === 0) &&\n            // change background of the first wrapped cell also affects BCE\n            // so we mark it as invalid to simply the process to determine line separator\n            equalBg(thisRowLastChar, nextRowFirstChar)\n          ) {\n            isValid = true;\n          }\n\n          if (\n            // the second to last character can't be null if the next line starts with CJK,\n            // you can't use control sequence to move cursor to (x === row)\n            isNextRowFirstCharDoubleWidth &&\n            (thisRowLastSecondChar.getChars() || thisRowLastSecondChar.getWidth() === 0) &&\n            // change background of the first wrapped cell also affects BCE\n            // so we mark it as invalid to simply the process to determine line separator\n            equalBg(thisRowLastChar, nextRowFirstChar) &&\n            equalBg(thisRowLastSecondChar, nextRowFirstChar)\n          ) {\n            isValid = true;\n          }\n        }\n\n        if (!isValid) {\n          // force the wrap with magic\n          // insert enough character to force the wrap\n          rowSeparator = '-'.repeat(this._nullCellCount + 1);\n          // move back and erase next line head\n          rowSeparator += '\\u001b[1D\\u001b[1X';\n\n          if (this._nullCellCount > 0) {\n            // do these because we filled the last several null slot, which we shouldn't\n            rowSeparator += '\\u001b[A';\n            rowSeparator += `\\u001b[${currentLine.length - this._nullCellCount}C`;\n            rowSeparator += `\\u001b[${this._nullCellCount}X`;\n            rowSeparator += `\\u001b[${currentLine.length - this._nullCellCount}D`;\n            rowSeparator += '\\u001b[B';\n          }\n\n          // This is content and need the be serialized even it is invisible.\n          // without this, wrap will be missing from outputs.\n          this._lastContentCursorRow = row + 1;\n          this._lastContentCursorCol = 0;\n\n          // force commit the cursor position\n          this._lastCursorRow = row + 1;\n          this._lastCursorCol = 0;\n        }\n      }\n    }\n\n    this._allRows[this._rowIndex] = this._currentRow;\n    this._allRowSeparators[this._rowIndex++] = rowSeparator;\n    this._currentRow = '';\n    this._nullCellCount = 0;\n  }\n\n  private _diffStyle(cell: IBufferCell | IAttributeData, oldCell: IBufferCell): number[] {\n    const sgrSeq: number[] = [];\n    const fgChanged = !equalFg(cell, oldCell);\n    const bgChanged = !equalBg(cell, oldCell);\n    const flagsChanged = !equalFlags(cell, oldCell);\n\n    if (fgChanged || bgChanged || flagsChanged) {\n      if (cell.isAttributeDefault()) {\n        if (!oldCell.isAttributeDefault()) {\n          sgrSeq.push(0);\n        }\n      } else {\n        if (fgChanged) {\n          const color = cell.getFgColor();\n          if (cell.isFgRGB()) { sgrSeq.push(38, 2, (color >>> 16) & 0xFF, (color >>> 8) & 0xFF, color & 0xFF); }\n          else if (cell.isFgPalette()) {\n            if (color >= 16) { sgrSeq.push(38, 5, color); }\n            else { sgrSeq.push(color & 8 ? 90 + (color & 7) : 30 + (color & 7)); }\n          }\n          else { sgrSeq.push(39); }\n        }\n        if (bgChanged) {\n          const color = cell.getBgColor();\n          if (cell.isBgRGB()) { sgrSeq.push(48, 2, (color >>> 16) & 0xFF, (color >>> 8) & 0xFF, color & 0xFF); }\n          else if (cell.isBgPalette()) {\n            if (color >= 16) { sgrSeq.push(48, 5, color); }\n            else { sgrSeq.push(color & 8 ? 100 + (color & 7) : 40 + (color & 7)); }\n          }\n          else { sgrSeq.push(49); }\n        }\n        if (flagsChanged) {\n          if (cell.isInverse() !== oldCell.isInverse()) { sgrSeq.push(cell.isInverse() ? 7 : 27); }\n          if (cell.isBold() !== oldCell.isBold()) { sgrSeq.push(cell.isBold() ? 1 : 22); }\n          if (cell.isUnderline() !== oldCell.isUnderline()) { sgrSeq.push(cell.isUnderline() ? 4 : 24); }\n          if (cell.isOverline() !== oldCell.isOverline()) { sgrSeq.push(cell.isOverline() ? 53 : 55); }\n          if (cell.isBlink() !== oldCell.isBlink()) { sgrSeq.push(cell.isBlink() ? 5 : 25); }\n          if (cell.isInvisible() !== oldCell.isInvisible()) { sgrSeq.push(cell.isInvisible() ? 8 : 28); }\n          if (cell.isItalic() !== oldCell.isItalic()) { sgrSeq.push(cell.isItalic() ? 3 : 23); }\n          if (cell.isDim() !== oldCell.isDim()) { sgrSeq.push(cell.isDim() ? 2 : 22); }\n          if (cell.isStrikethrough() !== oldCell.isStrikethrough()) { sgrSeq.push(cell.isStrikethrough() ? 9 : 29); }\n        }\n      }\n    }\n\n    return sgrSeq;\n  }\n\n  protected _nextCell(cell: IBufferCell, oldCell: IBufferCell, row: number, col: number): void {\n    // a width 0 cell don't need to be count because it is just a placeholder after a CJK character;\n    const isPlaceHolderCell = cell.getWidth() === 0;\n\n    if (isPlaceHolderCell) {\n      return;\n    }\n\n    // this cell don't have content\n    const isEmptyCell = cell.getChars() === '';\n\n    const sgrSeq = this._diffStyle(cell, this._cursorStyle);\n\n    // the empty cell style is only assumed to be changed when background changed, because\n    // foreground is always 0.\n    const styleChanged = isEmptyCell ? !equalBg(this._cursorStyle, cell) : sgrSeq.length > 0;\n\n    /**\n     *  handles style change\n     */\n    if (styleChanged) {\n      // before update the style, we need to fill empty cell back\n      if (this._nullCellCount > 0) {\n        // use clear right to set background.\n        if (!equalBg(this._cursorStyle, this._backgroundCell)) {\n          this._currentRow += `\\u001b[${this._nullCellCount}X`;\n        }\n        // use move right to move cursor.\n        this._currentRow += `\\u001b[${this._nullCellCount}C`;\n        this._nullCellCount = 0;\n      }\n\n      this._lastContentCursorRow = this._lastCursorRow = row;\n      this._lastContentCursorCol = this._lastCursorCol = col;\n\n      this._currentRow += `\\u001b[${sgrSeq.join(';')}m`;\n\n      // update the last cursor style\n      const line = this._buffer.getLine(row);\n      if (line !== undefined) {\n        line.getCell(col, this._cursorStyle);\n        this._cursorStyleRow = row;\n        this._cursorStyleCol = col;\n      }\n    }\n\n    /**\n     *  handles actual content\n     */\n    if (isEmptyCell) {\n      this._nullCellCount += cell.getWidth();\n    } else {\n      if (this._nullCellCount > 0) {\n        // we can just assume we have same style with previous one here\n        // because style change is handled by previous stage\n        // use move right when background is empty, use clear right when there is background.\n        if (equalBg(this._cursorStyle, this._backgroundCell)) {\n          this._currentRow += `\\u001b[${this._nullCellCount}C`;\n        } else {\n          this._currentRow += `\\u001b[${this._nullCellCount}X`;\n          this._currentRow += `\\u001b[${this._nullCellCount}C`;\n        }\n        this._nullCellCount = 0;\n      }\n\n      this._currentRow += cell.getChars();\n\n      // update cursor\n      this._lastContentCursorRow = this._lastCursorRow = row;\n      this._lastContentCursorCol = this._lastCursorCol = col + cell.getWidth();\n    }\n  }\n\n  protected _serializeString(): string {\n    let rowEnd = this._allRows.length;\n\n    // the fixup is only required for data without scrollback\n    // because it will always be placed at last line otherwise\n    if (this._buffer.length - this._firstRow <= this._terminal.rows) {\n      rowEnd = this._lastContentCursorRow + 1 - this._firstRow;\n      this._lastCursorCol = this._lastContentCursorCol;\n      this._lastCursorRow = this._lastContentCursorRow;\n    }\n\n    let content = '';\n\n    for (let i = 0; i < rowEnd; i++) {\n      content += this._allRows[i];\n      if (i + 1 < rowEnd) {\n        content += this._allRowSeparators[i];\n      }\n    }\n\n    // restore the cursor\n    const realCursorRow = this._buffer.baseY + this._buffer.cursorY;\n    const realCursorCol = this._buffer.cursorX;\n\n    const cursorMoved = (realCursorRow !== this._lastCursorRow || realCursorCol !== this._lastCursorCol);\n\n    const moveRight = (offset: number): void => {\n      if (offset > 0) {\n        content += `\\u001b[${offset}C`;\n      } else if (offset < 0) {\n        content += `\\u001b[${-offset}D`;\n      }\n    };\n    const moveDown = (offset: number): void => {\n      if (offset > 0) {\n        content += `\\u001b[${offset}B`;\n      } else if (offset < 0) {\n        content += `\\u001b[${-offset}A`;\n      }\n    };\n\n    if (cursorMoved) {\n      moveDown(realCursorRow - this._lastCursorRow);\n      moveRight(realCursorCol - this._lastCursorCol);\n    }\n\n    // Restore the cursor's current style, see https://github.com/xtermjs/xterm.js/issues/3677\n    // HACK: Internal API access since it's awkward to expose this in the API and serialize will\n    // likely be the only consumer\n    const curAttrData: IAttributeData = (this._terminal as any)._core._inputHandler._curAttrData;\n    const sgrSeq = this._diffStyle(curAttrData, this._cursorStyle);\n    if (sgrSeq.length > 0) {\n      content += `\\u001b[${sgrSeq.join(';')}m`;\n    }\n\n    return content;\n  }\n}\n\nexport class SerializeAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() { }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  private _serializeBuffer(terminal: Terminal, buffer: IBuffer, scrollback?: number): string {\n    const maxRows = buffer.length;\n    const handler = new StringSerializeHandler(buffer, terminal);\n    const correctRows = (scrollback === undefined) ? maxRows : constrain(scrollback + terminal.rows, 0, maxRows);\n    return handler.serialize({\n      start: { x: maxRows - correctRows, y: 0 },\n      end: { x: maxRows - 1, y: terminal.cols }\n    });\n  }\n\n  private _serializeBufferAsHTML(terminal: Terminal, options: Partial<IHTMLSerializeOptions>): string {\n    const buffer = terminal.buffer.active;\n    const handler = new HTMLSerializeHandler(buffer, terminal, options);\n    const onlySelection = options.onlySelection ?? false;\n    if (!onlySelection) {\n      const maxRows = buffer.length;\n      const scrollback = options.scrollback;\n      const correctRows = (scrollback === undefined) ? maxRows : constrain(scrollback + terminal.rows, 0, maxRows);\n      return handler.serialize({\n        start: { x: maxRows - correctRows, y: 0 },\n        end: { x: maxRows - 1, y: terminal.cols }\n      });\n    }\n\n    const selection = this._terminal?.getSelectionPosition();\n    if (selection !== undefined) {\n      return handler.serialize({\n        start: { x: selection.start.y, y: selection.start.x },\n        end: { x: selection.end.y, y: selection.end.x }\n      });\n    }\n\n    return '';\n  }\n\n  private _serializeModes(terminal: Terminal): string {\n    let content = '';\n    const modes = terminal.modes;\n\n    // Default: false\n    if (modes.applicationCursorKeysMode) content += '\\x1b[?1h';\n    if (modes.applicationKeypadMode) content += '\\x1b[?66h';\n    if (modes.bracketedPasteMode) content += '\\x1b[?2004h';\n    if (modes.insertMode) content += '\\x1b[4h';\n    if (modes.originMode) content += '\\x1b[?6h';\n    if (modes.reverseWraparoundMode) content += '\\x1b[?45h';\n    if (modes.sendFocusMode) content += '\\x1b[?1004h';\n\n    // Default: true\n    if (modes.wraparoundMode === false) content += '\\x1b[?7l';\n\n    // Default: 'none'\n    if (modes.mouseTrackingMode !== 'none') {\n      switch (modes.mouseTrackingMode) {\n        case 'x10': content += '\\x1b[?9h'; break;\n        case 'vt200': content += '\\x1b[?1000h'; break;\n        case 'drag': content += '\\x1b[?1002h'; break;\n        case 'any': content += '\\x1b[?1003h'; break;\n      }\n    }\n\n    return content;\n  }\n\n  public serialize(options?: ISerializeOptions): string {\n    // TODO: Add combinedData support\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    // Normal buffer\n    let content = this._serializeBuffer(this._terminal, this._terminal.buffer.normal, options?.scrollback);\n\n    // Alternate buffer\n    if (!options?.excludeAltBuffer) {\n      if (this._terminal.buffer.active.type === 'alternate') {\n        const alternativeScreenContent = this._serializeBuffer(this._terminal, this._terminal.buffer.alternate, undefined);\n        content += `\\u001b[?1049h\\u001b[H${alternativeScreenContent}`;\n      }\n    }\n\n    // Modes\n    if (!options?.excludeModes) {\n      content += this._serializeModes(this._terminal);\n    }\n\n    return content;\n  }\n\n  public serializeAsHTML(options?: Partial<IHTMLSerializeOptions>): string {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    return this._serializeBufferAsHTML(this._terminal, options || {});\n  }\n\n  public dispose(): void { }\n}\n\n\ninterface ISerializeOptions {\n  scrollback?: number;\n  excludeModes?: boolean;\n  excludeAltBuffer?: boolean;\n}\n\ninterface IHTMLSerializeOptions {\n  scrollback: number;\n  onlySelection: boolean;\n  includeGlobalBackground: boolean;\n}\n\nexport class HTMLSerializeHandler extends BaseSerializeHandler {\n  private _currentRow: string = '';\n\n  private _htmlContent = '';\n\n  private _ansiColors: Readonly<IColor[]>;\n\n  constructor(\n    buffer: IBuffer,\n    private readonly _terminal: Terminal,\n    private readonly _options: Partial<IHTMLSerializeOptions>\n  ) {\n    super(buffer);\n\n    // For xterm headless: fallback to ansi colors\n    if ((_terminal as any)._core._themeService) {\n      this._ansiColors = (_terminal as any)._core._themeService.colors.ansi;\n    }\n    else {\n      this._ansiColors = DEFAULT_ANSI_COLORS;\n    }\n  }\n\n  private _padStart(target: string, targetLength: number, padString: string): string {\n    targetLength = targetLength >> 0;\n    padString = padString ?? ' ';\n    if (target.length > targetLength) {\n      return target;\n    }\n\n    targetLength -= target.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + target;\n  }\n\n  protected _beforeSerialize(rows: number, start: number, end: number): void {\n    this._htmlContent += '<html><body><!--StartFragment--><pre>';\n\n    let foreground = '#000000';\n    let background = '#ffffff';\n    if (this._options.includeGlobalBackground ?? false) {\n      foreground = this._terminal.options.theme?.foreground ?? '#ffffff';\n      background = this._terminal.options.theme?.background ?? '#000000';\n    }\n\n    const globalStyleDefinitions = [];\n    globalStyleDefinitions.push('color: ' + foreground + ';');\n    globalStyleDefinitions.push('background-color: ' + background + ';');\n    globalStyleDefinitions.push('font-family: ' + this._terminal.options.fontFamily + ';');\n    globalStyleDefinitions.push('font-size: ' + this._terminal.options.fontSize + 'px;');\n    this._htmlContent += '<div style=\\'' + globalStyleDefinitions.join(' ') + '\\'>';\n  }\n\n  protected _afterSerialize(): void {\n    this._htmlContent += '</div>';\n    this._htmlContent += '</pre><!--EndFragment--></body></html>';\n  }\n\n  protected _rowEnd(row: number, isLastRow: boolean): void {\n    this._htmlContent += '<div><span>' + this._currentRow + '</span></div>';\n    this._currentRow = '';\n  }\n\n  private _getHexColor(cell: IBufferCell, isFg: boolean): string | undefined {\n    const color = isFg ? cell.getFgColor() : cell.getBgColor();\n    if (isFg ? cell.isFgRGB() : cell.isBgRGB()) {\n      const rgb = [\n        (color >> 16) & 255,\n        (color >>  8) & 255,\n        (color      ) & 255\n      ];\n      return rgb.map(x => this._padStart(x.toString(16), 2, '0')).join('');\n    }\n    if (isFg ? cell.isFgPalette() : cell.isBgPalette()) {\n      return this._ansiColors[color].css;\n    }\n    return undefined;\n  }\n\n  private _diffStyle(cell: IBufferCell, oldCell: IBufferCell): string[] | undefined {\n    const content: string[] = [];\n\n    const fgChanged = !equalFg(cell, oldCell);\n    const bgChanged = !equalBg(cell, oldCell);\n    const flagsChanged = !equalFlags(cell, oldCell);\n\n    if (fgChanged || bgChanged || flagsChanged) {\n      const fgHexColor = this._getHexColor(cell, true);\n      if (fgHexColor) {\n        content.push('color: ' + fgHexColor + ';');\n      }\n\n      const bgHexColor = this._getHexColor(cell, false);\n      if (bgHexColor) {\n        content.push('background-color: ' + bgHexColor + ';');\n      }\n\n      if (cell.isInverse()) { content.push('color: #000000; background-color: #BFBFBF;'); }\n      if (cell.isBold()) { content.push('font-weight: bold;'); }\n      if (cell.isUnderline() && cell.isOverline()) { content.push('text-decoration: overline underline;'); }\n      else if (cell.isUnderline()) { content.push('text-decoration: underline;'); }\n      else if (cell.isOverline()) { content.push('text-decoration: overline;'); }\n      if (cell.isBlink()) { content.push('text-decoration: blink;'); }\n      if (cell.isInvisible()) { content.push('visibility: hidden;'); }\n      if (cell.isItalic()) { content.push('font-style: italic;'); }\n      if (cell.isDim()) { content.push('opacity: 0.5;'); }\n      if (cell.isStrikethrough()) { content.push('text-decoration: line-through;'); }\n\n      return content;\n    }\n\n    return undefined;\n  }\n\n  protected _nextCell(cell: IBufferCell, oldCell: IBufferCell, row: number, col: number): void {\n    // a width 0 cell don't need to be count because it is just a placeholder after a CJK character;\n    const isPlaceHolderCell = cell.getWidth() === 0;\n    if (isPlaceHolderCell) {\n      return;\n    }\n\n    // this cell don't have content\n    const isEmptyCell = cell.getChars() === '';\n\n    const styleDefinitions = this._diffStyle(cell, oldCell);\n\n    // handles style change\n    if (styleDefinitions) {\n      this._currentRow += styleDefinitions.length === 0 ?\n        '</span><span>' :\n        '</span><span style=\\'' + styleDefinitions.join(' ') + '\\'>';\n    }\n\n    // handles actual content\n    if (isEmptyCell) {\n      this._currentRow += ' ';\n    } else {\n      this._currentRow += cell.getChars();\n    }\n  }\n\n  protected _serializeString(): string {\n    return this._htmlContent;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","this","_color","TwoKeyMap","_css","setCss","bg","fg","value","set","getCss","get","setColor","getColor","clear","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","i","r","g","b","push","channels","toCss","toRgba","c","ThemeService","Disposable","_colors","constructor","super","_optionsService","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","register","EventEmitter","onChangeColors","event","foreground","background","cursor","cursorAccent","selectionForeground","undefined","selectionBackgroundTransparent","selectionBackgroundOpaque","color","blend","selectionInactiveBackgroundTransparent","selectionInactiveBackgroundOpaque","ansi","slice","contrastCache","halfContrastCache","_updateRestoreColors","_setTheme","rawOptions","theme","onSpecificOptionChange","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","Math","min","length","fire","restoreColor","slot","_restoreColor","_restoreColors","modifyColors","callback","cssString","fallback","IOptionsService","$r","$g","$b","$a","rgb","toPaddedHex","s","toString","contrastRatio","l1","l2","a","round","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ensureContrastRatio","ratio","result","opaque","rgbaColor","multiplyOpacity","factor","toColorRGB","$ctx","$litmusColor","isNode","canvas","document","createElement","width","height","ctx","getContext","willReadFrequently","globalCompositeOperation","createLinearGradient","match","parseInt","repeat","rgbaMatch","parseFloat","Error","fillStyle","fillRect","getImageData","data","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","_listeners","_disposed","_event","listener","dispose","splice","arg1","arg2","queue","call","from","to","e","disposeArray","disposables","d","_disposables","_isDisposed","unregister","index","indexOf","f","array","_data","first","second","third","fourth","navigator","userAgent","platform","isFirefox","includes","isLegacyEdge","isSafari","test","majorVersion","isMac","isIpad","isIphone","isWindows","isLinux","isChromeOS","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","Map","ctor","id","has","decorator","target","key","arguments","storeServiceDependency","LogLevelEnum","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IInstantiationService","ILogService","IOscLinkService","IUnicodeService","IDecorationService","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","constrain","low","high","BaseSerializeHandler","_buffer","serialize","range","cell1","getNullCell","cell2","oldCell","startRow","start","x","endRow","end","startColumn","y","endColumn","_beforeSerialize","row","line","getLine","startLineColumn","endLineColumn","col","getCell","_nextCell","console","warn","_rowEnd","_afterSerialize","_serializeString","cell","isLastRow","rows","equalFg","getFgColorMode","getFgColor","equalBg","getBgColorMode","getBgColor","equalFlags","isInverse","isBold","isUnderline","isOverline","isBlink","isInvisible","isItalic","isDim","isStrikethrough","StringSerializeHandler","buffer","_terminal","_rowIndex","_allRows","Array","_allRowSeparators","_currentRow","_nullCellCount","_cursorStyle","_cursorStyleRow","_cursorStyleCol","_backgroundCell","_firstRow","_lastCursorRow","_lastCursorCol","_lastContentCursorRow","_lastContentCursorCol","_thisRowLastChar","_thisRowLastSecondChar","_nextRowFirstChar","rowSeparator","currentLine","nextLine","isWrapped","thisRowLastChar","thisRowLastSecondChar","nextRowFirstChar","isNextRowFirstCharDoubleWidth","getWidth","isValid","getChars","_diffStyle","sgrSeq","fgChanged","bgChanged","flagsChanged","isAttributeDefault","isFgRGB","isFgPalette","isBgRGB","isBgPalette","isEmptyCell","join","rowEnd","content","realCursorRow","baseY","cursorY","realCursorCol","cursorX","offset","moveRight","curAttrData","_core","_inputHandler","_curAttrData","activate","terminal","_serializeBuffer","scrollback","maxRows","handler","correctRows","cols","_serializeBufferAsHTML","options","active","HTMLSerializeHandler","onlySelection","selection","getSelectionPosition","_serializeModes","modes","applicationCursorKeysMode","applicationKeypadMode","bracketedPasteMode","insertMode","originMode","reverseWraparoundMode","sendFocusMode","wraparoundMode","mouseTrackingMode","normal","excludeAltBuffer","type","alternate","excludeModes","serializeAsHTML","_options","_htmlContent","_themeService","_ansiColors","_padStart","targetLength","padString","includeGlobalBackground","globalStyleDefinitions","fontFamily","fontSize","_getHexColor","isFg","map","fgHexColor","bgHexColor","styleDefinitions"],"sourceRoot":""}
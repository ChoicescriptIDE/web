{"version":3,"file":"xterm.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,miBCJT,gBAEA,UACA,UACA,SACA,UACA,UACA,UAUO,IAAMC,EAAoB,uBAA1B,cAAmC,EAAAC,WA4BxC,WAAAC,CACmBC,EACD,GAEhBC,QAHiB,KAAAD,UAAAA,EACgB,KAAAE,eAAAA,EAvB3B,KAAAC,qBAA+B,EAiB/B,KAAAC,gBAA4B,GAE5B,KAAAC,iBAA2B,GAOjCC,KAAKC,wBAA0BC,SAASC,cAAc,OACtDH,KAAKC,wBAAwBG,UAAUC,IAAI,uBAE3CL,KAAKM,cAAgBJ,SAASC,cAAc,OAC5CH,KAAKM,cAAcC,aAAa,OAAQ,QACxCP,KAAKM,cAAcF,UAAUC,IAAI,4BACjCL,KAAKQ,aAAe,GACpB,IAAK,IAAInB,EAAI,EAAGA,EAAIW,KAAKN,UAAUe,KAAMpB,IACvCW,KAAKQ,aAAanB,GAAKW,KAAKU,+BAC5BV,KAAKM,cAAcK,YAAYX,KAAKQ,aAAanB,IAiBnD,GAdAW,KAAKY,0BAA4BC,GAAKb,KAAKc,qBAAqBD,EAAG,GACnEb,KAAKe,6BAA+BF,GAAKb,KAAKc,qBAAqBD,EAAG,GACtEb,KAAKQ,aAAa,GAAGQ,iBAAiB,QAAShB,KAAKY,2BACpDZ,KAAKQ,aAAaR,KAAKQ,aAAaS,OAAS,GAAGD,iBAAiB,QAAShB,KAAKe,8BAE/Ef,KAAKkB,yBACLlB,KAAKC,wBAAwBU,YAAYX,KAAKM,eAE9CN,KAAKmB,YAAcjB,SAASC,cAAc,OAC1CH,KAAKmB,YAAYf,UAAUC,IAAI,eAC/BL,KAAKmB,YAAYZ,aAAa,YAAa,aAC3CP,KAAKC,wBAAwBU,YAAYX,KAAKmB,aAC9CnB,KAAKoB,qBAAuBpB,KAAKqB,SAAS,IAAI,EAAAC,mBAAmBtB,KAAKuB,YAAYC,KAAKxB,SAElFA,KAAKN,UAAU+B,QAClB,MAAM,IAAIC,MAAM,oDAElB1B,KAAKN,UAAU+B,QAAQE,sBAAsB,aAAc3B,KAAKC,yBAEhED,KAAKqB,SAASrB,KAAKN,UAAUkC,UAASf,GAAKb,KAAK6B,cAAchB,EAAEJ,SAChET,KAAKqB,SAASrB,KAAKN,UAAUoC,UAASjB,GAAKb,KAAK+B,aAAalB,EAAEmB,MAAOnB,EAAEoB,QACxEjC,KAAKqB,SAASrB,KAAKN,UAAUwC,UAAS,IAAMlC,KAAK+B,kBAEjD/B,KAAKqB,SAASrB,KAAKN,UAAUyC,YAAWC,GAAQpC,KAAKqC,YAAYD,MACjEpC,KAAKqB,SAASrB,KAAKN,UAAU4C,YAAW,IAAMtC,KAAKqC,YAAY,SAC/DrC,KAAKqB,SAASrB,KAAKN,UAAU6C,WAAUC,GAAcxC,KAAKyC,WAAWD,MACrExC,KAAKqB,SAASrB,KAAKN,UAAUgD,OAAM7B,GAAKb,KAAK2C,WAAW9B,EAAE+B,QAC1D5C,KAAKqB,SAASrB,KAAKN,UAAUmD,QAAO,IAAM7C,KAAK8C,sBAC/C9C,KAAKqB,SAASrB,KAAKJ,eAAemD,oBAAmB,IAAM/C,KAAKkB,4BAEhElB,KAAKgD,kBAAoB,IAAI,EAAAC,iBAAiBC,QAC9ClD,KAAKqB,SAASrB,KAAKgD,mBACnBhD,KAAKgD,kBAAkBG,aAAY,IAAMnD,KAAKkB,2BAG9ClB,KAAKqB,UAAS,IAAA+B,0BAAyBF,OAAQ,UAAU,IAAMlD,KAAKkB,4BAEpElB,KAAK+B,eACL/B,KAAKqB,UAAS,IAAAgC,eAAa,KACzBrD,KAAKC,wBAAwBqD,SAC7BtD,KAAKQ,aAAaS,OAAS,CAAC,IAEhC,CAEQ,UAAAwB,CAAWD,GACjB,IAAK,IAAInD,EAAI,EAAGA,EAAImD,EAAYnD,IAC9BW,KAAKqC,YAAY,IAErB,CAEQ,WAAAA,CAAYD,GACdpC,KAAKH,qBAAuB0D,KAC1BvD,KAAKF,gBAAgBmB,OAAS,EAEZjB,KAAKF,gBAAgB0D,UACrBpB,IAClBpC,KAAKD,kBAAoBqC,GAG3BpC,KAAKD,kBAAoBqC,EAGd,OAATA,IACFpC,KAAKH,uBAC6B0D,KAA9BvD,KAAKH,uBACPG,KAAKmB,YAAYsC,aAAeC,EAAQC,gBAKxC,EAAAC,OACE5D,KAAKmB,YAAYsC,aAAezD,KAAKmB,YAAYsC,YAAYxC,OAAS,IAAMjB,KAAKmB,YAAY0C,YAC/FC,YAAW,KACT9D,KAAKC,wBAAwBU,YAAYX,KAAKmB,YAAY,GACzD,GAIX,CAEQ,gBAAA2B,GACN9C,KAAKmB,YAAYsC,YAAc,GAC/BzD,KAAKH,qBAAuB,EAGxB,EAAA+D,OACF5D,KAAKmB,YAAYmC,QAErB,CAEQ,UAAAX,CAAWoB,GACjB/D,KAAK8C,mBAEA,eAAekB,KAAKD,IACvB/D,KAAKF,gBAAgBmE,KAAKF,EAE9B,CAEQ,YAAAhC,CAAaC,EAAgBC,GACnCjC,KAAKoB,qBAAqB8C,QAAQlC,EAAOC,EAAKjC,KAAKN,UAAUe,KAC/D,CAEQ,WAAAc,CAAYS,EAAeC,GACjC,MAAMkC,EAAkBnE,KAAKN,UAAUyE,OACjCC,EAAUD,EAAOE,MAAMpD,OAAOqD,WACpC,IAAK,IAAIjF,EAAI2C,EAAO3C,GAAK4C,EAAK5C,IAAK,CACjC,MAAMkF,EAAWJ,EAAOK,4BAA4BL,EAAOM,MAAQpF,GAAG,GAChEqF,GAAYP,EAAOM,MAAQpF,EAAI,GAAGiF,WAClC7C,EAAUzB,KAAKQ,aAAanB,GAC9BoC,IACsB,IAApB8C,EAAStD,OACXQ,EAAQkD,UAAY,IAEpBlD,EAAQgC,YAAcc,EAExB9C,EAAQlB,aAAa,gBAAiBmE,GACtCjD,EAAQlB,aAAa,eAAgB6D,G,CAGzCpE,KAAK4E,qBACP,CAEQ,mBAAAA,GAC+B,IAAjC5E,KAAKD,iBAAiBkB,SAG1BjB,KAAKmB,YAAYsC,aAAezD,KAAKD,iBACrCC,KAAKD,iBAAmB,GAC1B,CAEQ,oBAAAe,CAAqBD,EAAegE,GAC1C,MAAMC,EAAkBjE,EAAEkE,OACpBC,EAAwBhF,KAAKQ,aAA0B,IAAbqE,EAAoC,EAAI7E,KAAKQ,aAAaS,OAAS,GAKnH,GAFiB6D,EAAgBG,aAAa,oBACd,IAAbJ,EAAoC,IAAM,GAAG7E,KAAKN,UAAUyE,OAAOE,MAAMpD,UAE1F,OAKF,GAAIJ,EAAEqE,gBAAkBF,EACtB,OAIF,IAAIG,EACAC,EAgBJ,GAfiB,IAAbP,GACFM,EAAqBL,EACrBM,EAAwBpF,KAAKQ,aAAa6E,MAC1CrF,KAAKM,cAAcgF,YAAYF,KAE/BD,EAAqBnF,KAAKQ,aAAagD,QACvC4B,EAAwBN,EACxB9E,KAAKM,cAAcgF,YAAYH,IAIjCA,EAAmBI,oBAAoB,QAASvF,KAAKY,2BACrDwE,EAAsBG,oBAAoB,QAASvF,KAAKe,8BAGvC,IAAb8D,EAAmC,CACrC,MAAMW,EAAaxF,KAAKU,+BACxBV,KAAKQ,aAAaiF,QAAQD,GAC1BxF,KAAKM,cAAcqB,sBAAsB,aAAc6D,E,KAClD,CACL,MAAMA,EAAaxF,KAAKU,+BACxBV,KAAKQ,aAAayD,KAAKuB,GACvBxF,KAAKM,cAAcK,YAAY6E,E,CAIjCxF,KAAKQ,aAAa,GAAGQ,iBAAiB,QAAShB,KAAKY,2BACpDZ,KAAKQ,aAAaR,KAAKQ,aAAaS,OAAS,GAAGD,iBAAiB,QAAShB,KAAKe,8BAG/Ef,KAAKN,UAAUgG,YAAyB,IAAbb,GAAqC,EAAI,GAGpE7E,KAAKQ,aAA0B,IAAbqE,EAAoC,EAAI7E,KAAKQ,aAAaS,OAAS,GAAG0E,QAGxF9E,EAAE+E,iBACF/E,EAAEgF,0BACJ,CAEQ,aAAAhE,CAAcpB,GAEpBT,KAAKQ,aAAaR,KAAKQ,aAAaS,OAAS,GAAGsE,oBAAoB,QAASvF,KAAKe,8BAGlF,IAAK,IAAI1B,EAAIW,KAAKM,cAAcwF,SAAS7E,OAAQ5B,EAAIW,KAAKN,UAAUe,KAAMpB,IACxEW,KAAKQ,aAAanB,GAAKW,KAAKU,+BAC5BV,KAAKM,cAAcK,YAAYX,KAAKQ,aAAanB,IAGnD,KAAOW,KAAKQ,aAAaS,OAASR,GAChCT,KAAKM,cAAcgF,YAAYtF,KAAKQ,aAAa6E,OAInDrF,KAAKQ,aAAaR,KAAKQ,aAAaS,OAAS,GAAGD,iBAAiB,QAAShB,KAAKe,8BAE/Ef,KAAKkB,wBACP,CAEQ,4BAAAR,GACN,MAAMe,EAAUvB,SAASC,cAAc,OAIvC,OAHAsB,EAAQlB,aAAa,OAAQ,YAC7BkB,EAAQsE,UAAY,EACpB/F,KAAKgG,sBAAsBvE,GACpBA,CACT,CACQ,sBAAAP,GACN,GAAKlB,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OAA7C,CAGApG,KAAKC,wBAAwBoG,MAAMC,MAAQ,GAAGtG,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOD,UACpFtG,KAAKQ,aAAaS,SAAWjB,KAAKN,UAAUe,MAC9CT,KAAK6B,cAAc7B,KAAKN,UAAUe,MAEpC,IAAK,IAAIpB,EAAI,EAAGA,EAAIW,KAAKN,UAAUe,KAAMpB,IACvCW,KAAKgG,sBAAsBhG,KAAKQ,aAAanB,G,CAEjD,CACQ,qBAAA2G,CAAsBvE,GAC5BA,EAAQ4E,MAAMD,OAAS,GAAGpG,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,UACpE,G,uBApRW7G,EAAoB,GA8B5B,MAAAiH,iBA9BQjH,E,eCVb,SAAgBkH,EAAuBC,GACrC,OAAOA,EAAKC,QAAQ,SAAU,KAChC,CAMA,SAAgBC,EAAoBF,EAAcG,GAChD,OAAIA,EACK,SAAcH,EAAO,SAEvBA,CACT,CAyBA,SAAgBI,EAAMJ,EAAcK,EAA+BC,EAA2BC,GAE5FP,EAAOE,EADPF,EAAOD,EAAuBC,GACGM,EAAYE,gBAAgBL,qBAA6E,IAAvDI,EAAeE,WAAWC,0BAC7GJ,EAAYK,iBAAiBX,GAAM,GACnCK,EAASO,MAAQ,EACnB,CAOA,SAAgBC,EAA6BC,EAAgBT,EAA+BU,GAG1F,MAAMC,EAAMD,EAAcE,wBACpBC,EAAOJ,EAAGK,QAAUH,EAAIE,KAAO,GAC/BE,EAAMN,EAAGO,QAAUL,EAAII,IAAM,GAGnCf,EAASV,MAAMC,MAAQ,OACvBS,EAASV,MAAMD,OAAS,OACxBW,EAASV,MAAMuB,KAAO,GAAGA,MACzBb,EAASV,MAAMyB,IAAM,GAAGA,MACxBf,EAASV,MAAM2B,OAAS,OAExBjB,EAASpB,OACX,C,mMAjEA,2BAQA,wBAWA,uBAA4B6B,EAAoBS,GAC1CT,EAAGU,eACLV,EAAGU,cAAcC,QAAQ,aAAcF,EAAiBG,eAG1DZ,EAAG5B,gBACL,EAKA,4BAAiC4B,EAAoBT,EAA+BC,EAA2BC,GAC7GO,EAAGa,kBACCb,EAAGU,eAELpB,EADaU,EAAGU,cAAcI,QAAQ,cAC1BvB,EAAUC,EAAaC,EAEvC,EAEA,UAYA,iCAoBA,6BAAkCO,EAAgBT,EAA+BU,EAA4BQ,EAAqCM,GAChJhB,EAA6BC,EAAIT,EAAUU,GAEvCc,GACFN,EAAiBO,iBAAiBhB,GAIpCT,EAASO,MAAQW,EAAiBG,cAClCrB,EAAS0B,QACX,C,8FCrFA,gBAEA,yCACU,KAAAC,OAAmE,IAAI,EAAAC,UACvE,KAAAC,KAAiE,IAAI,EAAAD,SAsB/E,CApBS,MAAAE,CAAOC,EAAYC,EAAYzB,GACpCtH,KAAK4I,KAAKI,IAAIF,EAAIC,EAAIzB,EACxB,CAEO,MAAA2B,CAAOH,EAAYC,GACxB,OAAO/I,KAAK4I,KAAKM,IAAIJ,EAAIC,EAC3B,CAEO,QAAAI,CAASL,EAAYC,EAAYzB,GACtCtH,KAAK0I,OAAOM,IAAIF,EAAIC,EAAIzB,EAC1B,CAEO,QAAA8B,CAASN,EAAYC,GAC1B,OAAO/I,KAAK0I,OAAOQ,IAAIJ,EAAIC,EAC7B,CAEO,KAAAM,GACLrJ,KAAK0I,OAAOW,QACZrJ,KAAK4I,KAAKS,OACZ,E,kGCjBF,oCACEC,EACAC,EACAC,EACAC,GAEAH,EAAKtI,iBAAiBuI,EAAMC,EAASC,GACrC,IAAIC,GAAW,EACf,MAAO,CACLC,QAAS,KACHD,IAGJA,GAAW,EACXJ,EAAK/D,oBAAoBgE,EAAMC,EAASC,GAAQ,EAGtD,C,igBCxBA,gBACA,UACA,SACA,UAEO,IAAMG,EAAU,aAAhB,cAAyB,EAAApK,WAK9B,eAAWqK,GAA4C,OAAO7J,KAAK8J,YAAc,CAgBjF,WAAArK,CACkB,GAEhBE,QAFiC,KAAAoK,eAAAA,EAlB3B,KAAAC,eAAkC,GAKlC,KAAAC,sBAAuC,GAEvC,KAAAC,aAAuB,EACvB,KAAAC,aAAuB,EAEvB,KAAAC,aAAuB,EAEd,KAAAC,qBAAuBrK,KAAKqB,SAAS,IAAI,EAAAiJ,cAC1C,KAAAC,oBAAsBvK,KAAKqK,qBAAqBG,MAC/C,KAAAC,qBAAuBzK,KAAKqB,SAAS,IAAI,EAAAiJ,cAC1C,KAAAI,oBAAsB1K,KAAKyK,qBAAqBD,MAM9DxK,KAAKqB,UAAS,IAAAsJ,2BAA0B3K,KAAKiK,wBAC7CjK,KAAKqB,UAAS,IAAAgC,eAAa,KACzBrD,KAAK4K,qBAAkBC,CAAS,KAGlC7K,KAAKqB,SAASrB,KAAK+J,eAAenI,UAAS,KACzC5B,KAAK8K,oBACL9K,KAAKmK,aAAc,CAAI,IAE3B,CAEO,oBAAAY,CAAqBC,GAE1B,OADAhL,KAAKgK,eAAe/F,KAAK+G,GAClB,CACLrB,QAAS,KAEP,MAAMsB,EAAgBjL,KAAKgK,eAAekB,QAAQF,IAE3B,IAAnBC,GACFjL,KAAKgK,eAAemB,OAAOF,EAAe,E,EAIlD,CAEO,WAAAG,CAAY3J,EAAsB4J,EAA6BC,GACpEtL,KAAKuL,SAAW9J,EAChBzB,KAAKwL,cAAgBH,EACrBrL,KAAKJ,eAAiB0L,EAEtBtL,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKuL,SAAU,cAAc,KAClEvL,KAAKkK,aAAc,EACnBlK,KAAK8K,mBAAmB,KAE1B9K,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKuL,SAAU,YAAavL,KAAKyL,iBAAiBjK,KAAKxB,QAC9FA,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKuL,SAAU,YAAavL,KAAK0L,iBAAiBlK,KAAKxB,QAC9FA,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKuL,SAAU,UAAWvL,KAAK2L,eAAenK,KAAKxB,OAC5F,CAEQ,gBAAAyL,CAAiBjB,GAGvB,GAFAxK,KAAK4K,gBAAkBJ,GAElBxK,KAAKuL,WAAavL,KAAKwL,cAC1B,OAGF,MAAM3G,EAAW7E,KAAK4L,wBAAwBpB,EAAOxK,KAAKuL,SAAUvL,KAAKwL,eACzE,IAAK3G,EACH,OAEF7E,KAAKkK,aAAc,EAGnB,MAAM2B,EAAerB,EAAMqB,eAC3B,IAAK,IAAIxM,EAAI,EAAGA,EAAIwM,EAAa5K,OAAQ5B,IAAK,CAC5C,MAAM0F,EAAS8G,EAAaxM,GAE5B,GAAI0F,EAAO3E,UAAU0L,SAAS,SAC5B,MAGF,GAAI/G,EAAO3E,UAAU0L,SAAS,eAC5B,M,CAIC9L,KAAK+L,iBAAoBlH,EAASmH,IAAMhM,KAAK+L,gBAAgBC,GAAKnH,EAASoH,IAAMjM,KAAK+L,gBAAgBE,IACzGjM,KAAKkM,aAAarH,GAClB7E,KAAK+L,gBAAkBlH,EAE3B,CAEQ,YAAAqH,CAAarH,GAInB,GAAI7E,KAAKoK,cAAgBvF,EAASoH,GAAKjM,KAAKmK,YAI1C,OAHAnK,KAAK8K,oBACL9K,KAAKmM,YAAYtH,GAAU,QAC3B7E,KAAKmK,aAAc,GAKWnK,KAAK8J,cAAgB9J,KAAKoM,gBAAgBpM,KAAK8J,aAAauC,KAAMxH,KAEhG7E,KAAK8K,oBACL9K,KAAKmM,YAAYtH,GAAU,GAE/B,CAEQ,WAAAsH,CAAYtH,EAA+ByH,G,QAC5CtM,KAAKuM,wBAA2BD,IACR,QAA3B,EAAAtM,KAAKuM,8BAAsB,SAAEC,SAAQC,IACnCA,SAAAA,EAAOD,SAAQE,IACTA,EAAcL,KAAK1C,SACrB+C,EAAcL,KAAK1C,S,GAErB,IAEJ3J,KAAKuM,uBAAyB,IAAII,IAClC3M,KAAKoK,YAAcvF,EAASoH,GAE9B,IAAIW,GAAe,EAGnB,IAAK,MAAOvN,EAAG2L,KAAiBhL,KAAKgK,eAAe6C,UAC9CP,GAC+C,QAA3B,EAAAtM,KAAKuM,8BAAsB,eAAErD,IAAI7J,MAOrDuN,EAAe5M,KAAK8M,yBAAyBzN,EAAGwF,EAAU+H,IAG5D5B,EAAa+B,aAAalI,EAASoH,GAAIe,I,QACrC,GAAIhN,KAAKkK,YACP,OAEF,MAAM+C,EAA+CD,aAAK,EAALA,EAAOE,KAAIb,IAAS,CAAGA,WACjD,QAA3B,EAAArM,KAAKuM,8BAAsB,SAAEvD,IAAI3J,EAAG4N,GACpCL,EAAe5M,KAAK8M,yBAAyBzN,EAAGwF,EAAU+H,IAI3B,QAA3B,EAAA5M,KAAKuM,8BAAsB,eAAEY,QAASnN,KAAKgK,eAAe/I,QAC5DjB,KAAKoN,yBAAyBvI,EAASoH,EAAGjM,KAAKuM,uB,GAKzD,CAEQ,wBAAAa,CAAyBnB,EAAWoB,GAC1C,MAAMC,EAAgB,IAAIC,IAC1B,IAAK,IAAIlO,EAAI,EAAGA,EAAIgO,EAAQF,KAAM9N,IAAK,CACrC,MAAMmO,EAAgBH,EAAQnE,IAAI7J,GAClC,GAAKmO,EAGL,IAAK,IAAInO,EAAI,EAAGA,EAAImO,EAAcvM,OAAQ5B,IAAK,CAC7C,MAAMqN,EAAgBc,EAAcnO,GAC9BoO,EAASf,EAAcL,KAAKqB,MAAM1L,MAAMiK,EAAIA,EAAI,EAAIS,EAAcL,KAAKqB,MAAM1L,MAAMgK,EACnF2B,EAAOjB,EAAcL,KAAKqB,MAAMzL,IAAIgK,EAAIA,EAAIjM,KAAK+J,eAAe6D,KAAOlB,EAAcL,KAAKqB,MAAMzL,IAAI+J,EAC1G,IAAK,IAAIA,EAAIyB,EAAQzB,GAAK2B,EAAM3B,IAAK,CACnC,GAAIsB,EAAcO,IAAI7B,GAAI,CACxBwB,EAAcrC,OAAO9L,IAAK,GAC1B,K,CAEFiO,EAAcjN,IAAI2L,E,GAI1B,CAEQ,wBAAAc,CAAyBgB,EAAejJ,EAA+B+H,G,MAC7E,IAAK5M,KAAKuM,uBACR,OAAOK,EAGT,MAAMI,EAAQhN,KAAKuM,uBAAuBrD,IAAI4E,GAG9C,IAAIC,GAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOE,IACpBhO,KAAKuM,uBAAuBsB,IAAIG,KAAMhO,KAAKuM,uBAAuBrD,IAAI8E,KACzED,GAAgB,GAMpB,IAAKA,GAAiBf,EAAO,CAC3B,MAAMiB,EAAiBjB,EAAMkB,MAAK7B,GAAQrM,KAAKoM,gBAAgBC,EAAKA,KAAMxH,KACtEoJ,IACFrB,GAAe,EACf5M,KAAKmO,eAAeF,G,CAKxB,GAAIjO,KAAKuM,uBAAuBY,OAASnN,KAAKgK,eAAe/I,SAAW2L,EAEtE,IAAK,IAAIoB,EAAI,EAAGA,EAAIhO,KAAKuM,uBAAuBY,KAAMa,IAAK,CACzD,MAAMnE,EAAgD,QAAlC,EAAA7J,KAAKuM,uBAAuBrD,IAAI8E,UAAE,eAAEE,MAAK7B,GAAQrM,KAAKoM,gBAAgBC,EAAKA,KAAMxH,KACrG,GAAIgF,EAAa,CACf+C,GAAe,EACf5M,KAAKmO,eAAetE,GACpB,K,EAKN,OAAO+C,CACT,CAEQ,gBAAAlB,GACN1L,KAAKoO,eAAiBpO,KAAK8J,YAC7B,CAEQ,cAAA6B,CAAenB,GACrB,IAAKxK,KAAKuL,WAAavL,KAAKwL,gBAAkBxL,KAAK8J,aACjD,OAGF,MAAMjF,EAAW7E,KAAK4L,wBAAwBpB,EAAOxK,KAAKuL,SAAUvL,KAAKwL,eACpE3G,GAID7E,KAAKoO,iBAAmBpO,KAAK8J,cAAgB9J,KAAKoM,gBAAgBpM,KAAK8J,aAAauC,KAAMxH,IAC5F7E,KAAK8J,aAAauC,KAAKgC,SAAS7D,EAAOxK,KAAK8J,aAAauC,KAAK3F,KAElE,CAEQ,iBAAAoE,CAAkBwD,EAAmBC,GACtCvO,KAAKuL,UAAavL,KAAK8J,cAAiB9J,KAAK4K,mBAK7C0D,IAAaC,GAAWvO,KAAK8J,aAAauC,KAAKqB,MAAM1L,MAAMiK,GAAKqC,GAAYtO,KAAK8J,aAAauC,KAAKqB,MAAMzL,IAAIgK,GAAKsC,KACrHvO,KAAKwO,WAAWxO,KAAKuL,SAAUvL,KAAK8J,aAAauC,KAAMrM,KAAK4K,iBAC5D5K,KAAK8J,kBAAee,GACpB,IAAA4D,cAAazO,KAAKiK,uBAEtB,CAEQ,cAAAkE,CAAezB,GACrB,IAAK1M,KAAKuL,WAAavL,KAAK4K,kBAAoB5K,KAAKwL,cACnD,OAGF,MAAM3G,EAAW7E,KAAK4L,wBAAwB5L,KAAK4K,gBAAiB5K,KAAKuL,SAAUvL,KAAKwL,eAEnF3G,GAKD7E,KAAKoM,gBAAgBM,EAAcL,KAAMxH,KAC3C7E,KAAK8J,aAAe4C,EACpB1M,KAAK8J,aAAa4E,MAAQ,CACxBC,YAAa,CACXC,eAA8C/D,IAAnC6B,EAAcL,KAAKsC,aAAmCjC,EAAcL,KAAKsC,YAAYC,UAChGC,mBAAkDhE,IAAnC6B,EAAcL,KAAKsC,aAAmCjC,EAAcL,KAAKsC,YAAYE,eAEtGC,WAAW,GAEb9O,KAAK+O,WAAW/O,KAAKuL,SAAUmB,EAAcL,KAAMrM,KAAK4K,iBAGxD8B,EAAcL,KAAKsC,YAAc,CAAC,EAClCK,OAAOC,iBAAiBvC,EAAcL,KAAKsC,YAAa,CACtDE,cAAe,CACb3F,IAAK,KAAK,QAAC,OAAwB,QAAxB,EAAiB,QAAjB,EAAAlJ,KAAK8J,oBAAY,eAAE4E,aAAK,eAAEC,YAAYE,aAAa,EAC9D7F,IAAKkG,I,SACkB,QAAjB,EAAAlP,KAAK8J,oBAAY,eAAE4E,QAAS1O,KAAK8J,aAAa4E,MAAMC,YAAYE,gBAAkBK,IACpFlP,KAAK8J,aAAa4E,MAAMC,YAAYE,cAAgBK,EAChDlP,KAAK8J,aAAa4E,MAAMI,YACb,QAAb,EAAA9O,KAAKuL,gBAAQ,SAAEnL,UAAU+O,OAAO,uBAAwBD,I,GAKhEN,UAAW,CACT1F,IAAK,KAAK,QAAC,OAAwB,QAAxB,EAAiB,QAAjB,EAAAlJ,KAAK8J,oBAAY,eAAE4E,aAAK,eAAEC,YAAYC,SAAS,EAC1D5F,IAAKkG,I,WACkB,QAAjB,EAAAlP,KAAK8J,oBAAY,eAAE4E,SAAiC,QAAxB,EAAiB,QAAjB,EAAA1O,KAAK8J,oBAAY,eAAE4E,aAAK,eAAEC,YAAYC,aAAcM,IAClFlP,KAAK8J,aAAa4E,MAAMC,YAAYC,UAAYM,EAC5ClP,KAAK8J,aAAa4E,MAAMI,WAC1B9O,KAAKoP,oBAAoB1C,EAAcL,KAAM6C,G,KASnDlP,KAAKJ,gBACPI,KAAKiK,sBAAsBhG,KAAKjE,KAAKJ,eAAeyP,0BAAyBxO,IAE3E,IAAKb,KAAK8J,aACR,OAIF,MAAM9H,EAAoB,IAAZnB,EAAEmB,MAAc,EAAInB,EAAEmB,MAAQ,EAAIhC,KAAK+J,eAAe5F,OAAOM,MACrExC,EAAMjC,KAAK+J,eAAe5F,OAAOM,MAAQ,EAAI5D,EAAEoB,IAErD,GAAIjC,KAAK8J,aAAauC,KAAKqB,MAAM1L,MAAMiK,GAAKjK,GAAShC,KAAK8J,aAAauC,KAAKqB,MAAMzL,IAAIgK,GAAKhK,IACzFjC,KAAK8K,kBAAkB9I,EAAOC,GAC1BjC,KAAK4K,iBAAmB5K,KAAKuL,UAAU,CAEzC,MAAM1G,EAAW7E,KAAK4L,wBAAwB5L,KAAK4K,gBAAiB5K,KAAKuL,SAAUvL,KAAKwL,eACpF3G,GACF7E,KAAKmM,YAAYtH,GAAU,E,MAOzC,CAEU,UAAAkK,CAAWtN,EAAsB4K,EAAa7B,G,OACjC,QAAjB,EAAAxK,KAAK8J,oBAAY,eAAE4E,SACrB1O,KAAK8J,aAAa4E,MAAMI,WAAY,EAChC9O,KAAK8J,aAAa4E,MAAMC,YAAYC,WACtC5O,KAAKoP,oBAAoB/C,GAAM,GAE7BrM,KAAK8J,aAAa4E,MAAMC,YAAYE,eACtCpN,EAAQrB,UAAUC,IAAI,yBAItBgM,EAAKiD,OACPjD,EAAKiD,MAAM9E,EAAO6B,EAAK3F,KAE3B,CAEQ,mBAAA0I,CAAoB/C,EAAakD,GACvC,MAAM7B,EAAQrB,EAAKqB,MACb8B,EAAexP,KAAK+J,eAAe5F,OAAOM,MAC1C+F,EAAQxK,KAAKyP,0BAA0B/B,EAAM1L,MAAMgK,EAAI,EAAG0B,EAAM1L,MAAMiK,EAAIuD,EAAe,EAAG9B,EAAMzL,IAAI+J,EAAG0B,EAAMzL,IAAIgK,EAAIuD,EAAe,OAAG3E,IAC/H0E,EAAYvP,KAAKqK,qBAAuBrK,KAAKyK,sBACrDiF,KAAKlF,EACf,CAEU,UAAAgE,CAAW/M,EAAsB4K,EAAa7B,G,OACjC,QAAjB,EAAAxK,KAAK8J,oBAAY,eAAE4E,SACrB1O,KAAK8J,aAAa4E,MAAMI,WAAY,EAChC9O,KAAK8J,aAAa4E,MAAMC,YAAYC,WACtC5O,KAAKoP,oBAAoB/C,GAAM,GAE7BrM,KAAK8J,aAAa4E,MAAMC,YAAYE,eACtCpN,EAAQrB,UAAUkD,OAAO,yBAIzB+I,EAAKsD,OACPtD,EAAKsD,MAAMnF,EAAO6B,EAAK3F,KAE3B,CAOQ,eAAA0F,CAAgBC,EAAaxH,GACnC,MAAM+K,EAAQvD,EAAKqB,MAAM1L,MAAMiK,EAAIjM,KAAK+J,eAAe6D,KAAOvB,EAAKqB,MAAM1L,MAAMgK,EACzE6D,EAAQxD,EAAKqB,MAAMzL,IAAIgK,EAAIjM,KAAK+J,eAAe6D,KAAOvB,EAAKqB,MAAMzL,IAAI+J,EACrE8D,EAAUjL,EAASoH,EAAIjM,KAAK+J,eAAe6D,KAAO/I,EAASmH,EACjE,OAAQ4D,GAASE,GAAWA,GAAWD,CACzC,CAMQ,uBAAAjE,CAAwBpB,EAAmB/I,EAAsB4J,GACvE,MAAM0E,EAAS1E,EAAa2E,UAAUxF,EAAO/I,EAASzB,KAAK+J,eAAe6D,KAAM5N,KAAK+J,eAAetJ,MACpG,GAAKsP,EAIL,MAAO,CAAE/D,EAAG+D,EAAO,GAAI9D,EAAG8D,EAAO,GAAK/P,KAAK+J,eAAe5F,OAAOM,MACnE,CAEQ,yBAAAgL,CAA0BQ,EAAYC,EAAYC,EAAYC,EAAYrH,GAChF,MAAO,CAAEkH,KAAIC,KAAIC,KAAIC,KAAIxC,KAAM5N,KAAK+J,eAAe6D,KAAM7E,KAC3D,G,aAjZWa,EAAU,GAsBlB,MAAAyG,iBAtBQzG,E,qGCLF,EAAA0G,YAAc,iBAGd,EAAA3M,cAAgB,gE,sgBCL3B,eACA,UAEO,IAAM4M,EAAe,kBAArB,MACL,WAAA9Q,CACmCsK,EACCyG,EACAC,GAFD,KAAA1G,eAAAA,EACC,KAAAyG,gBAAAA,EACA,KAAAC,gBAAAA,CAEpC,CAEO,YAAA1D,CAAad,EAAWyE,G,MAC7B,MAAMC,EAAO3Q,KAAK+J,eAAe5F,OAAOE,MAAM6E,IAAI+C,EAAI,GACtD,IAAK0E,EAEH,YADAD,OAAS7F,GAIX,MAAM+F,EAAkB,GAClBC,EAAc7Q,KAAKwQ,gBAAgBrJ,WAAW0J,YAC9C1K,EAAO,IAAI,EAAA2K,SACXC,EAAaJ,EAAKK,mBACxB,IAAIC,GAAiB,EACjBC,GAAgB,EAChBC,GAAa,EACjB,IAAK,IAAInF,EAAI,EAAGA,EAAI+E,EAAY/E,IAG9B,IAAsB,IAAlBkF,GAAwBP,EAAKS,WAAWpF,GAA5C,CAKA,GADA2E,EAAKU,SAASrF,EAAG7F,GACbA,EAAKmL,oBAAsBnL,EAAKoL,SAASC,MAAO,CAClD,IAAsB,IAAlBN,EAAqB,CACvBA,EAAelF,EACfiF,EAAgB9K,EAAKoL,SAASC,MAC9B,Q,CAEAL,EAAahL,EAAKoL,SAASC,QAAUP,C,MAGjB,IAAlBC,IACFC,GAAa,GAIjB,GAAIA,IAAiC,IAAlBD,GAAuBlF,IAAM+E,EAAa,EAAI,CAC/D,MAAMrK,EAAsD,QAA/C,EAAA1G,KAAKyQ,gBAAgBgB,YAAYR,UAAc,eAAES,IAC9D,GAAIhL,EAAM,CAER,MAAMgH,EAAsB,CAC1B1L,MAAO,CACLgK,EAAGkF,EAAe,EAClBjF,KAEFhK,IAAK,CAEH+J,EAAGA,GAAMmF,GAAcnF,IAAM+E,EAAa,EAAQ,EAAJ,GAC9C9E,MAIJ,IAAI0F,GAAa,EACjB,KAAKd,aAAW,EAAXA,EAAae,uBAChB,IACE,MAAMC,EAAS,IAAIC,IAAIpL,GAClB,CAAC,QAAS,UAAUqL,SAASF,EAAOG,YACvCL,GAAa,E,CAEf,MAAO9Q,GAEP8Q,GAAa,C,CAIZA,GAEHf,EAAO3M,KAAK,CACVyC,OACAgH,QACAW,SAAU,CAACxN,EAAG6F,IAAUmK,EAAcA,EAAYxC,SAASxN,EAAG6F,EAAMgH,GAASuE,EAAgBpR,EAAG6F,GAChG4I,MAAO,CAACzO,EAAG6F,KAAQ,MAAC,OAAkB,QAAlB,EAAAmK,aAAW,EAAXA,EAAavB,aAAK,sBAAGzO,EAAG6F,EAAMgH,EAAM,EACxDiC,MAAO,CAAC9O,EAAG6F,KAAQ,MAAC,OAAkB,QAAlB,EAAAmK,aAAW,EAAXA,EAAalB,aAAK,sBAAG9O,EAAG6F,EAAMgH,EAAM,G,CAI9DyD,GAAa,EAGThL,EAAKmL,oBAAsBnL,EAAKoL,SAASC,OAC3CN,EAAelF,EACfiF,EAAgB9K,EAAKoL,SAASC,QAE9BN,GAAgB,EAChBD,GAAiB,E,EAOvBP,EAASE,EACX,GAGF,SAASqB,EAAgBpR,EAAe6Q,GAEtC,GADeQ,QAAQ,8BAA8BR,2DACzC,CACV,MAAMS,EAAYjP,OAAOkP,OACzB,GAAID,EAAW,CACb,IACEA,EAAUE,OAAS,I,CACnB,S,CAGFF,EAAUG,SAASC,KAAOb,C,MAE1Bc,QAAQC,KAAK,sD,CAGnB,C,kBAtHalC,EAAe,GAEvB,MAAAF,gBACA,MAAAqC,iBACA,MAAAC,kBAJQpC,E,yFCCb,wBAOE,WAAA9Q,CACUmT,EACAC,GADA,KAAAD,cAAAA,EACA,KAAAC,gBAAAA,EAJF,KAAAC,kBAA4C,EAMpD,CAEO,OAAAnJ,GACD3J,KAAK+S,kBACP/S,KAAK4S,cAAcI,qBAAqBhT,KAAK+S,iBAC7C/S,KAAK+S,qBAAkBlI,EAE3B,CAEO,kBAAAoI,CAAmBvC,GAKxB,OAJA1Q,KAAK8S,kBAAkB7O,KAAKyM,GACvB1Q,KAAK+S,kBACR/S,KAAK+S,gBAAkB/S,KAAK4S,cAAcM,uBAAsB,IAAMlT,KAAKmT,mBAEtEnT,KAAK+S,eACd,CAEO,OAAA7O,CAAQkP,EAA8BC,EAA4BC,GACvEtT,KAAKuT,UAAYD,EAEjBF,OAAwBvI,IAAbuI,EAAyBA,EAAW,EAC/CC,OAAoBxI,IAAXwI,EAAuBA,EAASrT,KAAKuT,UAAY,EAE1DvT,KAAKwT,eAA+B3I,IAAnB7K,KAAKwT,UAA0BC,KAAKC,IAAI1T,KAAKwT,UAAWJ,GAAYA,EACrFpT,KAAK2T,aAA2B9I,IAAjB7K,KAAK2T,QAAwBF,KAAKG,IAAI5T,KAAK2T,QAASN,GAAUA,EAEzErT,KAAK+S,kBAIT/S,KAAK+S,gBAAkB/S,KAAK4S,cAAcM,uBAAsB,IAAMlT,KAAKmT,kBAC7E,CAEQ,aAAAA,GAIN,GAHAnT,KAAK+S,qBAAkBlI,OAGAA,IAAnB7K,KAAKwT,gBAA4C3I,IAAjB7K,KAAK2T,cAA4C9I,IAAnB7K,KAAKuT,UAErE,YADAvT,KAAK6T,uBAKP,MAAM7R,EAAQyR,KAAKG,IAAI5T,KAAKwT,UAAW,GACjCvR,EAAMwR,KAAKC,IAAI1T,KAAK2T,QAAS3T,KAAKuT,UAAY,GAGpDvT,KAAKwT,eAAY3I,EACjB7K,KAAK2T,aAAU9I,EAGf7K,KAAK6S,gBAAgB7Q,EAAOC,GAC5BjC,KAAK6T,sBACP,CAEQ,oBAAAA,GACN,IAAK,MAAMnD,KAAY1Q,KAAK8S,kBAC1BpC,EAAS,GAEX1Q,KAAK8S,kBAAoB,EAC3B,E,4FC5EF,eAcA,MAAa7P,UAAyB,EAAAzD,WAMpC,WAAAC,CAAoBmT,GAClBjT,QADkB,KAAAiT,cAAAA,EAElB5S,KAAK8T,yBAA2B9T,KAAK4S,cAAcmB,iBACnD/T,KAAKqB,UAAS,IAAAgC,eAAa,KACzBrD,KAAKgU,eAAe,IAExB,CAEO,WAAA7Q,CAAY8Q,GACbjU,KAAKkU,WACPlU,KAAKgU,gBAEPhU,KAAKkU,UAAYD,EACjBjU,KAAKmU,eAAiB,KACfnU,KAAKkU,YAGVlU,KAAKkU,UAAUlU,KAAK4S,cAAcmB,iBAAkB/T,KAAK8T,0BACzD9T,KAAKoU,aAAY,EAEnBpU,KAAKoU,YACP,CAEQ,UAAAA,G,MACDpU,KAAKmU,iBAKoB,QAA9B,EAAAnU,KAAKqU,iCAAyB,SAAEC,eAAetU,KAAKmU,gBAGpDnU,KAAK8T,yBAA2B9T,KAAK4S,cAAcmB,iBACnD/T,KAAKqU,0BAA4BrU,KAAK4S,cAAc2B,WAAW,2BAA2BvU,KAAK4S,cAAcmB,yBAC7G/T,KAAKqU,0BAA0BG,YAAYxU,KAAKmU,gBAClD,CAEO,aAAAH,GACAhU,KAAKqU,2BAA8BrU,KAAKkU,WAAclU,KAAKmU,iBAGhEnU,KAAKqU,0BAA0BC,eAAetU,KAAKmU,gBACnDnU,KAAKqU,+BAA4BxJ,EACjC7K,KAAKkU,eAAYrJ,EACjB7K,KAAKmU,oBAAiBtJ,EACxB,EAnDF,oB,oFCMA,gBACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,UACA,UACA,UACA,UACA,UACA,SAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UAGM3K,EAAwC,oBAAXgD,OAA0BA,OAAOhD,SAAW,KAE/E,MAAauU,UAAiB,EAAAC,aA2E5B,WAAWC,GAA0B,OAAO3U,KAAK4U,SAASpK,KAAO,CAEjE,UAAW3H,GAAyB,OAAO7C,KAAK6U,QAAQrK,KAAO,CAE/D,cAAWrI,GAA+B,OAAOnC,KAAK8U,mBAAmBtK,KAAO,CAEhF,aAAWjI,GAA8B,OAAOvC,KAAK+U,kBAAkBvK,KAAO,CAE9E,cAAWwK,GAAoC,OAAOhV,KAAKiV,YAAYzK,KAAO,CAc9E,WAAA/K,CACEgK,EAAqC,CAAC,GAEtC9J,MAAM8J,GArFD,KAAAyL,QAAoBC,EAmBnB,KAAAC,iBAA2B,EAM3B,KAAAC,cAAwB,EAOxB,KAAAC,kBAA4B,EAO5B,KAAAC,qBAA+B,EAOtB,KAAAC,cAAgBxV,KAAKqB,SAAS,IAAI,EAAAiJ,cACnC,KAAAmL,aAAezV,KAAKwV,cAAchL,MACjC,KAAAkL,OAAS1V,KAAKqB,SAAS,IAAI,EAAAiJ,cAC5B,KAAA5H,MAAQ1C,KAAK0V,OAAOlL,MACnB,KAAAmL,UAAY3V,KAAKqB,SAAS,IAAI,EAAAiJ,cAC/B,KAAAxI,SAAW9B,KAAK2V,UAAUnL,MACzB,KAAAoL,mBAAqB5V,KAAKqB,SAAS,IAAI,EAAAiJ,cACxC,KAAAuL,kBAAoB7V,KAAK4V,mBAAmBpL,MAC3C,KAAAsL,eAAiB9V,KAAKqB,SAAS,IAAI,EAAAiJ,cACpC,KAAAyL,cAAgB/V,KAAK8V,eAAetL,MACnC,KAAAwL,QAAUhW,KAAKqB,SAAS,IAAI,EAAAiJ,cAC7B,KAAA2L,OAASjW,KAAKgW,QAAQxL,MAE9B,KAAAoK,SAAW5U,KAAKqB,SAAS,IAAI,EAAAiJ,cAE7B,KAAAuK,QAAU7U,KAAKqB,SAAS,IAAI,EAAAiJ,cAE5B,KAAAwK,mBAAqB9U,KAAKqB,SAAS,IAAI,EAAAiJ,cAEvC,KAAAyK,kBAAoB/U,KAAKqB,SAAS,IAAI,EAAAiJ,cAEtC,KAAA2K,YAAcjV,KAAKqB,SAAS,IAAI,EAAAiJ,cAoBtCtK,KAAKkW,SAELlW,KAAKmW,WAAanW,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAzM,aAC1E5J,KAAKmW,WAAWpL,qBAAqB/K,KAAKoW,sBAAsBC,eAAe,EAAA9F,kBAC/EvQ,KAAKsW,mBAAqBtW,KAAKoW,sBAAsBC,eAAe,EAAAE,mBACpEvW,KAAKoW,sBAAsBI,WAAW,EAAAC,mBAAoBzW,KAAKsW,oBAG/DtW,KAAKqB,SAASrB,KAAK0W,cAAcC,eAAc,IAAM3W,KAAKgW,QAAQtG,UAClE1P,KAAKqB,SAASrB,KAAK0W,cAAcE,sBAAqB,CAAC5U,EAAOC,IAAQjC,KAAKkE,QAAQlC,EAAOC,MAC1FjC,KAAKqB,SAASrB,KAAK0W,cAAcG,oBAAmB,IAAM7W,KAAK8W,kBAC/D9W,KAAKqB,SAASrB,KAAK0W,cAAcK,gBAAe,IAAM/W,KAAKgX,WAC3DhX,KAAKqB,SAASrB,KAAK0W,cAAcO,+BAA8B1N,GAAQvJ,KAAKkX,sBAAsB3N,MAClGvJ,KAAKqB,SAASrB,KAAK0W,cAAcS,SAAS3M,GAAUxK,KAAKoX,kBAAkB5M,MAC3ExK,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK0W,cAAcjB,aAAczV,KAAKwV,gBACjExV,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK0W,cAAcX,cAAe/V,KAAK8V,iBAClE9V,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK0W,cAAcvU,WAAYnC,KAAK8U,qBAC/D9U,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK0W,cAAcnU,UAAWvC,KAAK+U,oBAG9D/U,KAAKqB,SAASrB,KAAK+J,eAAenI,UAASf,GAAKb,KAAKsX,aAAazW,EAAE+M,KAAM/M,EAAEJ,SAE5ET,KAAKqB,UAAS,IAAAgC,eAAa,K,QACzBrD,KAAKuX,4BAAyB1M,EACN,QAAxB,EAAY,QAAZ,EAAA7K,KAAKyB,eAAO,eAAEoC,kBAAU,SAAEyB,YAAYtF,KAAKyB,QAAQ,IAEvD,CAQQ,iBAAA2V,CAAkB5M,GACxB,GAAKxK,KAAKwX,cACV,IAAK,MAAMC,KAAOjN,EAAO,CACvB,IAAIkN,EACAC,EAAQ,GACZ,OAAQF,EAAI3J,OACV,KAAK,IACH4J,EAAM,aACNC,EAAQ,KACR,MACF,KAAK,IACHD,EAAM,aACNC,EAAQ,KACR,MACF,KAAK,IACHD,EAAM,SACNC,EAAQ,KACR,MACF,QAEED,EAAM,OACNC,EAAQ,KAAOF,EAAI3J,MAEvB,OAAQ2J,EAAIlO,MACV,KAAK,EACH,MAAMqO,EAAW,EAAAC,MAAMC,WAAmB,SAARJ,EAC9B1X,KAAKwX,cAAcO,OAAOC,KAAKP,EAAI3J,OACnC9N,KAAKwX,cAAcO,OAAOL,IAC9B1X,KAAKgH,YAAYK,iBAAiB,GAAG,EAAA4Q,GAAGC,OAAOP,MAAS,IAAAQ,aAAYP,KAAY,EAAAQ,WAAWC,MAC3F,MACF,KAAK,EACH,GAAY,SAARX,EACF1X,KAAKwX,cAAcc,cAAaP,GAAUA,EAAOC,KAAKP,EAAI3J,OAAS,EAAAyK,KAAKC,WAAWf,EAAII,aAClF,CACL,MAAMY,EAAcf,EACpB1X,KAAKwX,cAAcc,cAAaP,GAAUA,EAAOU,GAAe,EAAAF,KAAKC,WAAWf,EAAII,Q,CAEtF,MACF,KAAK,EACH7X,KAAKwX,cAAckB,aAAajB,EAAI3J,O,CAI5C,CAEU,MAAAoI,GACRvW,MAAMuW,SAENlW,KAAKuX,4BAAyB1M,CAChC,CAKA,UAAW1G,GACT,OAAOnE,KAAK2Y,QAAQC,MACtB,CAKO,KAAAjT,GACD3F,KAAK+G,UACP/G,KAAK+G,SAASpB,MAAM,CAAEkT,eAAe,GAEzC,CAEQ,mCAAAC,CAAoCxR,G,MACtCA,GACGtH,KAAK+Y,uBAAyB/Y,KAAKJ,iBACtCI,KAAK+Y,sBAAwB/Y,KAAKoW,sBAAsBC,eAAe,EAAA9W,qBAAsBS,QAGrE,QAA1B,EAAAA,KAAK+Y,6BAAqB,SAAEpP,UAC5B3J,KAAK+Y,2BAAwBlO,EAEjC,CAKQ,oBAAAmO,CAAqBxR,GACvBxH,KAAKgH,YAAYE,gBAAgB+R,WACnCjZ,KAAKgH,YAAYK,iBAAiB,EAAA4Q,GAAGC,IAAM,MAE7ClY,KAAKkZ,kBAAkB1R,GACvBxH,KAAKyB,QAASrB,UAAUC,IAAI,SAC5BL,KAAKmZ,cACLnZ,KAAK4U,SAASlF,MAChB,CAMO,IAAA0J,G,MACL,OAAoB,QAAb,EAAApZ,KAAK+G,gBAAQ,eAAEqS,MACxB,CAKQ,mBAAAC,GAGNrZ,KAAK+G,SAAUO,MAAQ,GACvBtH,KAAKkE,QAAQlE,KAAKmE,OAAO8H,EAAGjM,KAAKmE,OAAO8H,GACpCjM,KAAKgH,YAAYE,gBAAgB+R,WACnCjZ,KAAKgH,YAAYK,iBAAiB,EAAA4Q,GAAGC,IAAM,MAE7ClY,KAAKyB,QAASrB,UAAUkD,OAAO,SAC/BtD,KAAK6U,QAAQnF,MACf,CAEQ,aAAA4J,GACN,IAAKtZ,KAAK+G,WAAa/G,KAAKmE,OAAOoV,oBAAsBvZ,KAAKwZ,mBAAoBC,cAAgBzZ,KAAKJ,eACrG,OAEF,MAAM8Z,EAAU1Z,KAAKmE,OAAOwV,MAAQ3Z,KAAKmE,OAAO8H,EAC1C2N,EAAa5Z,KAAKmE,OAAOE,MAAM6E,IAAIwQ,GACzC,IAAKE,EACH,OAEF,MAAMC,EAAUpG,KAAKC,IAAI1T,KAAKmE,OAAO6H,EAAGhM,KAAK4N,KAAO,GAC9CkM,EAAa9Z,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OACrDE,EAAQsT,EAAWG,SAASF,GAC5BG,EAAYha,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MAAQA,EAC5D2T,EAAYja,KAAKmE,OAAO8H,EAAIjM,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OACpE8T,EAAaL,EAAU7Z,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MAIrEtG,KAAK+G,SAASV,MAAMuB,KAAOsS,EAAa,KACxCla,KAAK+G,SAASV,MAAMyB,IAAMmS,EAAY,KACtCja,KAAK+G,SAASV,MAAMC,MAAQ0T,EAAY,KACxCha,KAAK+G,SAASV,MAAMD,OAAS0T,EAAa,KAC1C9Z,KAAK+G,SAASV,MAAM8T,WAAaL,EAAa,KAC9C9Z,KAAK+G,SAASV,MAAM2B,OAAS,IAC/B,CAKQ,WAAAoS,GACNpa,KAAKqa,YAGLra,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKyB,QAAU,QAAS+I,IAGxDxK,KAAKsa,iBAGV,IAAAC,aAAY/P,EAAOxK,KAAKwa,kBAAmB,KAE7C,MAAMC,EAAuBjQ,IAAgC,IAAAkQ,kBAAiBlQ,EAAOxK,KAAK+G,SAAW/G,KAAKgH,YAAahH,KAAKiH,gBAC5HjH,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,QAAS0T,IAChEza,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKyB,QAAU,QAASgZ,IAG3DtF,EAAQwF,UAEV3a,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKyB,QAAU,aAAc+I,IAC7C,IAAjBA,EAAMoQ,SACR,IAAAC,mBAAkBrQ,EAAOxK,KAAK+G,SAAW/G,KAAKyH,cAAgBzH,KAAKwa,kBAAoBxa,KAAKyJ,QAAQqR,sB,KAIxG9a,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKyB,QAAU,eAAgB+I,KACpE,IAAAqQ,mBAAkBrQ,EAAOxK,KAAK+G,SAAW/G,KAAKyH,cAAgBzH,KAAKwa,kBAAoBxa,KAAKyJ,QAAQqR,sBAAsB,KAO1H3F,EAAQ4F,SAGV/a,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKyB,QAAU,YAAa+I,IAC5C,IAAjBA,EAAMoQ,SACR,IAAArT,8BAA6BiD,EAAOxK,KAAK+G,SAAW/G,KAAKyH,c,IAIjE,CAKQ,SAAA4S,GACNra,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,SAAUS,GAAsBxH,KAAKgb,OAAOxT,KAAK,IACxGxH,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,WAAYS,GAAsBxH,KAAKib,SAASzT,KAAK,IAC5GxH,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,YAAaS,GAAsBxH,KAAKkb,UAAU1T,KAAK,IAC9GxH,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,oBAAoB,IAAM/G,KAAKwZ,mBAAoB2B,sBAC1Gnb,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,qBAAsBlG,GAAwBb,KAAKwZ,mBAAoB4B,kBAAkBva,MAChJb,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,kBAAkB,IAAM/G,KAAKwZ,mBAAoB6B,oBACxGrb,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAW,SAAUS,GAAmBxH,KAAKsb,YAAY9T,KAAK,IAC1GxH,KAAKqB,SAASrB,KAAK8B,UAAS,IAAM9B,KAAKwZ,mBAAoB+B,8BAC7D,CAOO,IAAAnJ,CAAKoJ,G,MACV,IAAKA,EACH,MAAM,IAAI9Z,MAAM,uCAGb8Z,EAAOC,aACVzb,KAAK0b,YAAYC,MAAM,2EAGzB3b,KAAK4b,UAAYJ,EAAOK,cAGxB7b,KAAKyB,QAAUzB,KAAK4b,UAAUzb,cAAc,OAC5CH,KAAKyB,QAAQqa,IAAM,MACnB9b,KAAKyB,QAAQrB,UAAUC,IAAI,YAC3BL,KAAKyB,QAAQrB,UAAUC,IAAI,SAC3Bmb,EAAO7a,YAAYX,KAAKyB,SAIxB,MAAMsa,EAAW7b,EAAS8b,yBAC1Bhc,KAAKic,iBAAmB/b,EAASC,cAAc,OAC/CH,KAAKic,iBAAiB7b,UAAUC,IAAI,kBACpC0b,EAASpb,YAAYX,KAAKic,kBAE1Bjc,KAAKkc,oBAAsBhc,EAASC,cAAc,OAClDH,KAAKkc,oBAAoB9b,UAAUC,IAAI,qBACvCL,KAAKic,iBAAiBtb,YAAYX,KAAKkc,qBAEvClc,KAAKyH,cAAgBvH,EAASC,cAAc,OAC5CH,KAAKyH,cAAcrH,UAAUC,IAAI,gBAGjCL,KAAKmc,iBAAmBjc,EAASC,cAAc,OAC/CH,KAAKmc,iBAAiB/b,UAAUC,IAAI,iBACpCL,KAAKyH,cAAc9G,YAAYX,KAAKmc,kBACpCJ,EAASpb,YAAYX,KAAKyH,eAE1BzH,KAAK+G,SAAW7G,EAASC,cAAc,YACvCH,KAAK+G,SAAS3G,UAAUC,IAAI,yBAC5BL,KAAK+G,SAASxG,aAAa,aAAcmD,EAAQ4M,aAC5C6E,EAAQiH,YAGXpc,KAAK+G,SAASxG,aAAa,iBAAkB,SAE/CP,KAAK+G,SAASxG,aAAa,cAAe,OAC1CP,KAAK+G,SAASxG,aAAa,iBAAkB,OAC7CP,KAAK+G,SAASxG,aAAa,aAAc,SACzCP,KAAK+G,SAAShB,SAAW,EAIzB/F,KAAKqc,oBAAsBrc,KAAKoW,sBAAsBC,eAAe,EAAAiG,mBAAoBtc,KAAK+G,SAAoC,QAA1B,EAAA/G,KAAK4b,UAAUW,mBAAW,QAAIrZ,QACtIlD,KAAKoW,sBAAsBI,WAAW,EAAAgG,oBAAqBxc,KAAKqc,qBAEhErc,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAU,SAAUS,GAAsBxH,KAAKgZ,qBAAqBxR,MAChHxH,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK+G,SAAU,QAAQ,IAAM/G,KAAKqZ,yBACzErZ,KAAKmc,iBAAiBxb,YAAYX,KAAK+G,UAGvC/G,KAAKyc,iBAAmBzc,KAAKoW,sBAAsBC,eAAe,EAAAqG,gBAAiB1c,KAAK4b,UAAW5b,KAAKmc,kBACxGnc,KAAKoW,sBAAsBI,WAAW,EAAAmG,iBAAkB3c,KAAKyc,kBAE7Dzc,KAAKwX,cAAgBxX,KAAKoW,sBAAsBC,eAAe,EAAAuG,cAC/D5c,KAAKoW,sBAAsBI,WAAW,EAAAqG,cAAe7c,KAAKwX,eAE1DxX,KAAK8c,wBAA0B9c,KAAKoW,sBAAsBC,eAAe,EAAA0G,wBACzE/c,KAAKoW,sBAAsBI,WAAW,EAAAwG,wBAAyBhd,KAAK8c,yBAEpE9c,KAAKJ,eAAiBI,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAA4G,cAAejd,KAAKS,KAAMT,KAAKyH,gBAC7GzH,KAAKoW,sBAAsBI,WAAW,EAAAhQ,eAAgBxG,KAAKJ,gBAC3DI,KAAKqB,SAASrB,KAAKJ,eAAeyP,0BAAyBxO,GAAKb,KAAK2V,UAAUjG,KAAK7O,MACpFb,KAAK4B,UAASf,GAAKb,KAAKJ,eAAgBsd,OAAOrc,EAAE+M,KAAM/M,EAAEJ,QAEzDT,KAAKmd,iBAAmBjd,EAASC,cAAc,OAC/CH,KAAKmd,iBAAiB/c,UAAUC,IAAI,oBACpCL,KAAKwZ,mBAAqBxZ,KAAKoW,sBAAsBC,eAAe,EAAA+G,kBAAmBpd,KAAK+G,SAAU/G,KAAKmd,kBAC3Gnd,KAAKmc,iBAAiBxb,YAAYX,KAAKmd,kBAGvCnd,KAAKyB,QAAQd,YAAYob,GAEzB,IACE/b,KAAKiV,YAAYvF,KAAK1P,KAAKyB,Q,CAE7B,SAAQ,CACHzB,KAAKJ,eAAeyd,eACvBrd,KAAKJ,eAAe0d,YAAYtd,KAAKud,mBAGvCvd,KAAKwL,cAAgBxL,KAAKoW,sBAAsBC,eAAe,EAAAmH,cAC/Dxd,KAAKoW,sBAAsBI,WAAW,EAAAiH,cAAezd,KAAKwL,eAE1DxL,KAAK0d,SAAW1d,KAAKoW,sBAAsBC,eAAe,EAAAsH,SAAU3d,KAAKic,iBAAkBjc,KAAKkc,qBAChGlc,KAAK0d,SAASE,sBAAqB/c,GAAKb,KAAK0F,YAAY7E,EAAEgd,OAAQhd,EAAEid,oBAAqB,KAC1F9d,KAAKqB,SAASrB,KAAK0W,cAAcqH,wBAAuB,IAAM/d,KAAK0d,SAAUM,oBAC7Ehe,KAAKqB,SAASrB,KAAK0d,UAEnB1d,KAAKqB,SAASrB,KAAKyV,cAAa,KAC9BzV,KAAKJ,eAAgBqe,mBACrBje,KAAKsZ,eAAe,KAEtBtZ,KAAKqB,SAASrB,KAAK4B,UAAS,IAAM5B,KAAKJ,eAAgBse,aAAale,KAAK4N,KAAM5N,KAAKS,SACpFT,KAAKqB,SAASrB,KAAK6C,QAAO,IAAM7C,KAAKJ,eAAgBue,gBACrDne,KAAKqB,SAASrB,KAAK2U,SAAQ,IAAM3U,KAAKJ,eAAgBwe,iBACtDpe,KAAKqB,SAASrB,KAAKJ,eAAemD,oBAAmB,IAAM/C,KAAK0d,SAAUM,oBAE1Ehe,KAAKwa,kBAAoBxa,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAgI,iBAC/Ere,KAAKyB,QACLzB,KAAKyH,cACLzH,KAAKmW,aAEPnW,KAAKoW,sBAAsBI,WAAW,EAAA8H,kBAAmBte,KAAKwa,mBAC9Dxa,KAAKqB,SAASrB,KAAKwa,kBAAkBoD,sBAAqB/c,GAAKb,KAAK0F,YAAY7E,EAAEgd,OAAQhd,EAAEid,wBAC5F9d,KAAKqB,SAASrB,KAAKwa,kBAAkB3E,mBAAkB,IAAM7V,KAAK4V,mBAAmBlG,UACrF1P,KAAKqB,SAASrB,KAAKwa,kBAAkB+D,iBAAgB1d,GAAKb,KAAKJ,eAAgB4e,uBAAuB3d,EAAEmB,MAAOnB,EAAEoB,IAAKpB,EAAE4d,qBACxHze,KAAKqB,SAASrB,KAAKwa,kBAAkBkE,uBAAsBhY,IAIzD1G,KAAK+G,SAAUO,MAAQZ,EACvB1G,KAAK+G,SAAUpB,QACf3F,KAAK+G,SAAU0B,QAAQ,KAEzBzI,KAAKqB,SAASrB,KAAK2e,UAAUnU,OAAMhD,IACjCxH,KAAK0d,SAAUM,iBACfhe,KAAKwa,kBAAmBtW,SAAS,KAEnClE,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKic,iBAAkB,UAAU,IAAMjc,KAAKwa,kBAAmBtW,aAEtGlE,KAAKmW,WAAW/K,YAAYpL,KAAKyH,cAAezH,KAAKwL,cAAexL,KAAKJ,gBACzEI,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAuI,yBAA0B5e,KAAKyH,gBACvFzH,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKyB,QAAS,aAAcZ,GAAkBb,KAAKwa,kBAAmBqE,gBAAgBhe,MAGzHb,KAAK8e,iBAAiBC,sBACxB/e,KAAKwa,kBAAkBwE,UACvBhf,KAAKyB,QAAQrB,UAAUC,IAAI,wBAE3BL,KAAKwa,kBAAkByE,SAGrBjf,KAAKyJ,QAAQyV,mBAGflf,KAAK+Y,sBAAwB/Y,KAAKoW,sBAAsBC,eAAe,EAAA9W,qBAAsBS,OAE/FA,KAAKqB,SAASrB,KAAKiH,eAAekY,uBAAuB,oBAAoBte,GAAKb,KAAK8Y,oCAAoCjY,MAEvHb,KAAKyJ,QAAQ2V,qBACfpf,KAAKqf,uBAAyBrf,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAiJ,sBAAuBtf,KAAKic,iBAAkBjc,KAAKyH,iBAE3IzH,KAAKiH,eAAekY,uBAAuB,sBAAsB7X,KAC1DtH,KAAKqf,wBAA0B/X,GAAStH,KAAKic,kBAAoBjc,KAAKyH,gBACzEzH,KAAKqf,uBAAyBrf,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAiJ,sBAAuBtf,KAAKic,iBAAkBjc,KAAKyH,gB,IAI7IzH,KAAKyc,iBAAiB8C,UAGtBvf,KAAKkE,QAAQ,EAAGlE,KAAKS,KAAO,GAG5BT,KAAKoa,cAILpa,KAAKwf,WACP,CAEQ,eAAAjC,GACN,OAAOvd,KAAKoW,sBAAsBC,eAAe,EAAAoJ,YAAazf,KAAKyB,QAAUzB,KAAKyH,cAAgBzH,KAAKic,iBAAmBjc,KAAKmW,WACjI,CAiBO,SAAAqJ,GACL,MAAMlgB,EAAOU,KACP0f,EAAK1f,KAAKyB,QAGhB,SAASke,EAAUnY,GAEjB,MAAME,EAAMpI,EAAKkM,cAAeoU,qBAAqBpY,EAAIlI,EAAKmI,eAC9D,IAAKC,EACH,OAAO,EAGT,IAAImY,EACAC,EACJ,OAAStY,EAAWuY,cAAgBvY,EAAG+B,MACrC,IAAK,YACHuW,EAAS,QACUjV,IAAfrD,EAAGwY,SAELH,EAAM,OACYhV,IAAdrD,EAAGoT,SACLiF,EAAMrY,EAAGoT,OAAS,EAAIpT,EAAGoT,OAAS,IAIpCiF,EAAmB,EAAbrY,EAAGwY,QAAc,EACR,EAAbxY,EAAGwY,QAAc,EACF,EAAbxY,EAAGwY,QAAc,E,EAGvB,MACF,IAAK,UACHF,EAAS,EACTD,EAAMrY,EAAGoT,OAAS,EAAIpT,EAAGoT,OAAS,EAClC,MACF,IAAK,YACHkF,EAAS,EACTD,EAAMrY,EAAGoT,OAAS,EAAIpT,EAAGoT,OAAS,EAClC,MACF,IAAK,QAGH,GAAe,IAFAtb,EAAKoe,SAAUuC,iBAAiBzY,GAG7C,OAAO,EAGTsY,EAAUtY,EAAkB0Y,OAAS,EAAI,EAAqB,EAC9DL,EAAM,EACN,MACF,QAEE,OAAO,EAKX,aAAehV,IAAXiV,QAAgCjV,IAARgV,GAAqBA,EAAM,IAIhDvgB,EAAKwf,iBAAiBqB,kBAAkB,CAC7CC,IAAK1Y,EAAI0Y,IACTC,IAAK3Y,EAAI2Y,IACTrU,EAAGtE,EAAIsE,EACPC,EAAGvE,EAAIuE,EACP2O,OAAQiF,EACRC,SACAQ,KAAM9Y,EAAG+Y,QACTC,IAAKhZ,EAAGiZ,OACRjd,MAAOgE,EAAGkZ,UAEd,CAUA,MAAMC,EAAmE,CACvEC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EAAiE,CACrEJ,QAAUpZ,IACRmY,EAAUnY,GACLA,EAAGwY,UAENhgB,KAAK4b,UAAWrW,oBAAoB,UAAWob,EAAgBC,SAC3DD,EAAgBG,WAClB9gB,KAAK4b,UAAWrW,oBAAoB,YAAaob,EAAgBG,YAG9D9gB,KAAKihB,OAAOzZ,IAErBqZ,MAAQrZ,IACNmY,EAAUnY,GACHxH,KAAKihB,OAAOzZ,GAAI,IAEzBsZ,UAAYtZ,IAENA,EAAGwY,SACLL,EAAUnY,E,EAGduZ,UAAYvZ,IAELA,EAAGwY,SACNL,EAAUnY,E,GAIhBxH,KAAKqB,SAASrB,KAAK8e,iBAAiBoC,kBAAiBC,IAE/CA,GAC8C,UAA5CnhB,KAAKiH,eAAeE,WAAWia,UACjCphB,KAAK0b,YAAYC,MAAM,2BAA4B3b,KAAK8e,iBAAiBuC,cAAcF,IAEzFnhB,KAAKyB,QAASrB,UAAUC,IAAI,uBAC5BL,KAAKwa,kBAAmBwE,YAExBhf,KAAK0b,YAAYC,MAAM,gCACvB3b,KAAKyB,QAASrB,UAAUkD,OAAO,uBAC/BtD,KAAKwa,kBAAmByE,UAKX,EAATkC,EAGMR,EAAgBI,YAC1BrB,EAAG1e,iBAAiB,YAAaggB,EAAeD,WAChDJ,EAAgBI,UAAYC,EAAeD,YAJ3CrB,EAAGna,oBAAoB,YAAaob,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATI,EAGMR,EAAgBE,QAC1BnB,EAAG1e,iBAAiB,QAASggB,EAAeH,MAAO,CAAES,SAAS,IAC9DX,EAAgBE,MAAQG,EAAeH,QAJvCnB,EAAGna,oBAAoB,QAASob,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATM,EAIMR,EAAgBC,UAC1BlB,EAAG1e,iBAAiB,UAAWggB,EAAeJ,SAC9CD,EAAgBC,QAAUI,EAAeJ,UALzC5gB,KAAK4b,UAAWrW,oBAAoB,UAAWob,EAAgBC,SAC/DlB,EAAGna,oBAAoB,UAAWob,EAAgBC,SAClDD,EAAgBC,QAAU,MAMb,EAATO,EAGMR,EAAgBG,YAC1BH,EAAgBG,UAAYE,EAAeF,YAH3C9gB,KAAK4b,UAAWrW,oBAAoB,YAAaob,EAAgBG,WACjEH,EAAgBG,UAAY,K,KAMhC9gB,KAAK8e,iBAAiByC,eAAiBvhB,KAAK8e,iBAAiByC,eAK7DvhB,KAAKqB,UAAS,IAAA+B,0BAAyBsc,EAAI,aAAclY,IAOvD,GANAA,EAAG5B,iBACH5F,KAAK2F,QAKA3F,KAAK8e,iBAAiBC,uBAAwB/e,KAAKwa,kBAAmBgH,qBAAqBha,GAiBhG,OAbAmY,EAAUnY,GAMNmZ,EAAgBC,SAClB5gB,KAAK4b,UAAW5a,iBAAiB,UAAW2f,EAAgBC,SAE1DD,EAAgBG,WAClB9gB,KAAK4b,UAAW5a,iBAAiB,YAAa2f,EAAgBG,WAGzD9gB,KAAKihB,OAAOzZ,EAAG,KAGxBxH,KAAKqB,UAAS,IAAA+B,0BAAyBsc,EAAI,SAAUlY,IAEnD,IAAImZ,EAAgBE,MAApB,CAEA,IAAK7gB,KAAKmE,OAAOsd,cAAe,CAG9B,MAAM5D,EAAS7d,KAAK0d,SAAUuC,iBAAiBzY,GAG/C,GAAe,IAAXqW,EACF,OAIF,MAAM6D,EAAW,EAAAzJ,GAAGC,KAAOlY,KAAKgH,YAAYE,gBAAgBya,sBAAwB,IAAM,MAAQna,EAAG0Y,OAAS,EAAI,IAAM,KACxH,IAAI0B,EAAO,GACX,IAAK,IAAIviB,EAAI,EAAGA,EAAIoU,KAAKoO,IAAIhE,GAASxe,IACpCuiB,GAAQF,EAGV,OADA1hB,KAAKgH,YAAYK,iBAAiBua,GAAM,GACjC5hB,KAAKihB,OAAOzZ,GAAI,E,CAKzB,OAAIxH,KAAK0d,SAAUoE,YAAYta,GACtBxH,KAAKihB,OAAOzZ,QADrB,CAxBiC,C,GA2BhC,CAAE8Z,SAAS,KAEdthB,KAAKqB,UAAS,IAAA+B,0BAAyBsc,EAAI,cAAelY,IACxD,IAAIxH,KAAK8e,iBAAiBC,qBAE1B,OADA/e,KAAK0d,SAAUqE,iBAAiBva,GACzBxH,KAAKihB,OAAOzZ,EAAG,GACrB,CAAE8Z,SAAS,KAEdthB,KAAKqB,UAAS,IAAA+B,0BAAyBsc,EAAI,aAAclY,IACvD,IAAIxH,KAAK8e,iBAAiBC,qBAC1B,OAAK/e,KAAK0d,SAAUsE,gBAAgBxa,QAApC,EACSxH,KAAKihB,OAAOzZ,E,GAEpB,CAAE8Z,SAAS,IAChB,CASO,OAAApd,CAAQlC,EAAeC,G,MACT,QAAnB,EAAAjC,KAAKJ,sBAAc,SAAEqiB,YAAYjgB,EAAOC,EAC1C,CAKO,iBAAAiX,CAAkB1R,G,OACG,QAAtB,EAAAxH,KAAKwa,yBAAiB,eAAE0H,mBAAmB1a,IAC7CxH,KAAKyB,QAASrB,UAAUC,IAAI,iBAE5BL,KAAKyB,QAASrB,UAAUkD,OAAO,gBAEnC,CAKQ,WAAA6V,GACDnZ,KAAKgH,YAAYmb,sBACpBniB,KAAKgH,YAAYmb,qBAAsB,EACvCniB,KAAKkE,QAAQlE,KAAKmE,OAAO8H,EAAGjM,KAAKmE,OAAO8H,GAE5C,CAEO,WAAAvG,CAAY0c,EAActE,EAA+BuE,EAAS,G,MACxD,IAAXA,GACF1iB,MAAM+F,YAAY0c,EAAMtE,EAAqBuE,GAC7CriB,KAAKkE,QAAQ,EAAGlE,KAAKS,KAAO,IAEf,QAAb,EAAAT,KAAK0d,gBAAQ,SAAEhY,YAAY0c,EAE/B,CAEO,KAAAtb,CAAM8a,IACX,IAAA9a,OAAM8a,EAAM5hB,KAAK+G,SAAW/G,KAAKgH,YAAahH,KAAKiH,eACrD,CAWO,2BAAAqb,CAA4BC,GACjCviB,KAAKuX,uBAAyBgL,CAChC,CAEO,oBAAAxX,CAAqBC,GAC1B,OAAOhL,KAAKmW,WAAWpL,qBAAqBC,EAC9C,CAEO,uBAAAwX,CAAwBhZ,GAC7B,IAAKxJ,KAAK8c,wBACR,MAAM,IAAIpb,MAAM,iCAElB,MAAM+gB,EAAWziB,KAAK8c,wBAAwBzb,SAASmI,GAEvD,OADAxJ,KAAKkE,QAAQ,EAAGlE,KAAKS,KAAO,GACrBgiB,CACT,CAEO,yBAAAC,CAA0BD,GAC/B,IAAKziB,KAAK8c,wBACR,MAAM,IAAIpb,MAAM,iCAEd1B,KAAK8c,wBAAwB6F,WAAWF,IAC1CziB,KAAKkE,QAAQ,EAAGlE,KAAKS,KAAO,EAEhC,CAEA,WAAWmiB,GACT,OAAO5iB,KAAKmE,OAAOye,OACrB,CAEO,cAAAC,CAAeC,GACpB,OAAO9iB,KAAKmE,OAAO4e,UAAU/iB,KAAKmE,OAAOwV,MAAQ3Z,KAAKmE,OAAO8H,EAAI6W,EACnE,CAEO,kBAAAE,CAAmBC,GACxB,OAAOjjB,KAAKsW,mBAAmB0M,mBAAmBC,EACpD,CAKO,YAAA3I,GACL,QAAOta,KAAKwa,mBAAoBxa,KAAKwa,kBAAkBF,YACzD,CAQO,MAAA7R,CAAOya,EAAgB7C,EAAapf,GACzCjB,KAAKwa,kBAAmB2I,aAAaD,EAAQ7C,EAAKpf,EACpD,CAMO,YAAAmiB,GACL,OAAOpjB,KAAKwa,kBAAoBxa,KAAKwa,kBAAkBpS,cAAgB,EACzE,CAEO,oBAAAib,GACL,GAAKrjB,KAAKwa,mBAAsBxa,KAAKwa,kBAAkBF,aAIvD,MAAO,CACLtY,MAAO,CACLgK,EAAGhM,KAAKwa,kBAAkB8I,eAAgB,GAC1CrX,EAAGjM,KAAKwa,kBAAkB8I,eAAgB,IAE5CrhB,IAAK,CACH+J,EAAGhM,KAAKwa,kBAAkB+I,aAAc,GACxCtX,EAAGjM,KAAKwa,kBAAkB+I,aAAc,IAG9C,CAKO,cAAAC,G,MACiB,QAAtB,EAAAxjB,KAAKwa,yBAAiB,SAAEgJ,gBAC1B,CAKO,SAAAC,G,MACiB,QAAtB,EAAAzjB,KAAKwa,yBAAiB,SAAEiJ,WAC1B,CAEO,WAAAC,CAAY1hB,EAAeC,G,MACV,QAAtB,EAAAjC,KAAKwa,yBAAiB,SAAEkJ,YAAY1hB,EAAOC,EAC7C,CAOU,QAAAgZ,CAASzQ,GAIjB,GAHAxK,KAAKoV,iBAAkB,EACvBpV,KAAKqV,cAAe,EAEhBrV,KAAKuX,yBAAiE,IAAvCvX,KAAKuX,uBAAuB/M,GAC7D,OAAO,EAIT,MAAMmZ,EAA0B3jB,KAAKkV,QAAQtR,OAAS5D,KAAKyJ,QAAQma,iBAAmBpZ,EAAMiW,OAE5F,IAAKkD,IAA4B3jB,KAAKwZ,mBAAoBqK,QAAQrZ,GAIhE,OAHIxK,KAAKyJ,QAAQqa,mBAAqB9jB,KAAKmE,OAAOwV,QAAU3Z,KAAKmE,OAAOM,OACtEzE,KAAK+jB,kBAEA,EAGJJ,GAA0C,SAAdnZ,EAAM5H,KAAgC,aAAd4H,EAAM5H,MAC7D5C,KAAKuV,qBAAsB,GAG7B,MAAM3E,GAAS,IAAAoT,uBAAsBxZ,EAAOxK,KAAKgH,YAAYE,gBAAgBya,sBAAuB3hB,KAAKkV,QAAQtR,MAAO5D,KAAKyJ,QAAQma,iBAIrI,GAFA5jB,KAAKkZ,kBAAkB1O,GAEH,IAAhBoG,EAAOrH,MAAyD,IAAhBqH,EAAOrH,KAAqC,CAC9F,MAAM0a,EAAcjkB,KAAKS,KAAO,EAEhC,OADAT,KAAK0F,YAA4B,IAAhBkL,EAAOrH,MAAuC0a,EAAcA,GACtEjkB,KAAKihB,OAAOzW,GAAO,E,CAO5B,OAJoB,IAAhBoG,EAAOrH,MACTvJ,KAAKyjB,cAGHzjB,KAAKkkB,mBAAmBlkB,KAAKkV,QAAS1K,KAItCoG,EAAOqQ,QAETjhB,KAAKihB,OAAOzW,GAAO,IAGhBoG,EAAOhO,QAMR4H,EAAM5H,MAAQ4H,EAAM+V,UAAY/V,EAAMiW,SAAWjW,EAAM2Z,SAAgC,IAArB3Z,EAAM5H,IAAI3B,QAC1EuJ,EAAM5H,IAAIwhB,WAAW,IAAM,IAAM5Z,EAAM5H,IAAIwhB,WAAW,IAAM,MAK9DpkB,KAAKuV,qBACPvV,KAAKuV,qBAAsB,GACpB,IAML3E,EAAOhO,MAAQ,EAAAqV,GAAGoM,KAAOzT,EAAOhO,MAAQ,EAAAqV,GAAGqM,KAC7CtkB,KAAK+G,SAAUO,MAAQ,IAGzBtH,KAAK0V,OAAOhG,KAAK,CAAE9M,IAAKgO,EAAOhO,IAAK2hB,SAAU/Z,IAC9CxK,KAAKmZ,cACLnZ,KAAKgH,YAAYK,iBAAiBuJ,EAAOhO,KAAK,IAMzC5C,KAAKiH,eAAeE,WAAW+X,kBAAoB1U,EAAMiW,QAAUjW,EAAM+V,QACrEvgB,KAAKihB,OAAOzW,GAAO,QAG5BxK,KAAKoV,iBAAkB,KACzB,CAEQ,kBAAA8O,CAAmBhP,EAAmB1N,GAC5C,MAAMgd,EACHtP,EAAQtR,QAAU5D,KAAKyJ,QAAQma,iBAAmBpc,EAAGiZ,SAAWjZ,EAAG+Y,UAAY/Y,EAAG2c,SAClFjP,EAAQuP,WAAajd,EAAGiZ,QAAUjZ,EAAG+Y,UAAY/Y,EAAG2c,SACpDjP,EAAQuP,WAAajd,EAAGkd,iBAAiB,YAE5C,MAAgB,aAAZld,EAAG+B,KACEib,EAIFA,KAAmBhd,EAAGmd,SAAWnd,EAAGmd,QAAU,GACvD,CAEU,MAAA3J,CAAOxT,GACfxH,KAAKqV,cAAe,EAEhBrV,KAAKuX,yBAA8D,IAApCvX,KAAKuX,uBAAuB/P,KA2NnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAGmd,SACO,KAAfnd,EAAGmd,SACY,KAAfnd,EAAGmd,OACP,CA3NSC,CAAwBpd,IAC3BxH,KAAK2F,QAGP3F,KAAKkZ,kBAAkB1R,GACvBxH,KAAKsV,kBAAmB,EAC1B,CAQU,SAAA4F,CAAU1T,GAClB,IAAI5E,EAIJ,GAFA5C,KAAKsV,kBAAmB,EAEpBtV,KAAKoV,gBACP,OAAO,EAGT,GAAIpV,KAAKuX,yBAA8D,IAApCvX,KAAKuX,uBAAuB/P,GAC7D,OAAO,EAKT,GAFAxH,KAAKihB,OAAOzZ,GAERA,EAAGqd,SACLjiB,EAAM4E,EAAGqd,cACJ,GAAiB,OAAbrd,EAAGsd,YAA+Bja,IAAbrD,EAAGsd,MACjCliB,EAAM4E,EAAGmd,YACJ,IAAiB,IAAbnd,EAAGsd,OAA+B,IAAhBtd,EAAGqd,SAG9B,OAAO,EAFPjiB,EAAM4E,EAAGsd,K,CAKX,SAAKliB,IACF4E,EAAGiZ,QAAUjZ,EAAG+Y,SAAW/Y,EAAG2c,WAAankB,KAAKkkB,mBAAmBlkB,KAAKkV,QAAS1N,KAKpF5E,EAAMmiB,OAAOC,aAAapiB,GAE1B5C,KAAK0V,OAAOhG,KAAK,CAAE9M,MAAK2hB,SAAU/c,IAClCxH,KAAKmZ,cACLnZ,KAAKgH,YAAYK,iBAAiBzE,GAAK,GAEvC5C,KAAKsV,kBAAmB,EAIxBtV,KAAKuV,qBAAsB,EAEpB,GACT,CAQU,WAAA+F,CAAY9T,GAIpB,GAAIA,EAAGoa,MAAyB,eAAjBpa,EAAGyd,aAAgCzd,EAAG0d,WAAallB,KAAKqV,gBAAkBrV,KAAKiH,eAAeE,WAAW+X,iBAAkB,CACxI,GAAIlf,KAAKsV,iBACP,OAAO,EAKTtV,KAAKuV,qBAAsB,EAE3B,MAAM7O,EAAOc,EAAGoa,KAIhB,OAHA5hB,KAAKgH,YAAYK,iBAAiBX,GAAM,GAExC1G,KAAKihB,OAAOzZ,IACL,C,CAGT,OAAO,CACT,CAQO,MAAA0V,CAAOlR,EAAWC,GACnBD,IAAMhM,KAAK4N,MAAQ3B,IAAMjM,KAAKS,KAQlCd,MAAMud,OAAOlR,EAAGC,GANVjM,KAAKyc,mBAAqBzc,KAAKyc,iBAAiB0I,cAClDnlB,KAAKyc,iBAAiB8C,SAM5B,CAEQ,YAAAjI,CAAatL,EAAWC,G,QACT,QAArB,EAAAjM,KAAKyc,wBAAgB,SAAE8C,UAIV,QAAb,EAAAvf,KAAK0d,gBAAQ,SAAEM,gBAAe,EAChC,CAKO,KAAA3U,G,MACL,GAA0B,IAAtBrJ,KAAKmE,OAAOwV,OAAiC,IAAlB3Z,KAAKmE,OAAO8H,EAA3C,CAIAjM,KAAKmE,OAAOihB,kBACZplB,KAAKmE,OAAOE,MAAM2E,IAAI,EAAGhJ,KAAKmE,OAAOE,MAAM6E,IAAIlJ,KAAKmE,OAAOwV,MAAQ3Z,KAAKmE,OAAO8H,IAC/EjM,KAAKmE,OAAOE,MAAMpD,OAAS,EAC3BjB,KAAKmE,OAAOM,MAAQ,EACpBzE,KAAKmE,OAAOwV,MAAQ,EACpB3Z,KAAKmE,OAAO8H,EAAI,EAChB,IAAK,IAAI5M,EAAI,EAAGA,EAAIW,KAAKS,KAAMpB,IAC7BW,KAAKmE,OAAOE,MAAMJ,KAAKjE,KAAKmE,OAAOkhB,aAAa,EAAAC,oBAIlDtlB,KAAK2e,UAAUjP,KAAK,CAAE7K,SAAU7E,KAAKmE,OAAOM,MAAO4d,OAAQ,IAC9C,QAAb,EAAAriB,KAAK0d,gBAAQ,SAAE1G,QACfhX,KAAKkE,QAAQ,EAAGlE,KAAKS,KAAO,E,CAC9B,CAUO,KAAAuW,G,QAKLhX,KAAKyJ,QAAQhJ,KAAOT,KAAKS,KACzBT,KAAKyJ,QAAQmE,KAAO5N,KAAK4N,KACzB,MAAM2U,EAAwBviB,KAAKuX,uBAEnCvX,KAAKkW,SACLvW,MAAMqX,QACgB,QAAtB,EAAAhX,KAAKwa,yBAAiB,SAAExD,QACxBhX,KAAKsW,mBAAmBU,QACX,QAAb,EAAAhX,KAAK0d,gBAAQ,SAAE1G,QAGfhX,KAAKuX,uBAAyBgL,EAG9BviB,KAAKkE,QAAQ,EAAGlE,KAAKS,KAAO,EAC9B,CAEO,iBAAA8kB,G,MACc,QAAnB,EAAAvlB,KAAKJ,sBAAc,SAAE2lB,mBACvB,CAEQ,YAAAzO,G,OACU,QAAZ,EAAA9W,KAAKyB,eAAO,eAAErB,UAAU0L,SAAS,UACnC9L,KAAKgH,YAAYK,iBAAiB,EAAA4Q,GAAGC,IAAM,MAE3ClY,KAAKgH,YAAYK,iBAAiB,EAAA4Q,GAAGC,IAAM,KAE/C,CAEQ,qBAAAhB,CAAsB3N,GAC5B,GAAKvJ,KAAKJ,eAIV,OAAQ2J,GACN,KAAK,EAAAic,yBAAyBC,oBAC5B,MAAMC,EAAc1lB,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOD,MAAMqf,QAAQ,GACtEC,EAAe5lB,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOH,OAAOuf,QAAQ,GAC9E3lB,KAAKgH,YAAYK,iBAAiB,GAAG,EAAA4Q,GAAGC,SAAS0N,KAAgBF,MACjE,MACF,KAAK,EAAAF,yBAAyBK,qBAC5B,MAAM7L,EAAYha,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MAAMqf,QAAQ,GAClE7L,EAAa9Z,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OAAOuf,QAAQ,GAC1E3lB,KAAKgH,YAAYK,iBAAiB,GAAG,EAAA4Q,GAAGC,SAAS4B,KAAcE,MAGrE,CAGO,MAAAiH,CAAOzZ,EAAWse,GACvB,GAAK9lB,KAAKyJ,QAAQsc,cAAiBD,EAKnC,OAFAte,EAAG5B,iBACH4B,EAAGa,mBACI,CACT,EA7tCF,Y,4FCnDA,2BAYE,WAAA5I,CACUoT,EACSmT,EArBgB,KAoBzB,KAAAnT,gBAAAA,EACS,KAAAmT,qBAAAA,EARX,KAAAC,eAAiB,EAEjB,KAAAC,6BAA8B,CAQtC,CAEO,OAAAvc,GACD3J,KAAKmmB,mBACPC,aAAapmB,KAAKmmB,kBAEtB,CAEO,OAAAjiB,CAAQkP,EAA8BC,EAA4BC,GACvEtT,KAAKuT,UAAYD,EAEjBF,OAAwBvI,IAAbuI,EAAyBA,EAAW,EAC/CC,OAAoBxI,IAAXwI,EAAuBA,EAASrT,KAAKuT,UAAY,EAE1DvT,KAAKwT,eAA+B3I,IAAnB7K,KAAKwT,UAA0BC,KAAKC,IAAI1T,KAAKwT,UAAWJ,GAAYA,EACrFpT,KAAK2T,aAA2B9I,IAAjB7K,KAAK2T,QAAwBF,KAAKG,IAAI5T,KAAK2T,QAASN,GAAUA,EAI7E,MAAMgT,EAA6BC,KAAKC,MACxC,GAAIF,EAAqBrmB,KAAKimB,gBAAkBjmB,KAAKgmB,qBAEnDhmB,KAAKimB,eAAiBI,EACtBrmB,KAAKmT,qBACA,IAAKnT,KAAKkmB,4BAA6B,CAE5C,MAAMM,EAAUH,EAAqBrmB,KAAKimB,eACpCQ,EAAkCzmB,KAAKgmB,qBAAuBQ,EACpExmB,KAAKkmB,6BAA8B,EAEnClmB,KAAKmmB,kBAAoBjjB,OAAOY,YAAW,KACzC9D,KAAKimB,eAAiBK,KAAKC,MAC3BvmB,KAAKmT,gBACLnT,KAAKkmB,6BAA8B,EACnClmB,KAAKmmB,uBAAoBtb,CAAS,GACjC4b,E,CAEP,CAEQ,aAAAtT,GAEN,QAAuBtI,IAAnB7K,KAAKwT,gBAA4C3I,IAAjB7K,KAAK2T,cAA4C9I,IAAnB7K,KAAKuT,UACrE,OAIF,MAAMvR,EAAQyR,KAAKG,IAAI5T,KAAKwT,UAAW,GACjCvR,EAAMwR,KAAKC,IAAI1T,KAAK2T,QAAS3T,KAAKuT,UAAY,GAGpDvT,KAAKwT,eAAY3I,EACjB7K,KAAK2T,aAAU9I,EAGf7K,KAAK6S,gBAAgB7Q,EAAOC,EAC9B,E,+fC9EF,eACA,UAEA,UACA,UAGA,UAcO,IAAM0b,EAAQ,WAAd,cAAuB,EAAAne,WA4B5B,WAAAC,CACmBwc,EACAyK,EACD,EACC,EACC,EACF,EACK,EACNC,GAEfhnB,QATiB,KAAAsc,iBAAAA,EACA,KAAAyK,YAAAA,EACgB,KAAA3c,eAAAA,EACC,KAAAyG,gBAAAA,EACC,KAAAiM,iBAAAA,EACF,KAAA7c,eAAAA,EACK,KAAAyc,oBAAAA,EAlCjC,KAAAuK,eAAyB,EACxB,KAAAC,kBAA4B,EAC5B,KAAAC,yBAAmC,EACnC,KAAAC,0BAAoC,EACpC,KAAAC,4BAAsC,EACtC,KAAAC,0BAAoC,EACpC,KAAAC,YAAsB,EACtB,KAAAC,eAAyB,EAOzB,KAAAC,oBAA8B,EAE9B,KAAAC,uBAAwC,KACxC,KAAAC,wBAAkC,EAClC,KAAAC,mBAAyC,CAC/CC,UAAW,EACXC,QAAS,EACT1iB,QAAS,GAGM,KAAA2iB,sBAAwB1nB,KAAKqB,SAAS,IAAI,EAAAiJ,cAC3C,KAAAsT,qBAAuB5d,KAAK0nB,sBAAsBld,MAiBhExK,KAAK4mB,eAAkB5mB,KAAKic,iBAAiB0L,YAAc3nB,KAAK0mB,YAAYiB,aAvD9C,GAwD9B3nB,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAKic,iBAAkB,SAAUjc,KAAK4nB,cAAcpmB,KAAKxB,QAGhGA,KAAK6nB,cAAgB7nB,KAAK+J,eAAe5F,OACzCnE,KAAKqB,SAASrB,KAAK+J,eAAe4O,QAAQmP,kBAAiBjnB,GAAKb,KAAK6nB,cAAgBhnB,EAAEknB,gBACvF/nB,KAAKgoB,kBAAoBhoB,KAAKJ,eAAeqG,WAC7CjG,KAAKqB,SAASrB,KAAKJ,eAAemD,oBAAmBlC,GAAKb,KAAKgoB,kBAAoBnnB,KAEnFb,KAAKioB,mBAAmBtB,EAAa5O,QACrC/X,KAAKqB,SAASslB,EAAauB,gBAAernB,GAAKb,KAAKioB,mBAAmBpnB,MACvEb,KAAKqB,SAASrB,KAAKwQ,gBAAgB2O,uBAAuB,cAAc,IAAMnf,KAAKge,oBAGnFla,YAAW,IAAM9D,KAAKge,kBACxB,CAEQ,kBAAAiK,CAAmBlQ,GACzB/X,KAAKic,iBAAiB5V,MAAM8hB,gBAAkBpQ,EAAOqQ,WAAWliB,GAClE,CAEO,KAAA8Q,GACLhX,KAAK6mB,kBAAoB,EACzB7mB,KAAK8mB,yBAA2B,EAChC9mB,KAAK+mB,0BAA4B,EACjC/mB,KAAKgnB,4BAA8B,EACnChnB,KAAKinB,0BAA4B,EACjCjnB,KAAKknB,YAAc,EACnBlnB,KAAKmnB,eAAiB,EAEtBnnB,KAAKqc,oBAAoBnZ,OAAOgQ,uBAAsB,IAAMlT,KAAKge,kBACnE,CAMQ,QAAAqK,CAASC,GACf,GAAIA,EAKF,OAJAtoB,KAAKmT,qBAC+B,OAAhCnT,KAAKqnB,wBACPrnB,KAAKqc,oBAAoBnZ,OAAO8P,qBAAqBhT,KAAKqnB,yBAI1B,OAAhCrnB,KAAKqnB,yBACPrnB,KAAKqnB,uBAAyBrnB,KAAKqc,oBAAoBnZ,OAAOgQ,uBAAsB,IAAMlT,KAAKmT,kBAEnG,CAEQ,aAAAA,GACN,GAAInT,KAAKyc,iBAAiBrW,OAAS,EAAG,CACpCpG,KAAK6mB,kBAAoB7mB,KAAKJ,eAAeqG,WAAWsiB,OAAOpiB,KAAKC,OAASpG,KAAKqc,oBAAoBmM,IACtGxoB,KAAK8mB,yBAA2B9mB,KAAKJ,eAAeqG,WAAWsiB,OAAOpiB,KAAKC,OAC3EpG,KAAKgnB,4BAA8BhnB,KAAKic,iBAAiBwM,aACzD,MAAMC,EAAkBjV,KAAKkV,MAAM3oB,KAAK6mB,kBAAoB7mB,KAAK+mB,4BAA8B/mB,KAAKgnB,4BAA8BhnB,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOH,QACxKpG,KAAKinB,4BAA8ByB,IACrC1oB,KAAKinB,0BAA4ByB,EACjC1oB,KAAK0mB,YAAYrgB,MAAMD,OAASpG,KAAKinB,0BAA4B,K,CAKrE,MAAM2B,EAAY5oB,KAAK+J,eAAe5F,OAAOM,MAAQzE,KAAK6mB,kBACtD7mB,KAAKic,iBAAiB2M,YAAcA,IAGtC5oB,KAAKsnB,wBAAyB,EAC9BtnB,KAAKic,iBAAiB2M,UAAYA,GAGpC5oB,KAAKqnB,uBAAyB,IAChC,CAKO,cAAArJ,CAAesK,GAAqB,GAEzC,GAAItoB,KAAK+mB,4BAA8B/mB,KAAK+J,eAAe5F,OAAOE,MAAMpD,OAGtE,OAFAjB,KAAK+mB,0BAA4B/mB,KAAK+J,eAAe5F,OAAOE,MAAMpD,YAClEjB,KAAKqoB,SAASC,GAKZtoB,KAAKgnB,8BAAgChnB,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOH,QAM/EpG,KAAKmnB,iBAAmBnnB,KAAK6nB,cAAcpjB,MAAQzE,KAAK6mB,mBAMxD7mB,KAAKgoB,kBAAkBO,OAAOpiB,KAAKC,SAAWpG,KAAK8mB,0BAXrD9mB,KAAKqoB,SAASC,EAelB,CAOQ,aAAAV,CAAcpgB,GAMpB,GAJAxH,KAAKmnB,eAAiBnnB,KAAKic,iBAAiB2M,WAIvC5oB,KAAKic,iBAAiB4M,aACzB,OAIF,GAAI7oB,KAAKsnB,uBAIP,OAHAtnB,KAAKsnB,wBAAyB,OAE9BtnB,KAAK0nB,sBAAsBhY,KAAK,CAAEmO,OAAQ,EAAGC,qBAAqB,IAIpE,MACMgL,EADSrV,KAAKkV,MAAM3oB,KAAKmnB,eAAiBnnB,KAAK6mB,mBAC/B7mB,KAAK+J,eAAe5F,OAAOM,MACjDzE,KAAK0nB,sBAAsBhY,KAAK,CAAEmO,OAAQiL,EAAMhL,qBAAqB,GACvE,CAEQ,aAAAiL,GAEN,GAAI/oB,KAAKgpB,cAAmD,IAApChpB,KAAKunB,mBAAmBE,SAAqD,IAApCznB,KAAKunB,mBAAmBxiB,OACvF,OAIF,MAAMkkB,EAAUjpB,KAAKkpB,uBACrBlpB,KAAKic,iBAAiB2M,UAAY5oB,KAAKunB,mBAAmBE,OAAShU,KAAKkV,MAAMM,GAAWjpB,KAAKunB,mBAAmBxiB,OAAS/E,KAAKunB,mBAAmBE,SAG9IwB,EAAU,EACZjpB,KAAKqc,oBAAoBnZ,OAAOgQ,uBAAsB,IAAMlT,KAAK+oB,kBAEjE/oB,KAAKmpB,yBAET,CAEQ,oBAAAD,GACN,OAAKlpB,KAAKwQ,gBAAgBrJ,WAAWiiB,sBAAyBppB,KAAKunB,mBAAmBC,UAG/E/T,KAAKG,IAAIH,KAAKC,KAAK4S,KAAKC,MAAQvmB,KAAKunB,mBAAmBC,WAAaxnB,KAAKwQ,gBAAgBrJ,WAAWiiB,qBAAsB,GAAI,GAF7H,CAGX,CAEQ,uBAAAD,GACNnpB,KAAKunB,mBAAmBC,UAAY,EACpCxnB,KAAKunB,mBAAmBE,QAAU,EAClCznB,KAAKunB,mBAAmBxiB,QAAU,CACpC,CAOQ,aAAAskB,CAAc7hB,EAAWqW,GAC/B,MAAMyL,EAAmBtpB,KAAKic,iBAAiB2M,UAAY5oB,KAAKgnB,4BAChE,QAAKnJ,EAAS,GAAyC,IAApC7d,KAAKic,iBAAiB2M,WACtC/K,EAAS,GAAKyL,EAAmBtpB,KAAKinB,6BACnCzf,EAAG+hB,YACL/hB,EAAG5B,kBAEE,EAGX,CAQO,WAAAkc,CAAYta,GACjB,MAAMqW,EAAS7d,KAAKwpB,mBAAmBhiB,GACvC,OAAe,IAAXqW,IAGC7d,KAAKwQ,gBAAgBrJ,WAAWiiB,sBAGnCppB,KAAKunB,mBAAmBC,UAAYlB,KAAKC,MACrCvmB,KAAKkpB,uBAAyB,GAChClpB,KAAKunB,mBAAmBE,OAASznB,KAAKic,iBAAiB2M,WACf,IAApC5oB,KAAKunB,mBAAmBxiB,OAC1B/E,KAAKunB,mBAAmBxiB,OAAS/E,KAAKic,iBAAiB2M,UAAY/K,EAEnE7d,KAAKunB,mBAAmBxiB,QAAU8Y,EAEpC7d,KAAKunB,mBAAmBxiB,OAAS0O,KAAKG,IAAIH,KAAKC,IAAI1T,KAAKunB,mBAAmBxiB,OAAQ/E,KAAKic,iBAAiBwN,cAAe,GACxHzpB,KAAK+oB,iBAEL/oB,KAAKmpB,2BAbPnpB,KAAKic,iBAAiB2M,WAAa/K,EAgB9B7d,KAAKqpB,cAAc7hB,EAAIqW,GAChC,CAEO,WAAAnY,CAAY0c,GACjB,GAAKpiB,KAAKwQ,gBAAgBrJ,WAAWiiB,qBAE9B,CACL,MAAMvL,EAASuE,EAAOpiB,KAAK6mB,kBAC3B7mB,KAAKunB,mBAAmBC,UAAYlB,KAAKC,MACrCvmB,KAAKkpB,uBAAyB,GAChClpB,KAAKunB,mBAAmBE,OAASznB,KAAKic,iBAAiB2M,UACvD5oB,KAAKunB,mBAAmBxiB,OAAS/E,KAAKunB,mBAAmBE,OAAS5J,EAClE7d,KAAKunB,mBAAmBxiB,OAAS0O,KAAKG,IAAIH,KAAKC,IAAI1T,KAAKunB,mBAAmBxiB,OAAQ/E,KAAKic,iBAAiBwN,cAAe,GACxHzpB,KAAK+oB,iBAEL/oB,KAAKmpB,yB,MAVPnpB,KAAK0nB,sBAAsBhY,KAAK,CAAEmO,OAAQuE,EAAMtE,qBAAqB,GAazE,CAEQ,kBAAA0L,CAAmBhiB,GAEzB,GAAkB,IAAdA,EAAG0Y,QAAgB1Y,EAAGkZ,SACxB,OAAO,EAIT,IAAI7C,EAAS7d,KAAK0pB,qBAAqBliB,EAAG0Y,OAAQ1Y,GAMlD,OALIA,EAAGmiB,YAAcC,WAAWC,eAC9BhM,GAAU7d,KAAK6mB,kBACNrf,EAAGmiB,YAAcC,WAAWE,iBACrCjM,GAAU7d,KAAK6mB,kBAAoB7mB,KAAK+J,eAAetJ,MAElDod,CACT,CAGO,iBAAAkM,CAAkBC,EAAmBC,G,MAC1C,IACIC,EADAC,EAAsB,GAE1B,MAAMC,EAAgC,GAChCnoB,EAAMgoB,QAAAA,EAAWjqB,KAAK+J,eAAe5F,OAAOE,MAAMpD,OAClDoD,EAAQrE,KAAK+J,eAAe5F,OAAOE,MACzC,IAAK,IAAIhF,EAAI2qB,EAAW3qB,EAAI4C,EAAK5C,IAAK,CACpC,MAAMsR,EAAOtM,EAAM6E,IAAI7J,GACvB,IAAKsR,EACH,SAEF,MAAM0Z,EAA4B,QAAhB,EAAAhmB,EAAM6E,IAAI7J,EAAI,UAAE,eAAEgrB,UAEpC,GADAF,GAAexZ,EAAK2Z,mBAAmBD,IAClCA,GAAahrB,IAAMgF,EAAMpD,OAAS,EAAG,CACxC,MAAMspB,EAAMrqB,SAASC,cAAc,OACnCoqB,EAAI9mB,YAAc0mB,EAClBC,EAAenmB,KAAKsmB,GAChBJ,EAAYlpB,OAAS,IACvBipB,EAAgBK,GAElBJ,EAAc,E,EAGlB,MAAO,CAAEC,iBAAgBF,gBAC3B,CAOO,gBAAAjK,CAAiBzY,GAEtB,GAAkB,IAAdA,EAAG0Y,QAAgB1Y,EAAGkZ,SACxB,OAAO,EAIT,IAAI7C,EAAS7d,KAAK0pB,qBAAqBliB,EAAG0Y,OAAQ1Y,GASlD,OARIA,EAAGmiB,YAAcC,WAAWY,iBAC9B3M,GAAU7d,KAAK6mB,kBAAoB,EACnC7mB,KAAKonB,qBAAuBvJ,EAC5BA,EAASpK,KAAKgX,MAAMhX,KAAKoO,IAAI7hB,KAAKonB,uBAAyBpnB,KAAKonB,oBAAsB,EAAI,GAAK,GAC/FpnB,KAAKonB,qBAAuB,GACnB5f,EAAGmiB,YAAcC,WAAWE,iBACrCjM,GAAU7d,KAAK+J,eAAetJ,MAEzBod,CACT,CAEQ,oBAAA6L,CAAqB7L,EAAgBrW,GAC3C,MAAMkjB,EAAW1qB,KAAKwQ,gBAAgBrJ,WAAWwjB,mBAEjD,MAAkB,QAAbD,GAAsBljB,EAAGiZ,QACd,SAAbiK,GAAuBljB,EAAG+Y,SACb,UAAbmK,GAAwBljB,EAAGkZ,SACrB7C,EAAS7d,KAAKwQ,gBAAgBrJ,WAAWyjB,sBAAwB5qB,KAAKwQ,gBAAgBrJ,WAAW0jB,kBAGnGhN,EAAS7d,KAAKwQ,gBAAgBrJ,WAAW0jB,iBAClD,CAMO,gBAAA9I,CAAiBva,GACtBxH,KAAKknB,YAAc1f,EAAGsjB,QAAQ,GAAGC,KACnC,CAMO,eAAA/I,CAAgBxa,GACrB,MAAM0Y,EAASlgB,KAAKknB,YAAc1f,EAAGsjB,QAAQ,GAAGC,MAEhD,OADA/qB,KAAKknB,YAAc1f,EAAGsjB,QAAQ,GAAGC,MAClB,IAAX7K,IAGJlgB,KAAKic,iBAAiB2M,WAAa1I,EAC5BlgB,KAAKqpB,cAAc7hB,EAAI0Y,GAChC,G,WAlXWvC,EAAQ,GA+BhB,MAAAtN,gBACA,MAAAqC,iBACA,MAAAiK,kBACA,MAAAnW,gBACA,MAAAgW,qBACA,MAAAK,gBApCQc,E,+gBCrBb,gBACA,UACA,SACA,UAEO,IAAMiB,EAAwB,2BAA9B,cAAuC,EAAApf,WAQ5C,WAAAC,CACmBurB,EACD,EACI,EACJ,GAEhBrrB,QALiB,KAAAqrB,eAAAA,EACgB,KAAAjhB,eAAAA,EACI,KAAAuM,mBAAAA,EACJ,KAAA1W,eAAAA,EAVlB,KAAAqrB,oBAA6D,IAAIte,IAG1E,KAAAue,oBAA8B,EAC9B,KAAAC,oBAA8B,EAUpCnrB,KAAKorB,WAAalrB,SAASC,cAAc,OACzCH,KAAKorB,WAAWhrB,UAAUC,IAAI,8BAC9BL,KAAKgrB,eAAerqB,YAAYX,KAAKorB,YAErCprB,KAAKqB,SAASrB,KAAKJ,eAAeyP,0BAAyB,IAAMrP,KAAKqrB,2BACtErrB,KAAKqB,SAASrB,KAAKJ,eAAemD,oBAAmB,KACnD/C,KAAKmrB,oBAAqB,EAC1BnrB,KAAKsrB,eAAe,KAEtBtrB,KAAKqB,UAAS,IAAA+B,0BAAyBF,OAAQ,UAAU,IAAMlD,KAAKsrB,mBACpEtrB,KAAKqB,SAASrB,KAAK+J,eAAe4O,QAAQmP,kBAAiB,KACzD9nB,KAAKkrB,mBAAqBlrB,KAAK+J,eAAe5F,SAAWnE,KAAK+J,eAAe4O,QAAQ6H,GAAG,KAE1FxgB,KAAKqB,SAASrB,KAAKsW,mBAAmBiV,wBAAuB,IAAMvrB,KAAKsrB,mBACxEtrB,KAAKqB,SAASrB,KAAKsW,mBAAmBkV,qBAAoBC,GAAczrB,KAAK0rB,kBAAkBD,MAC/FzrB,KAAKqB,UAAS,IAAAgC,eAAa,KACzBrD,KAAKorB,WAAW9nB,SAChBtD,KAAKirB,oBAAoB5hB,OAAO,IAEpC,CAEQ,aAAAiiB,QACuBzgB,IAAzB7K,KAAK+S,kBAGT/S,KAAK+S,gBAAkB/S,KAAKJ,eAAeqT,oBAAmB,KAC5DjT,KAAKqrB,wBACLrrB,KAAK+S,qBAAkBlI,CAAS,IAEpC,CAEQ,qBAAAwgB,GACN,IAAK,MAAMI,KAAczrB,KAAKsW,mBAAmB3H,YAC/C3O,KAAK2rB,kBAAkBF,GAEzBzrB,KAAKmrB,oBAAqB,CAC5B,CAEQ,iBAAAQ,CAAkBF,GACxBzrB,KAAK4rB,cAAcH,GACfzrB,KAAKmrB,oBACPnrB,KAAK6rB,kBAAkBJ,EAE3B,CAEQ,cAAAK,CAAeL,G,QACrB,MAAMhqB,EAAUvB,SAASC,cAAc,OACvCsB,EAAQrB,UAAUC,IAAI,oBACtBoB,EAAQrB,UAAU+O,OAAO,6BAA6D,SAAZ,QAAnB,EAAAsc,aAAU,EAAVA,EAAYhiB,eAAO,eAAEsiB,QAC5EtqB,EAAQ4E,MAAMC,MAAQ,GAAGmN,KAAKkV,OAAO8C,EAAWhiB,QAAQnD,OAAS,GAAKtG,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,WAC9G7E,EAAQ4E,MAAMD,QAAaqlB,EAAWhiB,QAAQrD,QAAU,GAAKpG,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OAA9E,KACvB3E,EAAQ4E,MAAMyB,KAAU2jB,EAAWO,OAAOrb,KAAO3Q,KAAK+J,eAAe4O,QAAQC,OAAOnU,OAASzE,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OAAjH,KACpB3E,EAAQ4E,MAAM8T,WAAa,GAAGna,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,WAEtE,MAAM4F,EAAwB,QAApB,EAAAyf,EAAWhiB,QAAQuC,SAAC,QAAI,EAOlC,OANIA,GAAKA,EAAIhM,KAAK+J,eAAe6D,OAE/BnM,EAAQ4E,MAAM4lB,QAAU,QAE1BjsB,KAAK6rB,kBAAkBJ,EAAYhqB,GAE5BA,CACT,CAEQ,aAAAmqB,CAAcH,GACpB,MAAM9a,EAAO8a,EAAWO,OAAOrb,KAAO3Q,KAAK+J,eAAe4O,QAAQC,OAAOnU,MACzE,GAAIkM,EAAO,GAAKA,GAAQ3Q,KAAK+J,eAAetJ,KAEtCgrB,EAAWhqB,UACbgqB,EAAWhqB,QAAQ4E,MAAM4lB,QAAU,OACnCR,EAAWS,gBAAgBxc,KAAK+b,EAAWhqB,cAExC,CACL,IAAIA,EAAUzB,KAAKirB,oBAAoB/hB,IAAIuiB,GACtChqB,IACHA,EAAUzB,KAAK8rB,eAAeL,GAC9BA,EAAWhqB,QAAUA,EACrBzB,KAAKirB,oBAAoBjiB,IAAIyiB,EAAYhqB,GACzCzB,KAAKorB,WAAWzqB,YAAYc,GAC5BgqB,EAAWU,WAAU,KACnBnsB,KAAKirB,oBAAoBmB,OAAOX,GAChChqB,EAAS6B,QAAQ,KAGrB7B,EAAQ4E,MAAMyB,IAAS6I,EAAO3Q,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OAAlD,KACpB3E,EAAQ4E,MAAM4lB,QAAUjsB,KAAKkrB,mBAAqB,OAAS,QAC3DO,EAAWS,gBAAgBxc,KAAKjO,E,CAEpC,CAEQ,iBAAAoqB,CAAkBJ,EAAiChqB,EAAmCgqB,EAAWhqB,S,MACvG,IAAKA,EACH,OAEF,MAAMuK,EAAwB,QAApB,EAAAyf,EAAWhiB,QAAQuC,SAAC,QAAI,EACY,WAAzCyf,EAAWhiB,QAAQ4iB,QAAU,QAChC5qB,EAAQ4E,MAAMimB,MAAQtgB,EAAOA,EAAIhM,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MAA/C,KAA2D,GAErF7E,EAAQ4E,MAAMuB,KAAOoE,EAAOA,EAAIhM,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MAA/C,KAA2D,EAExF,CAEQ,iBAAAolB,CAAkBD,G,MACgB,QAAxC,EAAAzrB,KAAKirB,oBAAoB/hB,IAAIuiB,UAAW,SAAEnoB,SAC1CtD,KAAKirB,oBAAoBmB,OAAOX,GAChCA,EAAW9hB,SACb,G,2BA1HWiV,EAAwB,GAUhC,MAAAvO,gBACA,MAAAoG,oBACA,MAAAjQ,iBAZQoY,E,wFCqBb,qCACU,KAAA2N,OAAuB,GAKvB,KAAAC,UAA0B,GAC1B,KAAAC,eAAiB,EAEjB,KAAAC,aAA+C,CACrDC,KAAM,EACN/kB,KAAM,EACNglB,OAAQ,EACRN,MAAO,EAwEX,CArEE,SAAWO,GAGT,OADA7sB,KAAKwsB,UAAUvrB,OAASwS,KAAKC,IAAI1T,KAAKwsB,UAAUvrB,OAAQjB,KAAKusB,OAAOtrB,QAC7DjB,KAAKusB,MACd,CAEO,KAAAljB,GACLrJ,KAAKusB,OAAOtrB,OAAS,EACrBjB,KAAKysB,eAAiB,CACxB,CAEO,aAAAK,CAAcrB,GACnB,GAAKA,EAAWhiB,QAAQsjB,qBAAxB,CAGA,IAAK,MAAMC,KAAKhtB,KAAKusB,OACnB,GAAIS,EAAEnV,QAAU4T,EAAWhiB,QAAQsjB,qBAAqBlV,OACpDmV,EAAEnoB,WAAa4mB,EAAWhiB,QAAQsjB,qBAAqBloB,SAAU,CACnE,GAAI7E,KAAKitB,oBAAoBD,EAAGvB,EAAWO,OAAOrb,MAChD,OAEF,GAAI3Q,KAAKktB,oBAAoBF,EAAGvB,EAAWO,OAAOrb,KAAM8a,EAAWhiB,QAAQsjB,qBAAqBloB,UAE9F,YADA7E,KAAKmtB,eAAeH,EAAGvB,EAAWO,OAAOrb,K,CAM/C,GAAI3Q,KAAKysB,eAAiBzsB,KAAKwsB,UAAUvrB,OAMvC,OALAjB,KAAKwsB,UAAUxsB,KAAKysB,gBAAgB5U,MAAQ4T,EAAWhiB,QAAQsjB,qBAAqBlV,MACpF7X,KAAKwsB,UAAUxsB,KAAKysB,gBAAgB5nB,SAAW4mB,EAAWhiB,QAAQsjB,qBAAqBloB,SACvF7E,KAAKwsB,UAAUxsB,KAAKysB,gBAAgBW,gBAAkB3B,EAAWO,OAAOrb,KACxE3Q,KAAKwsB,UAAUxsB,KAAKysB,gBAAgBY,cAAgB5B,EAAWO,OAAOrb,UACtE3Q,KAAKusB,OAAOtoB,KAAKjE,KAAKwsB,UAAUxsB,KAAKysB,mBAIvCzsB,KAAKusB,OAAOtoB,KAAK,CACf4T,MAAO4T,EAAWhiB,QAAQsjB,qBAAqBlV,MAC/ChT,SAAU4mB,EAAWhiB,QAAQsjB,qBAAqBloB,SAClDuoB,gBAAiB3B,EAAWO,OAAOrb,KACnC0c,cAAe5B,EAAWO,OAAOrb,OAEnC3Q,KAAKwsB,UAAUvoB,KAAKjE,KAAKusB,OAAOvsB,KAAKusB,OAAOtrB,OAAS,IACrDjB,KAAKysB,gB,CACP,CAEO,UAAAa,CAAWC,GAChBvtB,KAAK0sB,aAAea,CACtB,CAEQ,mBAAAN,CAAoBO,EAAkB7c,GAC5C,OACEA,GAAQ6c,EAAKJ,iBACbzc,GAAQ6c,EAAKH,aAEjB,CAEQ,mBAAAH,CAAoBM,EAAkB7c,EAAc9L,GAC1D,OACG8L,GAAQ6c,EAAKJ,gBAAkBptB,KAAK0sB,aAAa7nB,GAAY,SAC7D8L,GAAQ6c,EAAKH,cAAgBrtB,KAAK0sB,aAAa7nB,GAAY,OAEhE,CAEQ,cAAAsoB,CAAeK,EAAkB7c,GACvC6c,EAAKJ,gBAAkB3Z,KAAKC,IAAI8Z,EAAKJ,gBAAiBzc,GACtD6c,EAAKH,cAAgB5Z,KAAKG,IAAI4Z,EAAKH,cAAe1c,EACpD,E,4gBC9GF,gBACA,UACA,UACA,SACA,UAIM8c,EAAa,CACjBd,KAAM,EACN/kB,KAAM,EACNglB,OAAQ,EACRN,MAAO,GAEHoB,EAAY,CAChBf,KAAM,EACN/kB,KAAM,EACNglB,OAAQ,EACRN,MAAO,GAEHqB,EAAQ,CACZhB,KAAM,EACN/kB,KAAM,EACNglB,OAAQ,EACRN,MAAO,GAGF,IAAMhN,EAAqB,wBAA3B,cAAoC,EAAA9f,WAIzC,UAAYouB,GACV,OAAO5tB,KAAKwQ,gBAAgB/G,QAAQ2V,oBAAsB,CAC5D,CASA,WAAA3f,CACmBwc,EACA+O,EACD,EACI,EACJ,EACC,EACI,G,MAErBrrB,QARiB,KAAAsc,iBAAAA,EACA,KAAA+O,eAAAA,EACgB,KAAAjhB,eAAAA,EACI,KAAAuM,mBAAAA,EACJ,KAAA1W,eAAAA,EACC,KAAA4Q,gBAAAA,EACI,KAAAqd,mBAAAA,EAnBvB,KAAAC,gBAAmC,IAAI,EAAAC,eAMhD,KAAAC,yBAA+C,EAC/C,KAAAC,qBAA2C,EAC3C,KAAAC,uBAAiC,EAcvCluB,KAAKmuB,QAAUjuB,SAASC,cAAc,UACtCH,KAAKmuB,QAAQ/tB,UAAUC,IAAI,mCAC3BL,KAAKouB,2BAC8B,QAAnC,EAAApuB,KAAKic,iBAAiBoS,qBAAa,SAAEC,aAAatuB,KAAKmuB,QAASnuB,KAAKic,kBACrE,MAAMsS,EAAMvuB,KAAKmuB,QAAQK,WAAW,MACpC,IAAKD,EACH,MAAM,IAAI7sB,MAAM,sBAEhB1B,KAAKyuB,KAAOF,EAEdvuB,KAAK0uB,+BACL1uB,KAAK2uB,iCACL3uB,KAAK4uB,oCACL5uB,KAAKqB,UAAS,IAAAgC,eAAa,K,MACb,QAAZ,EAAArD,KAAKmuB,eAAO,SAAE7qB,QAAQ,IAE1B,CAKQ,4BAAAorB,GACN1uB,KAAKqB,SAASrB,KAAKsW,mBAAmBiV,wBAAuB,IAAMvrB,KAAKsrB,mBAAczgB,GAAW,MACjG7K,KAAKqB,SAASrB,KAAKsW,mBAAmBkV,qBAAoB,IAAMxrB,KAAKsrB,mBAAczgB,GAAW,KAChG,CAMQ,8BAAA8jB,GACN3uB,KAAKqB,SAASrB,KAAKJ,eAAeyP,0BAAyB,IAAMrP,KAAKsrB,mBACtEtrB,KAAKqB,SAASrB,KAAK+J,eAAe4O,QAAQmP,kBAAiB,KACzD9nB,KAAKmuB,QAAS9nB,MAAM4lB,QAAUjsB,KAAK+J,eAAe5F,SAAWnE,KAAK+J,eAAe4O,QAAQ6H,IAAM,OAAS,OAAO,KAEjHxgB,KAAKqB,SAASrB,KAAK+J,eAAe7H,UAAS,KACrClC,KAAKkuB,yBAA2BluB,KAAK+J,eAAe4O,QAAQkW,OAAOxqB,MAAMpD,SAC3EjB,KAAK8uB,8BACL9uB,KAAK+uB,2B,IAGX,CAKQ,iCAAAH,GAEN5uB,KAAKqB,SAASrB,KAAKJ,eAAekC,UAAS,KACpC9B,KAAKgvB,kBAAoBhvB,KAAKgvB,mBAAqBhvB,KAAKgrB,eAAeiE,eAC1EjvB,KAAKsrB,eAAc,GACnBtrB,KAAKgvB,iBAAmBhvB,KAAKgrB,eAAeiE,a,KAIhDjvB,KAAKqB,SAASrB,KAAKwQ,gBAAgB2O,uBAAuB,sBAAsB,IAAMnf,KAAKsrB,eAAc,MAEzGtrB,KAAKqB,UAAS,IAAA+B,0BAAyBpD,KAAK6tB,mBAAmB3qB,OAAQ,UAAU,IAAMlD,KAAKsrB,eAAc,MAE1GtrB,KAAKsrB,eAAc,EACrB,CAEQ,qBAAA4D,GAEN,MAAMC,EAAa1b,KAAKgX,MAAMzqB,KAAKmuB,QAAQ7nB,MAAQ,GAC7C8oB,EAAa3b,KAAK4b,KAAKrvB,KAAKmuB,QAAQ7nB,MAAQ,GAClDonB,EAAUf,KAAO3sB,KAAKmuB,QAAQ7nB,MAC9BonB,EAAU9lB,KAAOunB,EACjBzB,EAAUd,OAASwC,EACnB1B,EAAUpB,MAAQ6C,EAElBnvB,KAAK8uB,8BAELnB,EAAMhB,KAAO,EACbgB,EAAM/lB,KAAO,EACb+lB,EAAMf,OAASc,EAAU9lB,KACzB+lB,EAAMrB,MAAQoB,EAAU9lB,KAAO8lB,EAAUd,MAC3C,CAEQ,2BAAAkC,GACNrB,EAAWd,KAAOlZ,KAAKkV,MAAM,EAAI3oB,KAAK6tB,mBAAmBrF,KAEzD,MAAM8G,EAAgBtvB,KAAKmuB,QAAQ/nB,OAASpG,KAAK+J,eAAe5F,OAAOE,MAAMpD,OAEvEsuB,EAAgB9b,KAAKkV,MAAMlV,KAAKG,IAAIH,KAAKC,IAAI4b,EAAe,IAAK,GAAKtvB,KAAK6tB,mBAAmBrF,KACpGiF,EAAW7lB,KAAO2nB,EAClB9B,EAAWb,OAAS2C,EACpB9B,EAAWnB,MAAQiD,CACrB,CAEQ,wBAAAR,GACN/uB,KAAK8tB,gBAAgBR,WAAW,CAC9BX,KAAMlZ,KAAKgX,MAAMzqB,KAAK+J,eAAe4O,QAAQC,OAAOvU,MAAMpD,QAAUjB,KAAKmuB,QAAQ/nB,OAAS,GAAKqnB,EAAWd,MAC1G/kB,KAAM6L,KAAKgX,MAAMzqB,KAAK+J,eAAe4O,QAAQC,OAAOvU,MAAMpD,QAAUjB,KAAKmuB,QAAQ/nB,OAAS,GAAKqnB,EAAW7lB,MAC1GglB,OAAQnZ,KAAKgX,MAAMzqB,KAAK+J,eAAe4O,QAAQC,OAAOvU,MAAMpD,QAAUjB,KAAKmuB,QAAQ/nB,OAAS,GAAKqnB,EAAWb,QAC5GN,MAAO7Y,KAAKgX,MAAMzqB,KAAK+J,eAAe4O,QAAQC,OAAOvU,MAAMpD,QAAUjB,KAAKmuB,QAAQ/nB,OAAS,GAAKqnB,EAAWnB,SAE7GtsB,KAAKkuB,uBAAyBluB,KAAK+J,eAAe4O,QAAQkW,OAAOxqB,MAAMpD,MACzE,CAEQ,wBAAAmtB,GACNpuB,KAAKmuB,QAAQ9nB,MAAMC,MAAQ,GAAGtG,KAAK4tB,WACnC5tB,KAAKmuB,QAAQ7nB,MAAQmN,KAAKkV,MAAM3oB,KAAK4tB,OAAS5tB,KAAK6tB,mBAAmBrF,KACtExoB,KAAKmuB,QAAQ9nB,MAAMD,OAAS,GAAGpG,KAAKgrB,eAAeiE,iBACnDjvB,KAAKmuB,QAAQ/nB,OAASqN,KAAKkV,MAAM3oB,KAAKgrB,eAAeiE,aAAejvB,KAAK6tB,mBAAmBrF,KAC5FxoB,KAAKkvB,wBACLlvB,KAAK+uB,0BACP,CAEQ,mBAAAS,GACFxvB,KAAKguB,yBACPhuB,KAAKouB,2BAEPpuB,KAAKyuB,KAAKgB,UAAU,EAAG,EAAGzvB,KAAKmuB,QAAQ7nB,MAAOtG,KAAKmuB,QAAQ/nB,QAC3DpG,KAAK8tB,gBAAgBzkB,QACrB,IAAK,MAAMoiB,KAAczrB,KAAKsW,mBAAmB3H,YAC/C3O,KAAK8tB,gBAAgBhB,cAAcrB,GAErCzrB,KAAKyuB,KAAKiB,UAAY,EACtB,MAAM7C,EAAQ7sB,KAAK8tB,gBAAgBjB,MACnC,IAAK,MAAMW,KAAQX,EACK,SAAlBW,EAAK3oB,UACP7E,KAAK2vB,iBAAiBnC,GAG1B,IAAK,MAAMA,KAAQX,EACK,SAAlBW,EAAK3oB,UACP7E,KAAK2vB,iBAAiBnC,GAG1BxtB,KAAKguB,yBAA0B,EAC/BhuB,KAAKiuB,qBAAsB,CAC7B,CAEQ,gBAAA0B,CAAiBnC,GACvBxtB,KAAKyuB,KAAKmB,UAAYpC,EAAK3V,MAC3B7X,KAAKyuB,KAAKoB,SACAlC,EAAMH,EAAK3oB,UAAY,QACvB4O,KAAKkV,OACV3oB,KAAKmuB,QAAQ/nB,OAAS,IACtBonB,EAAKJ,gBAAkBptB,KAAK+J,eAAe4O,QAAQC,OAAOvU,MAAMpD,QAAUwsB,EAAWD,EAAK3oB,UAAY,QAAU,GAE3G6oB,EAAUF,EAAK3oB,UAAY,QAC3B4O,KAAKkV,OACV3oB,KAAKmuB,QAAQ/nB,OAAS,KACrBonB,EAAKH,cAAgBG,EAAKJ,iBAAmBptB,KAAK+J,eAAe4O,QAAQC,OAAOvU,MAAMpD,QAAUwsB,EAAWD,EAAK3oB,UAAY,SAGpI,CAEQ,aAAAymB,CAAcwE,EAAkCC,GACtD/vB,KAAKguB,wBAA0B8B,GAA0B9vB,KAAKguB,wBAC9DhuB,KAAKiuB,oBAAsB8B,GAAgB/vB,KAAKiuB,yBACnBpjB,IAAzB7K,KAAK+S,kBAGT/S,KAAK+S,gBAAkB/S,KAAK6tB,mBAAmB3qB,OAAOgQ,uBAAsB,KAC1ElT,KAAKwvB,sBACLxvB,KAAK+S,qBAAkBlI,CAAS,IAEpC,G,wBAzLWyU,EAAqB,GAkB7B,MAAAjP,gBACA,MAAAoG,oBACA,MAAAjQ,gBACA,MAAAkM,iBACA,MAAA8J,sBAtBQ8C,E,wgBC3Bb,gBACA,UACA,UAYO,IAAMlC,EAAiB,oBAAvB,MAML,eAAW3D,GAAyB,OAAOzZ,KAAKgwB,YAAc,CAkB9D,WAAAvwB,CACmBwwB,EACA9S,EACgBpT,EACCyG,EACH0f,EACEtwB,GALhB,KAAAqwB,UAAAA,EACA,KAAA9S,iBAAAA,EACgB,KAAApT,eAAAA,EACC,KAAAyG,gBAAAA,EACH,KAAA0f,aAAAA,EACE,KAAAtwB,eAAAA,EAEjCI,KAAKgwB,cAAe,EACpBhwB,KAAKmwB,uBAAwB,EAC7BnwB,KAAKowB,qBAAuB,CAAEpuB,MAAO,EAAGC,IAAK,GAC7CjC,KAAKqwB,iBAAmB,EAC1B,CAKO,gBAAAlV,GACLnb,KAAKgwB,cAAe,EACpBhwB,KAAKowB,qBAAqBpuB,MAAQhC,KAAKiwB,UAAU3oB,MAAMrG,OACvDjB,KAAKmd,iBAAiB1Z,YAAc,GACpCzD,KAAKqwB,iBAAmB,GACxBrwB,KAAKmd,iBAAiB/c,UAAUC,IAAI,SACtC,CAMO,iBAAA+a,CAAkB5T,GACvBxH,KAAKmd,iBAAiB1Z,YAAc+D,EAAGoa,KACvC5hB,KAAKub,4BACLzX,YAAW,KACT9D,KAAKowB,qBAAqBnuB,IAAMjC,KAAKiwB,UAAU3oB,MAAMrG,MAAM,GAC1D,EACL,CAMO,cAAAoa,GACLrb,KAAKswB,sBAAqB,EAC5B,CAOO,OAAAzM,CAAQrc,GACb,GAAIxH,KAAKgwB,cAAgBhwB,KAAKmwB,sBAAuB,CACnD,GAAmB,MAAf3oB,EAAGmd,QAEL,OAAO,EAET,GAAmB,KAAfnd,EAAGmd,SAAiC,KAAfnd,EAAGmd,SAAiC,KAAfnd,EAAGmd,QAE/C,OAAO,EAIT3kB,KAAKswB,sBAAqB,E,CAG5B,OAAmB,MAAf9oB,EAAGmd,UAGL3kB,KAAKuwB,6BACE,EAIX,CAUQ,oBAAAD,CAAqBE,GAI3B,GAHAxwB,KAAKmd,iBAAiB/c,UAAUkD,OAAO,UACvCtD,KAAKgwB,cAAe,EAEfQ,EAKE,CAGL,MAAMC,EAA6B,CACjCzuB,MAAOhC,KAAKowB,qBAAqBpuB,MACjCC,IAAKjC,KAAKowB,qBAAqBnuB,KAWjCjC,KAAKmwB,uBAAwB,EAC7BrsB,YAAW,KAET,GAAI9D,KAAKmwB,sBAAuB,CAE9B,IAAIO,EADJ1wB,KAAKmwB,uBAAwB,EAI7BM,EAA2BzuB,OAAShC,KAAKqwB,iBAAiBpvB,OAGxDyvB,EAFE1wB,KAAKgwB,aAEChwB,KAAKiwB,UAAU3oB,MAAMqpB,UAAUF,EAA2BzuB,MAAOyuB,EAA2BxuB,KAK5FjC,KAAKiwB,UAAU3oB,MAAMqpB,UAAUF,EAA2BzuB,OAEhE0uB,EAAMzvB,OAAS,GACjBjB,KAAKkwB,aAAa7oB,iBAAiBqpB,GAAO,E,IAG7C,E,KA3CoB,CAEvB1wB,KAAKmwB,uBAAwB,EAC7B,MAAMO,EAAQ1wB,KAAKiwB,UAAU3oB,MAAMqpB,UAAU3wB,KAAKowB,qBAAqBpuB,MAAOhC,KAAKowB,qBAAqBnuB,KACxGjC,KAAKkwB,aAAa7oB,iBAAiBqpB,GAAO,E,CAyC9C,CAQQ,yBAAAH,GACN,MAAMK,EAAW5wB,KAAKiwB,UAAU3oB,MAChCxD,YAAW,KAET,IAAK9D,KAAKgwB,aAAc,CACtB,MAAMa,EAAW7wB,KAAKiwB,UAAU3oB,MAE1BwhB,EAAO+H,EAASlqB,QAAQiqB,EAAU,IAExC5wB,KAAKqwB,iBAAmBvH,EAEpB+H,EAAS5vB,OAAS2vB,EAAS3vB,OAC7BjB,KAAKkwB,aAAa7oB,iBAAiByhB,GAAM,GAChC+H,EAAS5vB,OAAS2vB,EAAS3vB,OACpCjB,KAAKkwB,aAAa7oB,iBAAiB,GAAG,EAAA4Q,GAAG6Y,OAAO,GACtCD,EAAS5vB,SAAW2vB,EAAS3vB,QAAY4vB,IAAaD,GAChE5wB,KAAKkwB,aAAa7oB,iBAAiBwpB,GAAU,E,IAIhD,EACL,CAQO,yBAAAtV,CAA0BwV,GAC/B,GAAK/wB,KAAKgwB,aAAV,CAIA,GAAIhwB,KAAK+J,eAAe5F,OAAOoV,mBAAoB,CACjD,MAAMM,EAAUpG,KAAKC,IAAI1T,KAAK+J,eAAe5F,OAAO6H,EAAGhM,KAAK+J,eAAe6D,KAAO,GAE5EkM,EAAa9Z,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OACrD6T,EAAYja,KAAK+J,eAAe5F,OAAO8H,EAAIjM,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OACnF8T,EAAaL,EAAU7Z,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MAErEtG,KAAKmd,iBAAiB9W,MAAMuB,KAAOsS,EAAa,KAChDla,KAAKmd,iBAAiB9W,MAAMyB,IAAMmS,EAAY,KAC9Cja,KAAKmd,iBAAiB9W,MAAMD,OAAS0T,EAAa,KAClD9Z,KAAKmd,iBAAiB9W,MAAM8T,WAAaL,EAAa,KACtD9Z,KAAKmd,iBAAiB9W,MAAM2qB,WAAahxB,KAAKwQ,gBAAgBrJ,WAAW6pB,WACzEhxB,KAAKmd,iBAAiB9W,MAAM4qB,SAAWjxB,KAAKwQ,gBAAgBrJ,WAAW8pB,SAAW,KAGlF,MAAMC,EAAwBlxB,KAAKmd,iBAAiBxV,wBACpD3H,KAAKiwB,UAAU5pB,MAAMuB,KAAOsS,EAAa,KACzCla,KAAKiwB,UAAU5pB,MAAMyB,IAAMmS,EAAY,KAEvCja,KAAKiwB,UAAU5pB,MAAMC,MAAQmN,KAAKG,IAAIsd,EAAsB5qB,MAAO,GAAK,KACxEtG,KAAKiwB,UAAU5pB,MAAMD,OAASqN,KAAKG,IAAIsd,EAAsB9qB,OAAQ,GAAK,KAC1EpG,KAAKiwB,UAAU5pB,MAAM8T,WAAa+W,EAAsB9qB,OAAS,I,CAG9D2qB,GACHjtB,YAAW,IAAM9D,KAAKub,2BAA0B,IAAO,E,CAE3D,G,oBAjOW6B,EAAiB,GA2BzB,MAAA/M,gBACA,MAAAqC,iBACA,MAAAye,cACA,MAAA3qB,iBA9BQ4W,E,eCdb,SAAgBgU,EAA2BluB,EAA0CsH,EAA2C/I,GAC9H,MAAM4vB,EAAO5vB,EAAQkG,wBACf2pB,EAAepuB,EAAOquB,iBAAiB9vB,GACvC+vB,EAAcC,SAASH,EAAaI,iBAAiB,iBACrDC,EAAaF,SAASH,EAAaI,iBAAiB,gBAC1D,MAAO,CACLlnB,EAAM3C,QAAUwpB,EAAKzpB,KAAO4pB,EAC5BhnB,EAAMzC,QAAUspB,EAAKvpB,IAAM6pB,EAE/B,C,iGATA,+BA2BA,qBAA0BzuB,EAA0CsH,EAAgD/I,EAAsBmwB,EAAkBte,EAAkBue,EAA2BC,EAAsBC,EAAuBC,GAEpP,IAAKH,EACH,OAGF,MAAM9hB,EAASqhB,EAA2BluB,EAAQsH,EAAO/I,GACzD,OAAKsO,GAILA,EAAO,GAAK0D,KAAK4b,MAAMtf,EAAO,IAAMiiB,EAAcF,EAAe,EAAI,IAAMA,GAC3E/hB,EAAO,GAAK0D,KAAK4b,KAAKtf,EAAO,GAAKgiB,GAKlChiB,EAAO,GAAK0D,KAAKC,IAAID,KAAKG,IAAI7D,EAAO,GAAI,GAAI6hB,GAAYI,EAAc,EAAI,IAC3EjiB,EAAO,GAAK0D,KAAKC,IAAID,KAAKG,IAAI7D,EAAO,GAAI,GAAIuD,GAEtCvD,QAbP,CAcF,C,8FChDA,gBAyEA,SAASkiB,EAAmBC,EAAgBC,EAAiBC,EAA+BC,GAC1F,MAAM/jB,EAAW4jB,EAASI,EAAkBJ,EAAQE,GAC9C7jB,EAAS4jB,EAAUG,EAAkBH,EAASC,GAE9CG,EAAa9e,KAAKoO,IAAIvT,EAAWC,GAiCzC,SAA0B2jB,EAAgBC,EAAiBC,GACzD,IAAII,EAAc,EAClB,MAAMlkB,EAAW4jB,EAASI,EAAkBJ,EAAQE,GAC9C7jB,EAAS4jB,EAAUG,EAAkBH,EAASC,GAEpD,IAAK,IAAI/yB,EAAI,EAAGA,EAAIoU,KAAKoO,IAAIvT,EAAWC,GAASlP,IAAK,CACpD,MAAMozB,EAAmD,MAAvCC,EAAkBR,EAAQC,IAA6B,EAAI,EACvExhB,EAAOyhB,EAAcjuB,OAAOE,MAAM6E,IAAIoF,EAAYmkB,EAAYpzB,IAChEsR,aAAI,EAAJA,EAAM0Z,YACRmI,G,CAIJ,OAAOA,CACT,CA/CmDG,CAAiBT,EAAQC,EAASC,GAEnF,OAAOQ,EAAOL,EAAY7Q,EAASgR,EAAkBR,EAAQC,GAAUE,GACzE,CAkDA,SAASC,EAAkBO,EAAoBT,GAC7C,IAAI9e,EAAW,EACX3C,EAAOyhB,EAAcjuB,OAAOE,MAAM6E,IAAI2pB,GACtCC,EAAYniB,aAAI,EAAJA,EAAM0Z,UAEtB,KAAOyI,GAAaD,GAAc,GAAKA,EAAaT,EAAc3xB,MAChE6S,IACA3C,EAAOyhB,EAAcjuB,OAAOE,MAAM6E,MAAM2pB,GACxCC,EAAYniB,aAAI,EAAJA,EAAM0Z,UAGpB,OAAO/W,CACT,CA6BA,SAASof,EAAkBR,EAAgBC,GACzC,OAAOD,EAASC,EAAU,IAAe,GAC3C,CAWA,SAASvY,EACPmZ,EACAzkB,EACA0kB,EACAzkB,EACA0kB,EACAb,GAEA,IAAIc,EAAaH,EACbF,EAAavkB,EACb6kB,EAAY,GAEhB,KAAOD,IAAeF,GAAUH,IAAetkB,GAC7C2kB,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAad,EAAcxkB,KAAO,GAC/CulB,GAAaf,EAAcjuB,OAAOK,4BAChCquB,GAAY,EAAOE,EAAUG,GAE/BA,EAAa,EACbH,EAAW,EACXF,MACUI,GAAWC,EAAa,IAClCC,GAAaf,EAAcjuB,OAAOK,4BAChCquB,GAAY,EAAO,EAAGE,EAAW,GAEnCG,EAAad,EAAcxkB,KAAO,EAClCmlB,EAAWG,EACXL,KAIJ,OAAOM,EAAYf,EAAcjuB,OAAOK,4BACtCquB,GAAY,EAAOE,EAAUG,EAEjC,CAMA,SAASxR,EAAS+Q,EAAsBJ,GACtC,MAAMe,EAAOf,EAAoB,IAAM,IACvC,OAAO,EAAApa,GAAGC,IAAMkb,EAAMX,CACxB,CAQA,SAASG,EAAOS,EAAeC,GAC7BD,EAAQ5f,KAAKgX,MAAM4I,GACnB,IAAIE,EAAM,GACV,IAAK,IAAIl0B,EAAI,EAAGA,EAAIg0B,EAAOh0B,IACzBk0B,GAAOD,EAET,OAAOC,CACT,CApOA,8BAAmCC,EAAiBrB,EAAiBC,EAA+BC,GAClG,MAAM5kB,EAAS2kB,EAAcjuB,OAAO6H,EAC9BkmB,EAASE,EAAcjuB,OAAO8H,EAGpC,IAAKmmB,EAAcjuB,OAAOsd,cACxB,OAsCJ,SAA0BhU,EAAgBykB,EAAgBsB,EAAiBrB,EAAiBC,EAA+BC,GACzH,OAAqF,IAAjFJ,EAAmBC,EAAQC,EAASC,EAAeC,GAAmBpxB,OACjE,GAEF2xB,EAAOhZ,EACZnM,EAAQykB,EAAQzkB,EAChBykB,EAASI,EAAkBJ,EAAQE,IAAgB,EAAOA,GAC1DnxB,OAAQygB,EAAS,IAAgB2Q,GACrC,CA9CWoB,CAAiBhmB,EAAQykB,EAAQsB,EAASrB,EAASC,EAAeC,GACvEJ,EAAmBC,EAAQC,EAASC,EAAeC,GA+DzD,SAA4B5kB,EAAgBykB,EAAgBsB,EAAiBrB,EAAiBC,EAA+BC,GAC3H,IAAI/jB,EAEFA,EADE2jB,EAAmBC,EAAQC,EAASC,EAAeC,GAAmBpxB,OAAS,EACtEkxB,EAAUG,EAAkBH,EAASC,GAErCF,EAGb,MAAM3jB,EAAS4jB,EACTM,EAyDR,SAA6BhlB,EAAgBykB,EAAgBsB,EAAiBrB,EAAiBC,EAA+BC,GAC5H,IAAI/jB,EAOJ,OALEA,EADE2jB,EAAmBuB,EAASrB,EAASC,EAAeC,GAAmBpxB,OAAS,EACvEkxB,EAAUG,EAAkBH,EAASC,GAErCF,EAGRzkB,EAAS+lB,GACZllB,GAAY6jB,GACX1kB,GAAU+lB,GACXllB,EAAW6jB,EACJ,IAEF,GACT,CAxEoBuB,CAAoBjmB,EAAQykB,EAAQsB,EAASrB,EAASC,EAAeC,GAEvF,OAAOO,EAAOhZ,EACZnM,EAAQa,EAAUklB,EAASjlB,EACb,MAAdkkB,EAA+BL,GAC/BnxB,OAAQygB,EAAS+Q,EAAWJ,GAChC,CA7EMsB,CAAmBlmB,EAAQykB,EAAQsB,EAASrB,EAASC,EAAeC,GAIxE,IAAII,EACJ,GAAIP,IAAWC,EAEb,OADAM,EAAYhlB,EAAS+lB,EAAU,IAAiB,IACzCZ,EAAOnf,KAAKoO,IAAIpU,EAAS+lB,GAAU9R,EAAS+Q,EAAWJ,IAEhEI,EAAYP,EAASC,EAAU,IAAiB,IAChD,MAAMyB,EAAgBngB,KAAKoO,IAAIqQ,EAASC,GAIxC,OAAOS,EAaT,SAAwBiB,EAAezB,GACrC,OAAOA,EAAcxkB,KAAOimB,CAC9B,CAlBsBC,CAAe5B,EAASC,EAAUqB,EAAU/lB,EAAQ2kB,IACrEwB,EAAgB,GAAKxB,EAAcxkB,KAAO,IACtBskB,EAASC,EAAU1kB,EAAS+lB,GAQpC,GAPY9R,EAAS+Q,EAAWJ,GACjD,C,kgBCtCA,gBACA,UACA,UACA,UAEA,UAEA,UACA,UACA,SACA,UAGM0B,EAAwB,4BACxBC,EAAsB,aACtBC,EAAkB,YAClBC,EAAkB,YAClBC,EAAc,cACdC,EAAkB,kBAExB,IAAIC,EAAiB,EAQR5U,EAAW,cAAjB,cAA0B,EAAAjgB,WAe/B,WAAAC,CACmB8L,EACAyf,EACA/O,EACAqY,EACMC,EACL,EACD,EACD,EACK,EACN,GAEf50B,QAXiB,KAAA4L,SAAAA,EACA,KAAAyf,eAAAA,EACA,KAAA/O,iBAAAA,EACA,KAAAqY,YAAAA,EAEkB,KAAA7X,iBAAAA,EACD,KAAAjM,gBAAAA,EACD,KAAAzG,eAAAA,EACK,KAAAsS,oBAAAA,EACN,KAAA7E,cAAAA,EAvB1B,KAAAgd,eAAyBH,IAKzB,KAAA7zB,aAA8B,GAMtB,KAAA+d,gBAAkBve,KAAKqB,SAAS,IAAI,EAAAiJ,cAAqCE,MAevFxK,KAAKM,cAAgBJ,SAASC,cAAc,OAC5CH,KAAKM,cAAcF,UAAUC,IAAI2zB,GACjCh0B,KAAKM,cAAc+F,MAAM8T,WAAa,SACtCna,KAAKM,cAAcC,aAAa,cAAe,QAC/CP,KAAKy0B,oBAAoBz0B,KAAK+J,eAAe6D,KAAM5N,KAAK+J,eAAetJ,MACvET,KAAK00B,oBAAsBx0B,SAASC,cAAc,OAClDH,KAAK00B,oBAAoBt0B,UAAUC,IAAI+zB,GACvCp0B,KAAK00B,oBAAoBn0B,aAAa,cAAe,QAErDP,KAAKiG,YAAa,IAAA0uB,0BAClB30B,KAAK40B,oBACL50B,KAAKqB,SAASrB,KAAKwQ,gBAAgBqkB,gBAAe,IAAM70B,KAAK80B,2BAE7D90B,KAAKqB,SAASrB,KAAKwX,cAAc0Q,gBAAernB,GAAKb,KAAK+0B,WAAWl0B,MACrEb,KAAK+0B,WAAW/0B,KAAKwX,cAAcO,QAEnC/X,KAAKg1B,YAAcT,EAAqBle,eAAe,EAAA4e,sBAAuB/0B,UAE9EF,KAAKuL,SAASnL,UAAUC,IAAI0zB,EAAwB/zB,KAAKw0B,gBACzDx0B,KAAKgrB,eAAerqB,YAAYX,KAAKM,eACrCN,KAAKgrB,eAAerqB,YAAYX,KAAK00B,qBAErC10B,KAAKqB,SAASrB,KAAKs0B,YAAY/pB,qBAAoB1J,GAAKb,KAAKk1B,iBAAiBr0B,MAC9Eb,KAAKqB,SAASrB,KAAKs0B,YAAY5pB,qBAAoB7J,GAAKb,KAAKm1B,iBAAiBt0B,MAE9Eb,KAAKqB,UAAS,IAAAgC,eAAa,KACzBrD,KAAKuL,SAASnL,UAAUkD,OAAOywB,EAAwB/zB,KAAKw0B,gBAI5Dx0B,KAAKM,cAAcgD,SACnBtD,KAAK00B,oBAAoBpxB,SACzBtD,KAAKo1B,YAAYzrB,UACjB3J,KAAKq1B,mBAAmB/xB,SACxBtD,KAAKs1B,wBAAwBhyB,QAAQ,KAGvCtD,KAAKo1B,YAAc,IAAI,EAAAG,WAAWr1B,UAClCF,KAAKo1B,YAAYI,QACfx1B,KAAKwQ,gBAAgBrJ,WAAW6pB,WAChChxB,KAAKwQ,gBAAgBrJ,WAAW8pB,SAChCjxB,KAAKwQ,gBAAgBrJ,WAAWsuB,WAChCz1B,KAAKwQ,gBAAgBrJ,WAAWuuB,gBAElC11B,KAAK21B,oBACP,CAEQ,iBAAAf,GACN,MAAMpM,EAAMxoB,KAAKqc,oBAAoBmM,IACrCxoB,KAAKiG,WAAWsiB,OAAOnmB,KAAKkE,MAAQtG,KAAKyc,iBAAiBnW,MAAQkiB,EAClExoB,KAAKiG,WAAWsiB,OAAOnmB,KAAKgE,OAASqN,KAAK4b,KAAKrvB,KAAKyc,iBAAiBrW,OAASoiB,GAC9ExoB,KAAKiG,WAAWsiB,OAAOpiB,KAAKG,MAAQtG,KAAKiG,WAAWsiB,OAAOnmB,KAAKkE,MAAQmN,KAAKkV,MAAM3oB,KAAKwQ,gBAAgBrJ,WAAWyuB,eACnH51B,KAAKiG,WAAWsiB,OAAOpiB,KAAKC,OAASqN,KAAKgX,MAAMzqB,KAAKiG,WAAWsiB,OAAOnmB,KAAKgE,OAASpG,KAAKwQ,gBAAgBrJ,WAAWgT,YACrHna,KAAKiG,WAAWsiB,OAAOnmB,KAAKwF,KAAO,EACnC5H,KAAKiG,WAAWsiB,OAAOnmB,KAAK0F,IAAM,EAClC9H,KAAKiG,WAAWsiB,OAAOhiB,OAAOD,MAAQtG,KAAKiG,WAAWsiB,OAAOpiB,KAAKG,MAAQtG,KAAK+J,eAAe6D,KAC9F5N,KAAKiG,WAAWsiB,OAAOhiB,OAAOH,OAASpG,KAAKiG,WAAWsiB,OAAOpiB,KAAKC,OAASpG,KAAK+J,eAAetJ,KAChGT,KAAKiG,WAAWC,IAAIK,OAAOD,MAAQmN,KAAKkV,MAAM3oB,KAAKiG,WAAWsiB,OAAOhiB,OAAOD,MAAQkiB,GACpFxoB,KAAKiG,WAAWC,IAAIK,OAAOH,OAASqN,KAAKkV,MAAM3oB,KAAKiG,WAAWsiB,OAAOhiB,OAAOH,OAASoiB,GACtFxoB,KAAKiG,WAAWC,IAAIC,KAAKG,MAAQtG,KAAKiG,WAAWC,IAAIK,OAAOD,MAAQtG,KAAK+J,eAAe6D,KACxF5N,KAAKiG,WAAWC,IAAIC,KAAKC,OAASpG,KAAKiG,WAAWC,IAAIK,OAAOH,OAASpG,KAAK+J,eAAetJ,KAE1F,IAAK,MAAMgB,KAAWzB,KAAKQ,aACzBiB,EAAQ4E,MAAMC,MAAQ,GAAGtG,KAAKiG,WAAWC,IAAIK,OAAOD,UACpD7E,EAAQ4E,MAAMD,OAAS,GAAGpG,KAAKiG,WAAWC,IAAIC,KAAKC,WACnD3E,EAAQ4E,MAAM8T,WAAa,GAAGna,KAAKiG,WAAWC,IAAIC,KAAKC,WAEvD3E,EAAQ4E,MAAMwvB,SAAW,SAGtB71B,KAAKs1B,0BACRt1B,KAAKs1B,wBAA0Bp1B,SAASC,cAAc,SACtDH,KAAKgrB,eAAerqB,YAAYX,KAAKs1B,0BAGvC,MAAMQ,EACJ,GAAG91B,KAAK+1B,sBAAsB/B,sEAMhCh0B,KAAKs1B,wBAAwB7xB,YAAcqyB,EAE3C91B,KAAK00B,oBAAoBruB,MAAMD,OAASpG,KAAKic,iBAAiB5V,MAAMD,OACpEpG,KAAKgrB,eAAe3kB,MAAMC,MAAQ,GAAGtG,KAAKiG,WAAWC,IAAIK,OAAOD,UAChEtG,KAAKgrB,eAAe3kB,MAAMD,OAAS,GAAGpG,KAAKiG,WAAWC,IAAIK,OAAOH,UACnE,CAEQ,UAAA2uB,CAAWhd,GACZ/X,KAAKq1B,qBACRr1B,KAAKq1B,mBAAqBn1B,SAASC,cAAc,SACjDH,KAAKgrB,eAAerqB,YAAYX,KAAKq1B,qBAIvC,IAAIS,EACF,GAAG91B,KAAK+1B,sBAAsB/B,cACnBjc,EAAOie,WAAW9vB,qBACZlG,KAAKwQ,gBAAgBrJ,WAAW6pB,0BAClChxB,KAAKwQ,gBAAgBrJ,WAAW8pB,oDAIjD6E,GACE,GAAG91B,KAAK+1B,sBAAsB/B,yBACnB,EAAAnc,MAAMoe,gBAAgBle,EAAOie,WAAY,IAAK9vB,QAG3D4vB,GACE,GAAG91B,KAAK+1B,0DACS/1B,KAAKwQ,gBAAgBrJ,WAAWsuB,eAE9Cz1B,KAAK+1B,oDACS/1B,KAAKwQ,gBAAgBrJ,WAAWuuB,mBAE9C11B,KAAK+1B,6DAIVD,GACE,+BAAsC91B,KAAKw0B,eAA3C,4CAKFsB,GACE,0BAAiC91B,KAAKw0B,eAAtC,UAEA,uBAAuBzc,EAAOme,OAAOhwB,OACrC,YAAY6R,EAAOoe,aAAajwB,2CAIhC,YAAY6R,EAAOme,OAAOhwB,UAI5B4vB,GACE,GAAG91B,KAAK+1B,sBAAsB/B,KAAuBG,6FACdn0B,KAAKw0B,eAD5C,0BAGA,GAAGx0B,KAAK+1B,sBAAsB/B,KAAuBG,kFACnBn0B,KAAKw0B,eAJvC,0BAMA,GAAGx0B,KAAK+1B,sBAAsB/B,uCAC9B,sBAAsBjc,EAAOme,OAAOhwB,OACpC,WAAW6R,EAAOoe,aAAajwB,QAE/B,GAAGlG,KAAK+1B,sBAAsB/B,yCAC9B,uBAAuBjc,EAAOme,OAAOhwB,8BAGrC,GAAGlG,KAAK+1B,sBAAsB/B,qCAC9B,gBAAgBh0B,KAAKwQ,gBAAgBrJ,WAAWivB,qBAAqBre,EAAOme,OAAOhwB,cAEnF,GAAGlG,KAAK+1B,sBAAsB/B,2CAC9B,uBAAuBjc,EAAOme,OAAOhwB,8DAKvC4vB,GACE,GAAG91B,KAAK+1B,sBAAsB3B,8EAO3Bp0B,KAAK+1B,4BAA4B3B,iDAEdrc,EAAOse,0BAA0BnwB,QAEpDlG,KAAK+1B,sBAAsB3B,iDAERrc,EAAOue,kCAAkCpwB,QAGjE,IAAK,MAAO7G,EAAGk3B,KAAMxe,EAAOC,KAAKnL,UAC/BipB,GACE,GAAG91B,KAAK+1B,sBAAsB9B,IAAkB50B,cAAck3B,EAAErwB,SAC7DlG,KAAK+1B,sBAAsB9B,IAAkB50B,wBAAkC,EAAAwY,MAAMoe,gBAAgBM,EAAG,IAAKrwB,SAC7GlG,KAAK+1B,sBAAsB7B,IAAkB70B,yBAAyBk3B,EAAErwB,SAE/E4vB,GACE,GAAG91B,KAAK+1B,sBAAsB9B,IAAkB,EAAAuC,mCAAmC,EAAA3e,MAAM4e,OAAO1e,EAAOqQ,YAAYliB,SAChHlG,KAAK+1B,sBAAsB9B,IAAkB,EAAAuC,6CAAuD,EAAA3e,MAAMoe,gBAAgB,EAAApe,MAAM4e,OAAO1e,EAAOqQ,YAAa,IAAKliB,SAChKlG,KAAK+1B,sBAAsB7B,IAAkB,EAAAsC,8CAA8Cze,EAAOie,WAAW9vB,SAElHlG,KAAKq1B,mBAAmB5xB,YAAcqyB,CACxC,CAUQ,kBAAAH,GAEN,MAAMe,EAAU12B,KAAKiG,WAAWC,IAAIC,KAAKG,MAAQtG,KAAKo1B,YAAYlsB,IAAI,KAAK,GAAO,GAClFlJ,KAAKM,cAAc+F,MAAMuvB,cAAgB,GAAGc,MAC5C12B,KAAKg1B,YAAY2B,eAAiBD,CACpC,CAEO,4BAAAE,GACL52B,KAAK40B,oBACL50B,KAAKo1B,YAAY/rB,QACjBrJ,KAAK21B,oBACP,CAEQ,mBAAAlB,CAAoB7mB,EAAcnN,GAExC,IAAK,IAAIpB,EAAIW,KAAKQ,aAAaS,OAAQ5B,GAAKoB,EAAMpB,IAAK,CACrD,MAAMghB,EAAMngB,SAASC,cAAc,OACnCH,KAAKM,cAAcK,YAAY0f,GAC/BrgB,KAAKQ,aAAayD,KAAKoc,E,CAGzB,KAAOrgB,KAAKQ,aAAaS,OAASR,GAChCT,KAAKM,cAAcgF,YAAYtF,KAAKQ,aAAa6E,MAErD,CAEO,YAAA6Y,CAAatQ,EAAcnN,GAChCT,KAAKy0B,oBAAoB7mB,EAAMnN,GAC/BT,KAAK40B,mBACP,CAEO,qBAAAiC,GACL72B,KAAK40B,oBACL50B,KAAKo1B,YAAY/rB,QACjBrJ,KAAK21B,oBACP,CAEO,UAAAxX,GACLne,KAAKM,cAAcF,UAAUkD,OAAO6wB,EACtC,CAEO,WAAA/V,GACLpe,KAAKM,cAAcF,UAAUC,IAAI8zB,EACnC,CAEO,sBAAA3V,CAAuBxc,EAAqCC,EAAmCwc,GAOpG,GALAze,KAAK00B,oBAAoBoC,kBACzB92B,KAAKg1B,YAAYxW,uBAAuBxc,EAAOC,EAAKwc,GACpDze,KAAK+2B,WAAW,EAAG/2B,KAAK+J,eAAetJ,KAAO,IAGzCuB,IAAUC,EACb,OAIF,MAAM+0B,EAAmBh1B,EAAM,GAAKhC,KAAK+J,eAAe5F,OAAOM,MACzDwyB,EAAiBh1B,EAAI,GAAKjC,KAAK+J,eAAe5F,OAAOM,MACrDyyB,EAAyBzjB,KAAKG,IAAIojB,EAAkB,GACpDG,EAAuB1jB,KAAKC,IAAIujB,EAAgBj3B,KAAK+J,eAAetJ,KAAO,GAGjF,GAAIy2B,GAA0Bl3B,KAAK+J,eAAetJ,MAAQ02B,EAAuB,EAC/E,OAIF,MAAMC,EAAmBl3B,SAAS8b,yBAElC,GAAIyC,EAAkB,CACpB,MAAM4Y,EAAar1B,EAAM,GAAKC,EAAI,GAClCm1B,EAAiBz2B,YACfX,KAAKs3B,wBAAwBJ,EAAwBG,EAAap1B,EAAI,GAAKD,EAAM,GAAIq1B,EAAar1B,EAAM,GAAKC,EAAI,GAAIk1B,EAAuBD,EAAyB,G,KAElK,CAEL,MAAMnE,EAAWiE,IAAqBE,EAAyBl1B,EAAM,GAAK,EACpEgxB,EAASkE,IAA2BD,EAAiBh1B,EAAI,GAAKjC,KAAK+J,eAAe6D,KACxFwpB,EAAiBz2B,YAAYX,KAAKs3B,wBAAwBJ,EAAwBnE,EAAUC,IAE5F,MAAMuE,EAAkBJ,EAAuBD,EAAyB,EAGxE,GAFAE,EAAiBz2B,YAAYX,KAAKs3B,wBAAwBJ,EAAyB,EAAG,EAAGl3B,KAAK+J,eAAe6D,KAAM2pB,IAE/GL,IAA2BC,EAAsB,CAEnD,MAAMnE,EAASiE,IAAmBE,EAAuBl1B,EAAI,GAAKjC,KAAK+J,eAAe6D,KACtFwpB,EAAiBz2B,YAAYX,KAAKs3B,wBAAwBH,EAAsB,EAAGnE,G,EAGvFhzB,KAAK00B,oBAAoB/zB,YAAYy2B,EACvC,CAQQ,uBAAAE,CAAwBjX,EAAamX,EAAkBC,EAAgBnkB,EAAmB,GAChG,MAAM7R,EAAUvB,SAASC,cAAc,OAKvC,OAJAsB,EAAQ4E,MAAMD,OAAYkN,EAAWtT,KAAKiG,WAAWC,IAAIC,KAAKC,OAAvC,KACvB3E,EAAQ4E,MAAMyB,IAASuY,EAAMrgB,KAAKiG,WAAWC,IAAIC,KAAKC,OAAlC,KACpB3E,EAAQ4E,MAAMuB,KAAU4vB,EAAWx3B,KAAKiG,WAAWC,IAAIC,KAAKG,MAAvC,KACrB7E,EAAQ4E,MAAMC,MAAWtG,KAAKiG,WAAWC,IAAIC,KAAKG,OAASmxB,EAASD,GAA9C,KACf/1B,CACT,CAEO,gBAAAwc,GAEP,CAEQ,qBAAA6W,GAEN90B,KAAK40B,oBAEL50B,KAAK+0B,WAAW/0B,KAAKwX,cAAcO,QAEnC/X,KAAKo1B,YAAYI,QACfx1B,KAAKwQ,gBAAgBrJ,WAAW6pB,WAChChxB,KAAKwQ,gBAAgBrJ,WAAW8pB,SAChCjxB,KAAKwQ,gBAAgBrJ,WAAWsuB,WAChCz1B,KAAKwQ,gBAAgBrJ,WAAWuuB,gBAElC11B,KAAK21B,oBACP,CAEO,KAAAtsB,GACL,IAAK,MAAMxI,KAAKb,KAAKQ,aASnBK,EAAEi2B,iBAEN,CAEO,UAAAC,CAAW/0B,EAAeC,GAC/B,MAAMkC,EAASnE,KAAK+J,eAAe5F,OAC7BuzB,EAAkBvzB,EAAOwV,MAAQxV,EAAO8H,EACxC4N,EAAUpG,KAAKC,IAAIvP,EAAO6H,EAAGhM,KAAK+J,eAAe6D,KAAO,GACxD+pB,EAAc33B,KAAKwQ,gBAAgBrJ,WAAWwwB,YAC9CC,EAAc53B,KAAKwQ,gBAAgBrJ,WAAWywB,YAC9CC,EAAsB73B,KAAKwQ,gBAAgBrJ,WAAW0wB,oBAE5D,IAAK,IAAI5rB,EAAIjK,EAAOiK,GAAKhK,EAAKgK,IAAK,CACjC,MAAMoU,EAAMpU,EAAI9H,EAAOM,MACjBqzB,EAAa93B,KAAKQ,aAAayL,GAC/B1H,EAAWJ,EAAOE,MAAM6E,IAAImX,GAClC,IAAKyX,IAAevzB,EAClB,MAEFuzB,EAAWhB,mBACN92B,KAAKg1B,YAAY+C,UAClBxzB,EACA8b,EACAA,IAAQqX,EACRE,EACAC,EACAhe,EACA8d,EACA33B,KAAKiG,WAAWC,IAAIC,KAAKG,MACzBtG,KAAKo1B,aACJ,GACA,G,CAIT,CAEA,qBAAYW,GACV,MAAO,IAAIhC,IAAwB/zB,KAAKw0B,gBAC1C,CAEQ,gBAAAU,CAAiBr0B,GACvBb,KAAKg4B,kBAAkBn3B,EAAEoP,GAAIpP,EAAEsP,GAAItP,EAAEqP,GAAIrP,EAAEuP,GAAIvP,EAAE+M,MAAM,EACzD,CAEQ,gBAAAunB,CAAiBt0B,GACvBb,KAAKg4B,kBAAkBn3B,EAAEoP,GAAIpP,EAAEsP,GAAItP,EAAEqP,GAAIrP,EAAEuP,GAAIvP,EAAE+M,MAAM,EACzD,CAEQ,iBAAAoqB,CAAkBhsB,EAAWmE,EAAYlE,EAAWmE,EAAYxC,EAAcqqB,GAiBhFhsB,EAAI,IAAGD,EAAI,GACXoE,EAAK,IAAGD,EAAK,GACjB,MAAM+nB,EAAOl4B,KAAK+J,eAAetJ,KAAO,EACxCwL,EAAIwH,KAAKG,IAAIH,KAAKC,IAAIzH,EAAGisB,GAAO,GAChC9nB,EAAKqD,KAAKG,IAAIH,KAAKC,IAAItD,EAAI8nB,GAAO,GAElCtqB,EAAO6F,KAAKC,IAAI9F,EAAM5N,KAAK+J,eAAe6D,MAC1C,MAAMzJ,EAASnE,KAAK+J,eAAe5F,OAC7BuzB,EAAkBvzB,EAAOwV,MAAQxV,EAAO8H,EACxC4N,EAAUpG,KAAKC,IAAIvP,EAAO6H,EAAG4B,EAAO,GACpC+pB,EAAc33B,KAAKwQ,gBAAgBrJ,WAAWwwB,YAC9CC,EAAc53B,KAAKwQ,gBAAgBrJ,WAAWywB,YAC9CC,EAAsB73B,KAAKwQ,gBAAgBrJ,WAAW0wB,oBAG5D,IAAK,IAAIx4B,EAAI4M,EAAG5M,GAAK+Q,IAAM/Q,EAAG,CAC5B,MAAMghB,EAAMhhB,EAAI8E,EAAOM,MACjBqzB,EAAa93B,KAAKQ,aAAanB,GAC/B84B,EAAah0B,EAAOE,MAAM6E,IAAImX,GACpC,IAAKyX,IAAeK,EAClB,MAEFL,EAAWhB,mBACN92B,KAAKg1B,YAAY+C,UAClBI,EACA9X,EACAA,IAAQqX,EACRE,EACAC,EACAhe,EACA8d,EACA33B,KAAKiG,WAAWC,IAAIC,KAAKG,MACzBtG,KAAKo1B,YACL6C,EAAW54B,IAAM4M,EAAID,EAAI,GAAM,EAC/BisB,GAAY54B,IAAM+Q,EAAKD,EAAKvC,GAAQ,GAAM,G,CAIlD,G,cAtdW6R,EAAW,GAoBnB,MAAA2Y,uBACA,MAAAzb,kBACA,MAAAjK,iBACA,MAAArC,gBACA,MAAAmM,qBACA,MAAAK,gBAzBQ4C,E,4gBC3Bb,gBACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UAqBO,IAAMwV,EAAqB,wBAA3B,MASL,WAAAx1B,CACmBmc,EACQ,EACR,EACI,EACP,EACM,EACL,GANE,KAAAA,UAAAA,EACyB,KAAAkB,wBAAAA,EACR,KAAAtM,gBAAAA,EACI,KAAA6L,oBAAAA,EACP,KAAA6T,aAAAA,EACM,KAAA5Z,mBAAAA,EACL,KAAAkB,cAAAA,EAf1B,KAAA6gB,UAAsB,IAAI,EAAAvnB,SAI1B,KAAAwnB,mBAA6B,EAE9B,KAAA3B,eAAiB,CAUrB,CAEI,sBAAAnY,CAAuBxc,EAAqCC,EAAmCwc,GACpGze,KAAKu4B,gBAAkBv2B,EACvBhC,KAAKw4B,cAAgBv2B,EACrBjC,KAAKs4B,kBAAoB7Z,CAC3B,CAEO,SAAAsZ,CACLxzB,EACA8b,EACAoY,EACAb,EACAC,EACAhe,EACA8d,EACA3d,EACA0e,EACAC,EACAC,GAGA,MAAMC,EAA8B,GAC9BC,EAAe94B,KAAK8c,wBAAwBic,oBAAoB1Y,GAChEtI,EAAS/X,KAAKwX,cAAcO,OAElC,IAKIihB,EALAjoB,EAAaxM,EAAS00B,uBACtBR,GAAe1nB,EAAa8I,EAAU,IACxC9I,EAAa8I,EAAU,GAIzB,IAAIqf,EAAa,EACbxyB,EAAO,GACPyyB,EAAQ,EACRC,EAAQ,EACRC,EAAS,EACTC,GAAiC,EACjCC,EAAa,EACbC,GAA4B,EAC5B9C,EAAU,EACd,MAAM+C,EAAoB,GAEpBC,GAA0B,IAAff,IAAiC,IAAbC,EAErC,IAAK,IAAI5sB,EAAI,EAAGA,EAAI+E,EAAY/E,IAAK,CACnCzH,EAAS8M,SAASrF,EAAGhM,KAAKq4B,WAC1B,IAAI/xB,EAAQtG,KAAKq4B,UAAUte,WAG3B,GAAc,IAAVzT,EACF,SAIF,IAAIqzB,GAAW,EACXC,EAAY5tB,EAKZ7F,EAAOnG,KAAKq4B,UAChB,GAAIS,EAAa73B,OAAS,GAAK+K,IAAM8sB,EAAa,GAAG,GAAI,CACvDa,GAAW,EACX,MAAMjsB,EAAQorB,EAAat1B,QAI3B2C,EAAO,IAAI,EAAA0zB,eACT75B,KAAKq4B,UACL9zB,EAAS+lB,mBAAkB,EAAM5c,EAAM,GAAIA,EAAM,IACjDA,EAAM,GAAKA,EAAM,IAInBksB,EAAYlsB,EAAM,GAAK,EAGvBpH,EAAQH,EAAK4T,U,CAGf,MAAM+f,EAAgB95B,KAAK+5B,mBAAmB/tB,EAAGqU,GAC3C2Z,EAAevB,GAAezsB,IAAM6N,EACpCogB,EAAcP,GAAY1tB,GAAK2sB,GAAa3sB,GAAK4sB,EAEvD,IAAIsB,GAAc,EAClBl6B,KAAKsW,mBAAmB6jB,wBAAwBnuB,EAAGqU,OAAKxV,GAAWuvB,IACjEF,GAAc,CAAI,IAIpB,IAAIG,EAAQl0B,EAAKm0B,YAAc,EAAAC,qBAQ/B,GAPc,MAAVF,IAAkBl0B,EAAKq0B,eAAiBr0B,EAAKs0B,gBAC/CJ,EAAQ,KAIV3D,EAAUpwB,EAAQ0T,EAAY0e,EAAWxvB,IAAImxB,EAAOl0B,EAAKu0B,SAAUv0B,EAAKw0B,YAEnE3B,EAEE,CAWL,GACEE,IAEGY,GAAiBN,IACbM,GAAiB3zB,EAAK2C,KAAOqwB,KAGjCW,GAAiBN,GAAoBzhB,EAAO6iB,uBACvCd,GAAiBN,GAAoBzhB,EAAO6iB,qBAAwBz0B,EAAK4C,KAAOqwB,KAErFjzB,EAAKoL,SAASspB,MAAQxB,GACtBY,IAAgBX,GAChB5C,IAAY6C,IACXS,IACAL,IACAO,EACJ,CAEAxzB,GAAQ2zB,EACRnB,IACA,Q,CAOIA,IACFF,EAAYv1B,YAAciD,GAE5BsyB,EAAch5B,KAAK4b,UAAUzb,cAAc,QAC3C+4B,EAAa,EACbxyB,EAAO,E,MA5CTsyB,EAAch5B,KAAK4b,UAAUzb,cAAc,QAgE7C,GAhBAg5B,EAAQhzB,EAAK2C,GACbswB,EAAQjzB,EAAK4C,GACbswB,EAASlzB,EAAKoL,SAASspB,IACvBvB,EAAeW,EACfV,EAAa7C,EACb8C,EAAmBM,EAEfH,GAIE9f,GAAW7N,GAAK6N,GAAW+f,IAC7B/f,EAAU7N,IAIThM,KAAKkwB,aAAa4K,gBAAkBd,EAEvC,GADAP,EAAQx1B,KAAK,gBACTjE,KAAKqc,oBAAoB0e,UACvBpD,GACF8B,EAAQx1B,KAAK,sBAEfw1B,EAAQx1B,KACU,QAAhB2zB,EACI,mBACgB,cAAhBA,EACE,yBACA,2BAGR,GAAIC,EACF,OAAQA,GACN,IAAK,UACH4B,EAAQx1B,KAAK,wBACb,MACF,IAAK,QACHw1B,EAAQx1B,KAAK,sBACb,MACF,IAAK,MACHw1B,EAAQx1B,KAAK,oBACb,MACF,IAAK,YACHw1B,EAAQx1B,KAAK,0BA2BvB,GAlBIkC,EAAKu0B,UACPjB,EAAQx1B,KAAK,cAGXkC,EAAKw0B,YACPlB,EAAQx1B,KAAK,gBAGXkC,EAAK60B,SACPvB,EAAQx1B,KAAK,aAIbyC,EADEP,EAAK80B,cACA,EAAAV,qBAEAp0B,EAAKm0B,YAAc,EAAAC,qBAGxBp0B,EAAKq0B,gBACPf,EAAQx1B,KAAK,mBAA6BkC,EAAKoL,SAAS2pB,kBAC3C,MAATx0B,IACFA,EAAO,MAEJP,EAAKg1B,2BACR,GAAIh1B,EAAKi1B,sBACPpC,EAAY3yB,MAAMg1B,oBAAsB,OAAO,EAAAC,cAAcxjB,WAAW3R,EAAKo1B,qBAAqBC,KAAK,YAClG,CACL,IAAIzyB,EAAK5C,EAAKo1B,oBACVv7B,KAAKwQ,gBAAgBrJ,WAAWs0B,4BAA8Bt1B,EAAKu0B,UAAY3xB,EAAK,IACtFA,GAAM,GAERiwB,EAAY3yB,MAAMg1B,oBAAsBtjB,EAAOC,KAAKjP,GAAI7C,G,CAK1DC,EAAKs0B,eACPhB,EAAQx1B,KAAK,kBACA,MAATyC,IACFA,EAAO,MAIPP,EAAKu1B,mBACPjC,EAAQx1B,KAAK,uBAKXg2B,IACFjB,EAAY3yB,MAAMs1B,eAAiB,aAGrC,IAAI5yB,EAAK5C,EAAKy1B,aACVC,EAAc11B,EAAK21B,iBACnBhzB,EAAK3C,EAAK41B,aACVC,EAAc71B,EAAK81B,iBACvB,MAAMC,IAAc/1B,EAAK+1B,YACzB,GAAIA,EAAW,CACb,MAAMC,EAAOpzB,EACbA,EAAKD,EACLA,EAAKqzB,EACL,MAAMC,EAAQP,EACdA,EAAcG,EACdA,EAAcI,C,CAKhB,IAAIC,EACAC,EA6CAC,EA5CAC,GAAQ,EA6CZ,OA5CAx8B,KAAKsW,mBAAmB6jB,wBAAwBnuB,EAAGqU,OAAKxV,GAAWuvB,IACzC,QAApBA,EAAE3wB,QAAQsiB,OAAmByQ,IAG7BpC,EAAEqC,qBACJT,EAAc,SACdlzB,EAAKsxB,EAAEqC,mBAAmBlkB,MAAQ,EAAI,SACtC8jB,EAAajC,EAAEqC,oBAEbrC,EAAEsC,qBACJb,EAAc,SACd9yB,EAAKqxB,EAAEsC,mBAAmBnkB,MAAQ,EAAI,SACtC+jB,EAAalC,EAAEsC,oBAEjBF,EAA4B,QAApBpC,EAAE3wB,QAAQsiB,MAAe,KAI9ByQ,GAAS1C,IAKZuC,EAAar8B,KAAKqc,oBAAoB0e,UAAYhjB,EAAOse,0BAA4Bte,EAAOue,kCAC5FxtB,EAAKuzB,EAAW9jB,MAAQ,EAAI,SAC5ByjB,EAAc,SAGdQ,GAAQ,EAEJzkB,EAAO6iB,sBACTiB,EAAc,SACd9yB,EAAKgP,EAAO6iB,oBAAoBriB,MAAQ,EAAI,SAC5C+jB,EAAavkB,EAAO6iB,sBAKpB4B,GACF/C,EAAQx1B,KAAK,wBAKP+3B,GACN,KAAK,SACL,KAAK,SACHO,EAAaxkB,EAAOC,KAAKlP,GACzB2wB,EAAQx1B,KAAK,YAAY6E,KACzB,MACF,KAAK,SACHyzB,EAAa,EAAAhkB,KAAKC,QAAQ1P,GAAM,GAAIA,GAAM,EAAI,IAAW,IAALA,GACpD9I,KAAK28B,UAAU3D,EAAa,qBAAqB4D,GAAU9zB,IAAO,GAAGxE,SAAS,IAAK,IAAK,MACxF,MAEF,QACM43B,GACFK,EAAaxkB,EAAOie,WACpByD,EAAQx1B,KAAK,YAAY,EAAAuyB,2BAEzB+F,EAAaxkB,EAAOqQ,WAY1B,OAPKiU,GACCl2B,EAAK60B,UACPqB,EAAa,EAAAxkB,MAAMoe,gBAAgBsG,EAAY,KAK3CV,GACN,KAAK,SACL,KAAK,SACC11B,EAAKu0B,UAAY3xB,EAAK,GAAK/I,KAAKwQ,gBAAgBrJ,WAAWs0B,6BAC7D1yB,GAAM,GAEH/I,KAAK68B,sBAAsB7D,EAAauD,EAAYxkB,EAAOC,KAAKjP,GAAK5C,EAAMk2B,OAAYxxB,IAC1F4uB,EAAQx1B,KAAK,YAAY8E,KAE3B,MACF,KAAK,SACH,MAAM8O,EAAQ,EAAAU,KAAKC,QAChBzP,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAb,GAEG/I,KAAK68B,sBAAsB7D,EAAauD,EAAY1kB,EAAO1R,EAAMk2B,EAAYC,IAChFt8B,KAAK28B,UAAU3D,EAAa,UAAU4D,EAAS7zB,EAAGzE,SAAS,IAAK,IAAK,MAEvE,MAEF,QACOtE,KAAK68B,sBAAsB7D,EAAauD,EAAYxkB,EAAOie,WAAY7vB,EAAMk2B,OAAYxxB,IACxFqxB,GACFzC,EAAQx1B,KAAK,YAAY,EAAAuyB,0BAQ7BiD,EAAQx4B,SACV+3B,EAAY8D,UAAYrD,EAAQ+B,KAAK,KACrC/B,EAAQx4B,OAAS,GAId+4B,GAAiBL,GAAaO,EAGjClB,EAAYv1B,YAAciD,EAF1BwyB,IAKExC,IAAY12B,KAAK22B,iBACnBqC,EAAY3yB,MAAMuvB,cAAgB,GAAGc,OAGvCmC,EAAS50B,KAAK+0B,GACdhtB,EAAI4tB,C,CAQN,OAJIZ,GAAeE,IACjBF,EAAYv1B,YAAciD,GAGrBmyB,CACT,CAEQ,qBAAAgE,CAAsBp7B,EAAsBqH,EAAYC,EAAY5C,EAAiBk2B,EAAgCC,GAC3H,GAA6D,IAAzDt8B,KAAKwQ,gBAAgBrJ,WAAW41B,uBAA8B,IAAAC,iCAAgC72B,EAAK82B,WACrG,OAAO,EAIT,MAAMC,EAAQl9B,KAAKm9B,kBAAkBh3B,GACrC,IAAIi3B,EAMJ,GALKf,GAAeC,IAClBc,EAAgBF,EAAM9zB,SAASN,EAAGyP,KAAMxP,EAAGwP,YAIvB1N,IAAlBuyB,EAA6B,CAG/B,MAAMC,EAAQr9B,KAAKwQ,gBAAgBrJ,WAAW41B,sBAAwB52B,EAAK60B,QAAU,EAAI,GACzFoC,EAAgB,EAAAvlB,MAAMylB,oBAAoBjB,GAAcvzB,EAAIwzB,GAAcvzB,EAAIs0B,GAC9EH,EAAM/zB,UAAUkzB,GAAcvzB,GAAIyP,MAAO+jB,GAAcvzB,GAAIwP,KAAM6kB,QAAAA,EAAiB,K,CAGpF,QAAIA,IACFp9B,KAAK28B,UAAUl7B,EAAS,SAAS27B,EAAcl3B,QACxC,EAIX,CAEQ,iBAAAi3B,CAAkBh3B,GACxB,OAAIA,EAAK60B,QACAh7B,KAAKwX,cAAcO,OAAOwlB,kBAE5Bv9B,KAAKwX,cAAcO,OAAOylB,aACnC,CAEQ,SAAAb,CAAUl7B,EAAsB4E,GACtC5E,EAAQlB,aAAa,QAAS,GAAGkB,EAAQwD,aAAa,UAAY,KAAKoB,KACzE,CAEQ,kBAAA0zB,CAAmB/tB,EAAWC,GACpC,MAAMjK,EAAQhC,KAAKu4B,gBACbt2B,EAAMjC,KAAKw4B,cACjB,SAAKx2B,IAAUC,KAGXjC,KAAKs4B,kBACHt2B,EAAM,IAAMC,EAAI,GACX+J,GAAKhK,EAAM,IAAMiK,GAAKjK,EAAM,IACjCgK,EAAI/J,EAAI,IAAMgK,GAAKhK,EAAI,GAEpB+J,EAAIhK,EAAM,IAAMiK,GAAKjK,EAAM,IAChCgK,GAAK/J,EAAI,IAAMgK,GAAKhK,EAAI,GAEpBgK,EAAIjK,EAAM,IAAMiK,EAAIhK,EAAI,IAC3BD,EAAM,KAAOC,EAAI,IAAMgK,IAAMjK,EAAM,IAAMgK,GAAKhK,EAAM,IAAMgK,EAAI/J,EAAI,IAClED,EAAM,GAAKC,EAAI,IAAMgK,IAAMhK,EAAI,IAAM+J,EAAI/J,EAAI,IAC7CD,EAAM,GAAKC,EAAI,IAAMgK,IAAMjK,EAAM,IAAMgK,GAAKhK,EAAM,GACzD,GAGF,SAAS46B,EAASl2B,EAAc+2B,EAAiBx8B,GAC/C,KAAOyF,EAAKzF,OAASA,GACnByF,EAAO+2B,EAAU/2B,EAEnB,OAAOA,CACT,C,wBAteauuB,EAAqB,GAW7B,MAAAjY,yBACA,MAAAtK,iBACA,MAAA8J,qBACA,MAAA2U,cACA,MAAA1a,oBACA,MAAAoG,gBAhBQoY,E,oFCRb,mBAoBE,WAAAx1B,CAAYmc,GAdF,KAAA8hB,MAAQ,IAAIC,aAAa,KAO3B,KAAAC,MAAQ,GACR,KAAAC,UAAY,EACZ,KAAAC,QAAsB,SACtB,KAAAC,YAA0B,OAE1B,KAAAC,iBAAsC,GAG5Ch+B,KAAKorB,WAAaxP,EAAUzb,cAAc,OAC1CH,KAAKorB,WAAW/kB,MAAMxB,SAAW,WACjC7E,KAAKorB,WAAW/kB,MAAMyB,IAAM,WAC5B9H,KAAKorB,WAAW/kB,MAAMC,MAAQ,UAE9BtG,KAAKorB,WAAW/kB,MAAM43B,WAAa,MAEnCj+B,KAAKorB,WAAW/kB,MAAM63B,YAAc,OAEpC,MAAMC,EAAUviB,EAAUzb,cAAc,QAElCi+B,EAAOxiB,EAAUzb,cAAc,QACrCi+B,EAAK/3B,MAAMovB,WAAa,OAExB,MAAM4I,EAASziB,EAAUzb,cAAc,QACvCk+B,EAAOh4B,MAAMi4B,UAAY,SAEzB,MAAMC,EAAa3iB,EAAUzb,cAAc,QAC3Co+B,EAAWl4B,MAAMovB,WAAa,OAC9B8I,EAAWl4B,MAAMi4B,UAAY,SAG7Bt+B,KAAKg+B,iBAAmB,CAACG,EAASC,EAAMC,EAAQE,GAChDv+B,KAAKorB,WAAWzqB,YAAYw9B,GAC5Bn+B,KAAKorB,WAAWzqB,YAAYy9B,GAC5Bp+B,KAAKorB,WAAWzqB,YAAY09B,GAC5Br+B,KAAKorB,WAAWzqB,YAAY49B,GAE5B3iB,EAAU4iB,KAAK79B,YAAYX,KAAKorB,YAEhCprB,KAAKqJ,OACP,CAEO,OAAAM,GACL3J,KAAKorB,WAAW9nB,SAChBtD,KAAKg+B,iBAAiB/8B,OAAS,EAC/BjB,KAAKy+B,YAAS5zB,CAChB,CAKO,KAAAxB,GACLrJ,KAAK09B,MAAMgB,MAAI,MAEf1+B,KAAKy+B,OAAS,IAAI9xB,GACpB,CAOO,OAAA6oB,CAAQmJ,EAAc1N,EAAkB2N,EAAoBC,GAE7DF,IAAS3+B,KAAK49B,OACb3M,IAAajxB,KAAK69B,WAClBe,IAAW5+B,KAAK89B,SAChBe,IAAe7+B,KAAK+9B,cAKzB/9B,KAAK49B,MAAQe,EACb3+B,KAAK69B,UAAY5M,EACjBjxB,KAAK89B,QAAUc,EACf5+B,KAAK+9B,YAAcc,EAEnB7+B,KAAKorB,WAAW/kB,MAAM2qB,WAAahxB,KAAK49B,MACxC59B,KAAKorB,WAAW/kB,MAAM4qB,SAAW,GAAGjxB,KAAK69B,cACzC79B,KAAKg+B,iBAAiB,GAAqB33B,MAAMovB,WAAa,GAAGmJ,IACjE5+B,KAAKg+B,iBAAiB,GAAkB33B,MAAMovB,WAAa,GAAGoJ,IAC9D7+B,KAAKg+B,iBAAiB,GAAoB33B,MAAMovB,WAAa,GAAGmJ,IAChE5+B,KAAKg+B,iBAAiB,GAAyB33B,MAAMovB,WAAa,GAAGoJ,IAErE7+B,KAAKqJ,QACP,CAMO,GAAAH,CAAIqtB,EAAW6H,EAAwBC,GAC5C,IAAIS,EAAK,EACT,IAAKV,IAASC,GAAuB,IAAb9H,EAAEt1B,SAAiB69B,EAAKvI,EAAEnS,WAAW,IAAM,IACjE,OAAqB,OAAdpkB,KAAK09B,MAAMoB,GACd9+B,KAAK09B,MAAMoB,GACV9+B,KAAK09B,MAAMoB,GAAM9+B,KAAK++B,SAASxI,EAAG,GAEzC,IAAI3zB,EAAM2zB,EACN6H,IAAMx7B,GAAO,KACby7B,IAAQz7B,GAAO,KACnB,IAAI0D,EAAQtG,KAAKy+B,OAAQv1B,IAAItG,GAC7B,QAAciI,IAAVvE,EAAqB,CACvB,IAAI04B,EAAU,EACVZ,IAAMY,GAAW,GACjBX,IAAQW,GAAW,GACvB14B,EAAQtG,KAAK++B,SAASxI,EAAGyI,GACzBh/B,KAAKy+B,OAAQz1B,IAAIpG,EAAK0D,E,CAExB,OAAOA,CACT,CAEU,QAAAy4B,CAASxI,EAAWyI,GAC5B,MAAMtf,EAAK1f,KAAKg+B,iBAAiBgB,GAEjC,OADAtf,EAAGjc,YAAc8yB,EAAE3D,OAAO,IACnBlT,EAAGiI,YAAc,EAC1B,E,gICtJF,gBAEa,EAAA6O,uBAAyB,IAEzB,EAAAyI,YAAc,GAId,EAAAC,cAAoC,EAAAvkB,WAAa,EAAAwkB,aAAe,SAAW,a,eCCxF,SAAgBC,EAAiBC,GAI/B,OAAO,OAAUA,GAAaA,GAAa,KAC7C,C,kLAZA,wBAAgC/3B,GAC9B,IAAKA,EACH,MAAM,IAAI5F,MAAM,2BAElB,OAAO4F,CACT,EAEA,qBAOA,sCAA2C+3B,GACzC,OAAO,OAAUA,GAAaA,GAAa,KAC7C,EAMA,2CAAgDA,GAC9C,OAAOD,EAAiBC,IAL1B,SAA2BA,GACzB,OAAO,MAAUA,GAAaA,GAAa,IAC7C,CAGwCC,CAAkBD,EAC1D,EAEA,oCACE,MAAO,CACLn5B,IAAK,CACHK,OAiBG,CACLD,MAAO,EACPF,OAAQ,GAlBND,KAgBG,CACLG,MAAO,EACPF,OAAQ,IAhBRmiB,OAAQ,CACNhiB,OAaG,CACLD,MAAO,EACPF,OAAQ,GAdND,KAYG,CACLG,MAAO,EACPF,OAAQ,GAbNhE,KAAM,CACJkE,MAAO,EACPF,OAAQ,EACRwB,KAAM,EACNE,IAAK,IAIb,C,uFCvCA,uBAuBE,WAAArI,CACUsK,GAAA,KAAAA,eAAAA,EApBH,KAAAw1B,mBAA6B,EAO7B,KAAAC,qBAA+B,CAetC,CAKO,cAAAhc,GACLxjB,KAAKsjB,oBAAiBzY,EACtB7K,KAAKujB,kBAAe1Y,EACpB7K,KAAKu/B,mBAAoB,EACzBv/B,KAAKw/B,qBAAuB,CAC9B,CAKA,uBAAWC,GACT,OAAIz/B,KAAKu/B,kBACA,CAAC,EAAG,GAGRv/B,KAAKujB,cAAiBvjB,KAAKsjB,gBAIzBtjB,KAAK0/B,6BAA+B1/B,KAAKujB,aAHvCvjB,KAAKsjB,cAIhB,CAMA,qBAAWqc,GACT,GAAI3/B,KAAKu/B,kBACP,MAAO,CAACv/B,KAAK+J,eAAe6D,KAAM5N,KAAK+J,eAAe5F,OAAOwV,MAAQ3Z,KAAK+J,eAAetJ,KAAO,GAGlG,GAAKT,KAAKsjB,eAAV,CAKA,IAAKtjB,KAAKujB,cAAgBvjB,KAAK0/B,6BAA8B,CAC3D,MAAME,EAAkB5/B,KAAKsjB,eAAe,GAAKtjB,KAAKw/B,qBACtD,OAAII,EAAkB5/B,KAAK+J,eAAe6D,KAEpCgyB,EAAkB5/B,KAAK+J,eAAe6D,MAAS,EAC1C,CAAC5N,KAAK+J,eAAe6D,KAAM5N,KAAKsjB,eAAe,GAAK7P,KAAKgX,MAAMmV,EAAkB5/B,KAAK+J,eAAe6D,MAAQ,GAE/G,CAACgyB,EAAkB5/B,KAAK+J,eAAe6D,KAAM5N,KAAKsjB,eAAe,GAAK7P,KAAKgX,MAAMmV,EAAkB5/B,KAAK+J,eAAe6D,OAEzH,CAACgyB,EAAiB5/B,KAAKsjB,eAAe,G,CAI/C,GAAItjB,KAAKw/B,sBAEHx/B,KAAKujB,aAAa,KAAOvjB,KAAKsjB,eAAe,GAAI,CAEnD,MAAMsc,EAAkB5/B,KAAKsjB,eAAe,GAAKtjB,KAAKw/B,qBACtD,OAAII,EAAkB5/B,KAAK+J,eAAe6D,KACjC,CAACgyB,EAAkB5/B,KAAK+J,eAAe6D,KAAM5N,KAAKsjB,eAAe,GAAK7P,KAAKgX,MAAMmV,EAAkB5/B,KAAK+J,eAAe6D,OAEzH,CAAC6F,KAAKG,IAAIgsB,EAAiB5/B,KAAKujB,aAAa,IAAKvjB,KAAKujB,aAAa,G,CAG/E,OAAOvjB,KAAKujB,Y,CACd,CAKO,0BAAAmc,GACL,MAAM19B,EAAQhC,KAAKsjB,eACbrhB,EAAMjC,KAAKujB,aACjB,SAAKvhB,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,GACrE,CAOO,UAAA49B,CAAWhiB,GAUhB,OARI7d,KAAKsjB,iBACPtjB,KAAKsjB,eAAe,IAAMzF,GAExB7d,KAAKujB,eACPvjB,KAAKujB,aAAa,IAAM1F,GAItB7d,KAAKujB,cAAgBvjB,KAAKujB,aAAa,GAAK,GAC9CvjB,KAAKwjB,kBACE,IAILxjB,KAAKsjB,gBAAkBtjB,KAAKsjB,eAAe,GAAK,IAClDtjB,KAAKsjB,eAAe,GAAK,IAEpB,EACT,E,qgBCzIF,gBACA,UAEA,SAQO,IAAM5G,EAAe,kBAArB,cAA8B,EAAAld,WAOnC,gBAAW2lB,GAA0B,OAAOnlB,KAAKsG,MAAQ,GAAKtG,KAAKoG,OAAS,CAAG,CAK/E,WAAA3G,CACES,EACAmuB,EACiB,GAEjB1uB,QAFkC,KAAA6Q,gBAAAA,EAZ7B,KAAAlK,MAAgB,EAChB,KAAAF,OAAiB,EAKP,KAAA05B,kBAAoB9/B,KAAKqB,SAAS,IAAI,EAAAiJ,cACvC,KAAAy1B,iBAAmB//B,KAAK8/B,kBAAkBt1B,MAQxDxK,KAAKggC,iBAAmB,IAAIC,EAAmB//B,EAAUmuB,EAAeruB,KAAKwQ,iBAC7ExQ,KAAKqB,SAASrB,KAAKwQ,gBAAgB0vB,uBAAuB,CAAC,aAAc,aAAa,IAAMlgC,KAAKuf,YACnG,CAEO,OAAAA,GACL,MAAM3O,EAAS5Q,KAAKggC,iBAAiBzgB,UACjC3O,EAAOtK,QAAUtG,KAAKsG,OAASsK,EAAOxK,SAAWpG,KAAKoG,SACxDpG,KAAKsG,MAAQsK,EAAOtK,MACpBtG,KAAKoG,OAASwK,EAAOxK,OACrBpG,KAAK8/B,kBAAkBpwB,OAE3B,G,kBA7BWgN,EAAe,GAevB,MAAAhK,kBAfQgK,GAgDb,MAAMujB,EAIJ,WAAAxgC,CACUmc,EACAukB,EACA3vB,GAFA,KAAAoL,UAAAA,EACA,KAAAukB,eAAAA,EACA,KAAA3vB,gBAAAA,EANF,KAAA4vB,QAA0B,CAAE95B,MAAO,EAAGF,OAAQ,GAQpDpG,KAAKqgC,gBAAkBrgC,KAAK4b,UAAUzb,cAAc,QACpDH,KAAKqgC,gBAAgBjgC,UAAUC,IAAI,8BACnCL,KAAKqgC,gBAAgB58B,YAAc,IAAImvB,OAAO,IAC9C5yB,KAAKqgC,gBAAgB9/B,aAAa,cAAe,QACjDP,KAAKqgC,gBAAgBh6B,MAAM43B,WAAa,MACxCj+B,KAAKqgC,gBAAgBh6B,MAAM63B,YAAc,OACzCl+B,KAAKmgC,eAAex/B,YAAYX,KAAKqgC,gBACvC,CAEO,OAAA9gB,GACLvf,KAAKqgC,gBAAgBh6B,MAAM2qB,WAAahxB,KAAKwQ,gBAAgBrJ,WAAW6pB,WACxEhxB,KAAKqgC,gBAAgBh6B,MAAM4qB,SAAW,GAAGjxB,KAAKwQ,gBAAgBrJ,WAAW8pB,aAGzE,MAAMqP,EAAW,CACfl6B,OAAQm6B,OAAOvgC,KAAKqgC,gBAAgB5X,cACpCniB,MAAOi6B,OAAOvgC,KAAKqgC,gBAAgB1Y,cAUrC,OALuB,IAAnB2Y,EAASh6B,OAAmC,IAApBg6B,EAASl6B,SACnCpG,KAAKogC,QAAQ95B,MAAQg6B,EAASh6B,MAAQ,GACtCtG,KAAKogC,QAAQh6B,OAASqN,KAAK4b,KAAKiR,EAASl6B,SAGpCpG,KAAKogC,OACd,E,8hBC7FF,gBACA,SACA,SACA,UAGA,MAAavG,UAAuB,EAAAyB,cASlC,WAAA77B,CAAY+gC,EAAsBnG,EAAe/zB,GAC/C3G,QANK,KAAA8gC,QAAkB,EAGlB,KAAAC,aAAuB,GAI5B1gC,KAAK+I,GAAKy3B,EAAUz3B,GACpB/I,KAAK8I,GAAK03B,EAAU13B,GACpB9I,KAAK0gC,aAAerG,EACpBr6B,KAAK4tB,OAAStnB,CAChB,CAEO,UAAAq6B,GAEL,OAAO,OACT,CAEO,QAAA5mB,GACL,OAAO/Z,KAAK4tB,MACd,CAEO,QAAA0M,GACL,OAAOt6B,KAAK0gC,YACd,CAEO,OAAAzD,GAGL,OAAO,OACT,CAEO,eAAA2D,CAAgBt5B,GACrB,MAAM,IAAI5F,MAAM,kBAClB,CAEO,aAAAm/B,GACL,MAAO,CAAC7gC,KAAK+I,GAAI/I,KAAKs6B,WAAYt6B,KAAK+Z,WAAY/Z,KAAKi9B,UAC1D,EA1CF,mBA6CO,IAAMlgB,EAAsB,yBAA5B,MAAMA,EAOX,WAAAtd,CACkB,GAAQ,KAAAsK,eAAAA,EALlB,KAAA+2B,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAA1I,UAAsB,IAAI,EAAAvnB,QAI9B,CAEG,QAAAzP,CAASmI,GACd,MAAMw3B,EAA2B,CAC/BC,GAAIjhC,KAAK+gC,yBACTv3B,WAIF,OADAxJ,KAAK8gC,kBAAkB78B,KAAK+8B,GACrBA,EAAOC,EAChB,CAEO,UAAAte,CAAWF,GAChB,IAAK,IAAIpjB,EAAI,EAAGA,EAAIW,KAAK8gC,kBAAkB7/B,OAAQ5B,IACjD,GAAIW,KAAK8gC,kBAAkBzhC,GAAG4hC,KAAOxe,EAEnC,OADAziB,KAAK8gC,kBAAkB31B,OAAO9L,EAAG,IAC1B,EAIX,OAAO,CACT,CAEO,mBAAA05B,CAAoB1Y,GACzB,GAAsC,IAAlCrgB,KAAK8gC,kBAAkB7/B,OACzB,MAAO,GAGT,MAAM0P,EAAO3Q,KAAK+J,eAAe5F,OAAOE,MAAM6E,IAAImX,GAClD,IAAK1P,GAAwB,IAAhBA,EAAK1P,OAChB,MAAO,GAGT,MAAMigC,EAA6B,GAC7BC,EAAUxwB,EAAK2Z,mBAAkB,GAMvC,IAAI8W,EAAmB,EACnBC,EAAqB,EACrBC,EAAwB,EACxBC,EAAc5wB,EAAK6wB,MAAM,GACzBC,EAAc9wB,EAAK+wB,MAAM,GAE7B,IAAK,IAAI11B,EAAI,EAAGA,EAAI2E,EAAKK,mBAAoBhF,IAG3C,GAFA2E,EAAKU,SAASrF,EAAGhM,KAAKq4B,WAEY,IAA9Br4B,KAAKq4B,UAAUte,WAAnB,CAMA,GAAI/Z,KAAKq4B,UAAUtvB,KAAOw4B,GAAevhC,KAAKq4B,UAAUvvB,KAAO24B,EAAa,CAG1E,GAAIz1B,EAAIo1B,EAAmB,EAAG,CAC5B,MAAMtI,EAAe94B,KAAK2hC,iBACxBR,EACAG,EACAD,EACA1wB,EACAywB,GAEF,IAAK,IAAI/hC,EAAI,EAAGA,EAAIy5B,EAAa73B,OAAQ5B,IACvC6hC,EAAOj9B,KAAK60B,EAAaz5B,G,CAK7B+hC,EAAmBp1B,EACnBs1B,EAAwBD,EACxBE,EAAcvhC,KAAKq4B,UAAUtvB,GAC7B04B,EAAczhC,KAAKq4B,UAAUvvB,E,CAG/Bu4B,GAAsBrhC,KAAKq4B,UAAUiC,WAAWr5B,QAAU,EAAAs5B,qBAAqBt5B,M,CAIjF,GAAIjB,KAAK+J,eAAe6D,KAAOwzB,EAAmB,EAAG,CACnD,MAAMtI,EAAe94B,KAAK2hC,iBACxBR,EACAG,EACAD,EACA1wB,EACAywB,GAEF,IAAK,IAAI/hC,EAAI,EAAGA,EAAIy5B,EAAa73B,OAAQ5B,IACvC6hC,EAAOj9B,KAAK60B,EAAaz5B,G,CAI7B,OAAO6hC,CACT,CAUQ,gBAAAS,CAAiBhxB,EAAcixB,EAAoBC,EAAkBt9B,EAAuBwuB,GAClG,MAAMrsB,EAAOiK,EAAKggB,UAAUiR,EAAYC,GAIxC,IAAIC,EAAsC,GAC1C,IACEA,EAAkB9hC,KAAK8gC,kBAAkB,GAAGt3B,QAAQ9C,E,CACpD,MAAOq7B,GACPvvB,QAAQuvB,MAAMA,E,CAEhB,IAAK,IAAI1iC,EAAI,EAAGA,EAAIW,KAAK8gC,kBAAkB7/B,OAAQ5B,IAEjD,IACE,MAAM2iC,EAAehiC,KAAK8gC,kBAAkBzhC,GAAGmK,QAAQ9C,GACvD,IAAK,IAAIsH,EAAI,EAAGA,EAAIg0B,EAAa/gC,OAAQ+M,IACvC+O,EAAuBklB,aAAaH,EAAiBE,EAAah0B,G,CAEpE,MAAO+zB,GACPvvB,QAAQuvB,MAAMA,E,CAIlB,OADA/hC,KAAKkiC,0BAA0BJ,EAAiBv9B,EAAUwuB,GACnD+O,CACT,CAUQ,yBAAAI,CAA0BhB,EAA4BvwB,EAAmBoiB,GAC/E,IAAIoP,EAAoB,EACpBC,GAAsB,EACtBf,EAAqB,EACrBgB,EAAenB,EAAOiB,GAG1B,GAAKE,EAAL,CAIA,IAAK,IAAIr2B,EAAI+mB,EAAU/mB,EAAIhM,KAAK+J,eAAe6D,KAAM5B,IAAK,CACxD,MAAM1F,EAAQqK,EAAKoJ,SAAS/N,GACtB/K,EAAS0P,EAAK2xB,UAAUt2B,GAAG/K,QAAU,EAAAs5B,qBAAqBt5B,OAIhE,GAAc,IAAVqF,EAAJ,CAWA,IANK87B,GAAuBC,EAAa,IAAMhB,IAC7CgB,EAAa,GAAKr2B,EAClBo2B,GAAsB,GAIpBC,EAAa,IAAMhB,EAAoB,CAOzC,GANAgB,EAAa,GAAKr2B,EAGlBq2B,EAAenB,IAASiB,IAGnBE,EACH,MAOEA,EAAa,IAAMhB,GACrBgB,EAAa,GAAKr2B,EAClBo2B,GAAsB,GAEtBA,GAAsB,C,CAM1Bf,GAAsBpgC,C,EAKpBohC,IACFA,EAAa,GAAKriC,KAAK+J,eAAe6D,K,CAE1C,CAUQ,mBAAOq0B,CAAaf,EAA4BqB,GACtD,IAAIC,GAAU,EACd,IAAK,IAAInjC,EAAI,EAAGA,EAAI6hC,EAAOjgC,OAAQ5B,IAAK,CACtC,MAAMqO,EAAQwzB,EAAO7hC,GACrB,GAAKmjC,EAAL,CAwBE,GAAID,EAAS,IAAM70B,EAAM,GAIvB,OADAwzB,EAAO7hC,EAAI,GAAG,GAAKkjC,EAAS,GACrBrB,EAGT,GAAIqB,EAAS,IAAM70B,EAAM,GAKvB,OAFAwzB,EAAO7hC,EAAI,GAAG,GAAKoU,KAAKG,IAAI2uB,EAAS,GAAI70B,EAAM,IAC/CwzB,EAAO/1B,OAAO9L,EAAG,GACV6hC,EAKTA,EAAO/1B,OAAO9L,EAAG,GACjBA,G,KA1CF,CACE,GAAIkjC,EAAS,IAAM70B,EAAM,GAGvB,OADAwzB,EAAO/1B,OAAO9L,EAAG,EAAGkjC,GACbrB,EAGT,GAAIqB,EAAS,IAAM70B,EAAM,GAIvB,OADAA,EAAM,GAAK+F,KAAKC,IAAI6uB,EAAS,GAAI70B,EAAM,IAChCwzB,EAGLqB,EAAS,GAAK70B,EAAM,KAGtBA,EAAM,GAAK+F,KAAKC,IAAI6uB,EAAS,GAAI70B,EAAM,IACvC80B,GAAU,E,EAoChB,OARIA,EAEFtB,EAAOA,EAAOjgC,OAAS,GAAG,GAAKshC,EAAS,GAGxCrB,EAAOj9B,KAAKs+B,GAGPrB,CACT,G,yBAvRWnkB,EAAsB,GAQ9B,MAAA1M,iBARQ0M,E,4FCnDb,2BAME,WAAAtd,CACUwwB,EACQ/sB,GADR,KAAA+sB,UAAAA,EACQ,KAAA/sB,OAAAA,EALV,KAAAu/B,YAAa,EACb,KAAAC,sBAAwC73B,EAM9C7K,KAAKiwB,UAAUjvB,iBAAiB,SAAS,IAAMhB,KAAKyiC,YAAa,IACjEziC,KAAKiwB,UAAUjvB,iBAAiB,QAAQ,IAAMhB,KAAKyiC,YAAa,GAClE,CAEA,OAAWja,GACT,OAAOxoB,KAAKkD,OAAO6Q,gBACrB,CAEA,aAAWgnB,GAKT,YAJ8BlwB,IAA1B7K,KAAK0iC,mBACP1iC,KAAK0iC,iBAAmB1iC,KAAKyiC,YAAcziC,KAAKiwB,UAAUpU,cAAc8mB,WACxEC,gBAAe,IAAM5iC,KAAK0iC,sBAAmB73B,KAExC7K,KAAK0iC,gBACd,E,mgBC1BF,gBACA,UAEO,IAAMllB,EAAY,eAAlB,MAGL,WAAA/d,CACmCG,EACE6c,GADF,KAAA7c,eAAAA,EACE,KAAA6c,iBAAAA,CAErC,CAEO,SAAAzM,CAAUxF,EAA2C/I,EAAsBmwB,EAAkBte,EAAkB0e,GACpH,OAAO,IAAAhiB,WACL9M,OACAsH,EACA/I,EACAmwB,EACAte,EACAtT,KAAKyc,iBAAiB0I,aACtBnlB,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,MACxCtG,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,OACxC4rB,EAEJ,CAEO,oBAAApS,CAAqBpV,EAAmB/I,GAC7C,MAAMsO,GAAS,IAAAqhB,4BAA2BluB,OAAQsH,EAAO/I,GACzD,GAAKzB,KAAKyc,iBAAiB0I,aAK3B,OAFApV,EAAO,GAAK0D,KAAKC,IAAID,KAAKG,IAAI7D,EAAO,GAAI,GAAI/P,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOD,MAAQ,GAC/FyJ,EAAO,GAAK0D,KAAKC,IAAID,KAAKG,IAAI7D,EAAO,GAAI,GAAI/P,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOH,OAAS,GACzF,CACLga,IAAK3M,KAAKgX,MAAM1a,EAAO,GAAK/P,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKG,OACpE+Z,IAAK5M,KAAKgX,MAAM1a,EAAO,GAAK/P,KAAKJ,eAAeqG,WAAWC,IAAIC,KAAKC,QACpE4F,EAAGyH,KAAKgX,MAAM1a,EAAO,IACrB9D,EAAGwH,KAAKgX,MAAM1a,EAAO,IAEzB,G,eApCWyN,EAAY,GAIpB,MAAAhX,gBACA,MAAAmW,mBALQa,E,ogBCFb,gBACA,UACA,SACA,UACA,UAEA,UACA,UACA,UASO,IAAMP,EAAa,gBAAnB,cAA4B,EAAAzd,WA6BjC,cAAWyG,GAAkC,OAAOjG,KAAK6iC,UAAW58B,UAAY,CAEhF,WAAAxG,CACU8T,EACR9L,EACiBR,EACC,EACE67B,EACJ1Q,EACK2Q,EACNpc,GAuDf,GArDAhnB,QATQ,KAAA4T,UAAAA,EAG2B,KAAAkJ,iBAAAA,EA7B7B,KAAAumB,kBAAoB,IAAI,EAAAC,kBAExB,KAAAC,WAAqB,EACrB,KAAAC,mBAA6B,EAC7B,KAAAC,yBAAmC,EACnC,KAAAC,wBAAkC,EAClC,KAAAC,aAAuB,EACvB,KAAAC,cAAwB,EACxB,KAAAC,gBAAmC,CACzCxhC,WAAO6I,EACP5I,SAAK4I,EACL4T,kBAAkB,GAGH,KAAAglB,oBAAsBzjC,KAAKqB,SAAS,IAAI,EAAAiJ,cACzC,KAAAvH,mBAAsB/C,KAAKyjC,oBAAoBj5B,MAC9C,KAAAk5B,0BAA4B1jC,KAAKqB,SAAS,IAAI,EAAAiJ,cAC/C,KAAA+E,yBAA2BrP,KAAK0jC,0BAA0Bl5B,MACzD,KAAAmL,UAAY3V,KAAKqB,SAAS,IAAI,EAAAiJ,cAC/B,KAAAxI,SAAW9B,KAAK2V,UAAUnL,MACzB,KAAAm5B,kBAAoB3jC,KAAKqB,SAAS,IAAI,EAAAiJ,cACvC,KAAAs5B,iBAAmB5jC,KAAK2jC,kBAAkBn5B,MAgBxDxK,KAAKqB,SAAS,CAAEsI,QAAS,KAAK,MAAC,OAAc,QAAd,EAAA3J,KAAK6iC,iBAAS,eAAEl5B,SAAS,IAExD3J,KAAK6jC,iBAAmB,IAAI,EAAAC,gBAAgBf,EAAmB7/B,QAAQ,CAAClB,EAAOC,IAAQjC,KAAKuB,YAAYS,EAAOC,KAC/GjC,KAAKqB,SAASrB,KAAK6jC,kBAEnB7jC,KAAKgD,kBAAoB,IAAI,EAAAC,iBAAiB8/B,EAAmB7/B,QACjElD,KAAKgD,kBAAkBG,aAAY,IAAMnD,KAAK42B,iCAC9C52B,KAAKqB,SAASrB,KAAKgD,mBAEnBhD,KAAKqB,SAAS+wB,EAAcxwB,UAAS,IAAM5B,KAAK+jC,kBAChD/jC,KAAKqB,SAAS+wB,EAAczZ,QAAQmP,kBAAiB,KAAK,MAAC,OAAc,QAAd,EAAA9nB,KAAK6iC,iBAAS,eAAEx5B,OAAO,KAClFrJ,KAAKqB,SAAS4F,EAAe4tB,gBAAe,IAAM70B,KAAK80B,2BACvD90B,KAAKqB,SAASrB,KAAKyc,iBAAiBsjB,kBAAiB,IAAM//B,KAAK62B,2BAKhE72B,KAAKqB,SAASyhC,EAAkBvX,wBAAuB,IAAMvrB,KAAK+jC,kBAClE/jC,KAAKqB,SAASyhC,EAAkBtX,qBAAoB,IAAMxrB,KAAK+jC,kBAG/D/jC,KAAKqB,SAAS4F,EAAei5B,uBAAuB,CAClD,eACA,6BACA,gBACA,aACA,aACA,WACA,aACA,iBACA,yBACC,KACDlgC,KAAKqJ,QACLrJ,KAAKke,aAAakU,EAAcxkB,KAAMwkB,EAAc3xB,MACpDT,KAAK+jC,cAAc,KAIrB/jC,KAAKqB,SAAS4F,EAAei5B,uBAAuB,CAClD,cACA,gBACC,IAAMlgC,KAAKiiB,YAAYmQ,EAAcjuB,OAAO8H,EAAGmmB,EAAcjuB,OAAO8H,GAAG,MAI1EjM,KAAKqB,UAAS,IAAA+B,0BAAyB2/B,EAAmB7/B,OAAQ,UAAU,IAAMlD,KAAK42B,kCAEvF52B,KAAKqB,SAASslB,EAAauB,gBAAe,IAAMloB,KAAK+jC,kBAIjD,yBAA0BhB,EAAmB7/B,OAAQ,CACvD,MAAM8gC,EAAW,IAAIjB,EAAmB7/B,OAAO+gC,sBAAqBpjC,GAAKb,KAAKkkC,0BAA0BrjC,EAAEA,EAAEI,OAAS,KAAK,CAAEkjC,UAAW,IACvIH,EAASI,QAAQ38B,GACjBzH,KAAKqB,SAAS,CAAEsI,QAAS,IAAMq6B,EAASK,c,CAE5C,CAEQ,yBAAAH,CAA0BI,GAChCtkC,KAAKkjC,eAAqCr4B,IAAzBy5B,EAAMC,eAA4D,IAA5BD,EAAME,mBAA4BF,EAAMC,eAG1FvkC,KAAKkjC,WAAcljC,KAAKyc,iBAAiB0I,cAC5CnlB,KAAKyc,iBAAiB8C,WAGnBvf,KAAKkjC,WAAaljC,KAAKmjC,oBAC1BnjC,KAAKgjC,kBAAkByB,QACvBzkC,KAAKiiB,YAAY,EAAGjiB,KAAKuT,UAAY,GACrCvT,KAAKmjC,mBAAoB,EAE7B,CAEO,WAAAlhB,CAAYjgB,EAAeC,EAAayiC,GAAwB,GACjE1kC,KAAKkjC,UACPljC,KAAKmjC,mBAAoB,GAGtBuB,IACH1kC,KAAKojC,yBAA0B,GAEjCpjC,KAAK6jC,iBAAiB3/B,QAAQlC,EAAOC,EAAKjC,KAAKuT,WACjD,CAEQ,WAAAhS,CAAYS,EAAeC,GAC5BjC,KAAK6iC,YAOV7gC,EAAQyR,KAAKC,IAAI1R,EAAOhC,KAAKuT,UAAY,GACzCtR,EAAMwR,KAAKC,IAAIzR,EAAKjC,KAAKuT,UAAY,GAGrCvT,KAAK6iC,UAAU9L,WAAW/0B,EAAOC,GAG7BjC,KAAKqjC,yBACPrjC,KAAK6iC,UAAUrkB,uBAAuBxe,KAAKwjC,gBAAgBxhC,MAAOhC,KAAKwjC,gBAAgBvhC,IAAKjC,KAAKwjC,gBAAgB/kB,kBACjHze,KAAKqjC,wBAAyB,GAI3BrjC,KAAKojC,yBACRpjC,KAAK0jC,0BAA0Bh0B,KAAK,CAAE1N,QAAOC,QAE/CjC,KAAK2V,UAAUjG,KAAK,CAAE1N,QAAOC,QAC7BjC,KAAKojC,yBAA0B,EACjC,CAEO,MAAAlmB,CAAOtP,EAAcnN,GAC1BT,KAAKuT,UAAY9S,EACjBT,KAAK2kC,qBACP,CAEQ,qBAAA7P,GACD90B,KAAK6iC,YAGV7iC,KAAKiiB,YAAY,EAAGjiB,KAAKuT,UAAY,GACrCvT,KAAK2kC,sBACP,CAEQ,mBAAAA,GACD3kC,KAAK6iC,YAIN7iC,KAAK6iC,UAAU58B,WAAWC,IAAIK,OAAOD,QAAUtG,KAAKsjC,cAAgBtjC,KAAK6iC,UAAU58B,WAAWC,IAAIK,OAAOH,SAAWpG,KAAKujC,eAG7HvjC,KAAKyjC,oBAAoB/zB,KAAK1P,KAAK6iC,UAAU58B,YAC/C,CAEO,WAAAoX,GACL,QAASrd,KAAK6iC,SAChB,CAEO,WAAAvlB,CAAYsnB,G,MAEH,QAAd,EAAA5kC,KAAK6iC,iBAAS,SAAEl5B,UAChB3J,KAAK6iC,UAAY+B,EACjB5kC,KAAK6iC,UAAUtkB,iBAAgB1d,GAAKb,KAAKiiB,YAAYphB,EAAEmB,MAAOnB,EAAEoB,KAAK,KAGrEjC,KAAKqjC,wBAAyB,EAC9BrjC,KAAK+jC,cACP,CAEO,kBAAA9wB,CAAmBvC,GACxB,OAAO1Q,KAAK6jC,iBAAiB5wB,mBAAmBvC,EAClD,CAEQ,YAAAqzB,GACF/jC,KAAKkjC,UACPljC,KAAKmjC,mBAAoB,EAEzBnjC,KAAKiiB,YAAY,EAAGjiB,KAAKuT,UAAY,EAEzC,CAEO,iBAAAgS,G,QACAvlB,KAAK6iC,YAGsB,QAAhC,KAAA7iC,KAAK6iC,WAAUtd,yBAAiB,iBAChCvlB,KAAK+jC,eACP,CAEO,4BAAAnN,GAGL52B,KAAKyc,iBAAiB8C,UAEjBvf,KAAK6iC,YAGV7iC,KAAK6iC,UAAUjM,+BACf52B,KAAKiiB,YAAY,EAAGjiB,KAAKuT,UAAY,GACvC,CAEO,YAAA2K,CAAatQ,EAAcnN,GAC3BT,KAAK6iC,YAGN7iC,KAAKkjC,UACPljC,KAAKgjC,kBAAkBh6B,KAAI,IAAMhJ,KAAK6iC,UAAW3kB,aAAatQ,EAAMnN,KAEpET,KAAK6iC,UAAU3kB,aAAatQ,EAAMnN,GAEpCT,KAAK+jC,eACP,CAGO,qBAAAlN,G,MACS,QAAd,EAAA72B,KAAK6iC,iBAAS,SAAEhM,uBAClB,CAEO,UAAA1Y,G,MACS,QAAd,EAAAne,KAAK6iC,iBAAS,SAAE1kB,YAClB,CAEO,WAAAC,G,MACS,QAAd,EAAApe,KAAK6iC,iBAAS,SAAEzkB,aAClB,CAEO,sBAAAI,CAAuBxc,EAAqCC,EAAmCwc,G,MACpGze,KAAKwjC,gBAAgBxhC,MAAQA,EAC7BhC,KAAKwjC,gBAAgBvhC,IAAMA,EAC3BjC,KAAKwjC,gBAAgB/kB,iBAAmBA,EAC1B,QAAd,EAAAze,KAAK6iC,iBAAS,SAAErkB,uBAAuBxc,EAAOC,EAAKwc,EACrD,CAEO,gBAAAR,G,MACS,QAAd,EAAAje,KAAK6iC,iBAAS,SAAE5kB,kBAClB,CAEO,KAAA5U,G,MACS,QAAd,EAAArJ,KAAK6iC,iBAAS,SAAEx5B,OAClB,G,gBAxQW4T,EAAa,GAkCrB,MAAAvK,iBACA,MAAAiK,kBACA,MAAAlG,oBACA,MAAApG,gBACA,MAAAmM,qBACA,MAAAK,gBAvCQI,E,ugBCfb,gBACA,SACA,SACA,UACA,UAEA,UACA,UACA,UACA,SACA,UAwBM4nB,EAA0B9f,OAAOC,aAAa,KAC9C8f,EAA+B,IAAIC,OAAOF,EAAyB,KA4BlE,IAAMxmB,EAAgB,mBAAtB,cAA+B,EAAA7e,WAmDpC,WAAAC,CACmB8L,EACAyf,EACAga,EACD,EACF,EACC,EACE,EACD,EACK,GAErBrlC,QAViB,KAAA4L,SAAAA,EACA,KAAAyf,eAAAA,EACA,KAAAga,WAAAA,EACgB,KAAAj7B,eAAAA,EACF,KAAAmmB,aAAAA,EACC,KAAA1kB,cAAAA,EACE,KAAAgF,gBAAAA,EACD,KAAA5Q,eAAAA,EACK,KAAAyc,oBAAAA,EAnDhC,KAAA4oB,kBAA4B,EAqB5B,KAAAC,UAAW,EAKX,KAAA7M,UAAsB,IAAI,EAAAvnB,SAE1B,KAAAq0B,oBAA8B,EAC9B,KAAAC,kBAA4B,EAC5B,KAAAC,wBAAmDx6B,EACnD,KAAAy6B,sBAAiDz6B,EAExC,KAAA06B,uBAAyBvlC,KAAKqB,SAAS,IAAI,EAAAiJ,cAC5C,KAAAoU,sBAAwB1e,KAAKulC,uBAAuB/6B,MACnD,KAAAg7B,iBAAmBxlC,KAAKqB,SAAS,IAAI,EAAAiJ,cACtC,KAAAiU,gBAAkBve,KAAKwlC,iBAAiBh7B,MACvC,KAAAoL,mBAAqB5V,KAAKqB,SAAS,IAAI,EAAAiJ,cACxC,KAAAuL,kBAAoB7V,KAAK4V,mBAAmBpL,MAC3C,KAAAkd,sBAAwB1nB,KAAKqB,SAAS,IAAI,EAAAiJ,cAC3C,KAAAsT,qBAAuB5d,KAAK0nB,sBAAsBld,MAgBhExK,KAAKylC,mBAAqBj7B,GAASxK,KAAKyL,iBAAiBjB,GACzDxK,KAAK0lC,iBAAmBl7B,GAASxK,KAAK2L,eAAenB,GACrDxK,KAAKkwB,aAAayV,aAAY,KACxB3lC,KAAKsa,cACPta,KAAKwjB,gB,IAGTxjB,KAAK4lC,cAAgB5lC,KAAK+J,eAAe5F,OAAOE,MAAMwhC,QAAOhoB,GAAU7d,KAAK8lC,YAAYjoB,KACxF7d,KAAKqB,SAASrB,KAAK+J,eAAe4O,QAAQmP,kBAAiBjnB,GAAKb,KAAK+lC,sBAAsBllC,MAE3Fb,KAAKif,SAELjf,KAAKgmC,OAAS,IAAI,EAAAC,eAAejmC,KAAK+J,gBACtC/J,KAAKkmC,qBAAuB,EAE5BlmC,KAAKqB,UAAS,IAAAgC,eAAa,KACzBrD,KAAKmmC,2BAA2B,IAEpC,CAEO,KAAAnvB,GACLhX,KAAKwjB,gBACP,CAMO,OAAAxE,GACLhf,KAAKwjB,iBACLxjB,KAAKklC,UAAW,CAClB,CAKO,MAAAjmB,GACLjf,KAAKklC,UAAW,CAClB,CAEA,kBAAW5hB,GAAiD,OAAOtjB,KAAKgmC,OAAOvG,mBAAqB,CACpG,gBAAWlc,GAA+C,OAAOvjB,KAAKgmC,OAAOrG,iBAAmB,CAKhG,gBAAWrlB,GACT,MAAMtY,EAAQhC,KAAKgmC,OAAOvG,oBACpBx9B,EAAMjC,KAAKgmC,OAAOrG,kBACxB,SAAK39B,IAAUC,GAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,GACjD,CAKA,iBAAWmG,GACT,MAAMpG,EAAQhC,KAAKgmC,OAAOvG,oBACpBx9B,EAAMjC,KAAKgmC,OAAOrG,kBACxB,IAAK39B,IAAUC,EACb,MAAO,GAGT,MAAMkC,EAASnE,KAAK+J,eAAe5F,OAC7ByM,EAAmB,GAEzB,GAAkC,IAA9B5Q,KAAKkmC,qBAA+C,CAEtD,GAAIlkC,EAAM,KAAOC,EAAI,GACnB,MAAO,GAKT,MAAM8wB,EAAW/wB,EAAM,GAAKC,EAAI,GAAKD,EAAM,GAAKC,EAAI,GAC9C+wB,EAAShxB,EAAM,GAAKC,EAAI,GAAKA,EAAI,GAAKD,EAAM,GAClD,IAAK,IAAI3C,EAAI2C,EAAM,GAAI3C,GAAK4C,EAAI,GAAI5C,IAAK,CACvC,MAAM+mC,EAAWjiC,EAAOK,4BAA4BnF,GAAG,EAAM0zB,EAAUC,GACvEpiB,EAAO3M,KAAKmiC,E,MAET,CAEL,MAAMC,EAAiBrkC,EAAM,KAAOC,EAAI,GAAKA,EAAI,QAAK4I,EACtD+F,EAAO3M,KAAKE,EAAOK,4BAA4BxC,EAAM,IAAI,EAAMA,EAAM,GAAIqkC,IAGzE,IAAK,IAAIhnC,EAAI2C,EAAM,GAAK,EAAG3C,GAAK4C,EAAI,GAAK,EAAG5C,IAAK,CAC/C,MAAMua,EAAazV,EAAOE,MAAM6E,IAAI7J,GAC9B+mC,EAAWjiC,EAAOK,4BAA4BnF,GAAG,IACnDua,aAAU,EAAVA,EAAYyQ,WACdzZ,EAAOA,EAAO3P,OAAS,IAAMmlC,EAE7Bx1B,EAAO3M,KAAKmiC,E,CAKhB,GAAIpkC,EAAM,KAAOC,EAAI,GAAI,CACvB,MAAM2X,EAAazV,EAAOE,MAAM6E,IAAIjH,EAAI,IAClCmkC,EAAWjiC,EAAOK,4BAA4BvC,EAAI,IAAI,EAAM,EAAGA,EAAI,IACrE2X,GAAcA,EAAYyQ,UAC5BzZ,EAAOA,EAAO3P,OAAS,IAAMmlC,EAE7Bx1B,EAAO3M,KAAKmiC,E,EAWlB,OAJwBx1B,EAAO1D,KAAIyD,GAC1BA,EAAKhK,QAAQm+B,EAA8B,OACjDtJ,KAAKrmB,EAAQsP,UAAY,OAAS,KAGvC,CAKO,cAAAjB,GACLxjB,KAAKgmC,OAAOxiB,iBACZxjB,KAAKmmC,4BACLnmC,KAAKkE,UACLlE,KAAK4V,mBAAmBlG,MAC1B,CAOO,OAAAxL,CAAQoiC,GAERtmC,KAAKqnB,yBACRrnB,KAAKqnB,uBAAyBrnB,KAAKqc,oBAAoBnZ,OAAOgQ,uBAAsB,IAAMlT,KAAKqoB,cAK7FlT,EAAQ4F,SAAWurB,GACCtmC,KAAKoI,cACTnH,QAChBjB,KAAKulC,uBAAuB71B,KAAK1P,KAAKoI,cAG5C,CAMQ,QAAAigB,GACNroB,KAAKqnB,4BAAyBxc,EAC9B7K,KAAKwlC,iBAAiB91B,KAAK,CACzB1N,MAAOhC,KAAKgmC,OAAOvG,oBACnBx9B,IAAKjC,KAAKgmC,OAAOrG,kBACjBlhB,iBAAgD,IAA9Bze,KAAKkmC,sBAE3B,CAMQ,mBAAAK,CAAoB/7B,GAC1B,MAAMuF,EAAS/P,KAAKwmC,sBAAsBh8B,GACpCxI,EAAQhC,KAAKgmC,OAAOvG,oBACpBx9B,EAAMjC,KAAKgmC,OAAOrG,kBAExB,SAAK39B,GAAUC,GAAQ8N,IAIhB/P,KAAKymC,sBAAsB12B,EAAQ/N,EAAOC,EACnD,CAEO,iBAAAykC,CAAkB16B,EAAWC,GAClC,MAAMjK,EAAQhC,KAAKgmC,OAAOvG,oBACpBx9B,EAAMjC,KAAKgmC,OAAOrG,kBACxB,SAAK39B,IAAUC,IAGRjC,KAAKymC,sBAAsB,CAACz6B,EAAGC,GAAIjK,EAAOC,EACnD,CAEU,qBAAAwkC,CAAsB12B,EAA0B/N,EAAyBC,GACjF,OAAQ8N,EAAO,GAAK/N,EAAM,IAAM+N,EAAO,GAAK9N,EAAI,IAC3CD,EAAM,KAAOC,EAAI,IAAM8N,EAAO,KAAO/N,EAAM,IAAM+N,EAAO,IAAM/N,EAAM,IAAM+N,EAAO,GAAK9N,EAAI,IAC1FD,EAAM,GAAKC,EAAI,IAAM8N,EAAO,KAAO9N,EAAI,IAAM8N,EAAO,GAAK9N,EAAI,IAC7DD,EAAM,GAAKC,EAAI,IAAM8N,EAAO,KAAO/N,EAAM,IAAM+N,EAAO,IAAM/N,EAAM,EACzE,CAMQ,mBAAA2kC,CAAoBn8B,EAAmBo8B,G,QAE7C,MAAMl5B,EAAyC,QAAjC,EAA2B,QAA3B,EAAA1N,KAAKglC,WAAWn7B,mBAAW,eAAEwC,YAAI,eAAEqB,MACjD,GAAIA,EAIF,OAHA1N,KAAKgmC,OAAO1iB,eAAiB,CAAC5V,EAAM1L,MAAMgK,EAAI,EAAG0B,EAAM1L,MAAMiK,EAAI,GACjEjM,KAAKgmC,OAAOxG,sBAAuB,IAAAqH,gBAAen5B,EAAO1N,KAAK+J,eAAe6D,MAC7E5N,KAAKgmC,OAAOziB,kBAAe1Y,GACpB,EAGT,MAAMkF,EAAS/P,KAAKwmC,sBAAsBh8B,GAC1C,QAAIuF,IACF/P,KAAK8mC,cAAc/2B,EAAQ62B,GAC3B5mC,KAAKgmC,OAAOziB,kBAAe1Y,GACpB,EAGX,CAKO,SAAA4Y,GACLzjB,KAAKgmC,OAAOzG,mBAAoB,EAChCv/B,KAAKkE,UACLlE,KAAK4V,mBAAmBlG,MAC1B,CAEO,WAAAgU,CAAY1hB,EAAeC,GAChCjC,KAAKgmC,OAAOxiB,iBACZxhB,EAAQyR,KAAKG,IAAI5R,EAAO,GACxBC,EAAMwR,KAAKC,IAAIzR,EAAKjC,KAAK+J,eAAe5F,OAAOE,MAAMpD,OAAS,GAC9DjB,KAAKgmC,OAAO1iB,eAAiB,CAAC,EAAGthB,GACjChC,KAAKgmC,OAAOziB,aAAe,CAACvjB,KAAK+J,eAAe6D,KAAM3L,GACtDjC,KAAKkE,UACLlE,KAAK4V,mBAAmBlG,MAC1B,CAMQ,WAAAo2B,CAAYjoB,GACG7d,KAAKgmC,OAAOnG,WAAWhiB,IAE1C7d,KAAKkE,SAET,CAMQ,qBAAAsiC,CAAsBh8B,GAC5B,MAAMuF,EAAS/P,KAAKwL,cAAcwE,UAAUxF,EAAOxK,KAAKgrB,eAAgBhrB,KAAK+J,eAAe6D,KAAM5N,KAAK+J,eAAetJ,MAAM,GAC5H,GAAKsP,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAM/P,KAAK+J,eAAe5F,OAAOM,MACjCsL,CACT,CAOQ,0BAAAg3B,CAA2Bv8B,GACjC,IAAIw8B,GAAS,IAAA5V,4BAA2BpxB,KAAKqc,oBAAoBnZ,OAAQsH,EAAOxK,KAAKgrB,gBAAgB,GACrG,MAAMic,EAAiBjnC,KAAKJ,eAAeqG,WAAWC,IAAIK,OAAOH,OACjE,OAAI4gC,GAAU,GAAKA,GAAUC,EACpB,GAELD,EAASC,IACXD,GAAUC,GAGZD,EAASvzB,KAAKC,IAAID,KAAKG,IAAIozB,GA1YG,QA2Y9BA,GA3Y8B,GA4YtBA,EAASvzB,KAAKoO,IAAImlB,GAAWvzB,KAAKkV,MAAe,GAATqe,GAClD,CAOO,oBAAAxlB,CAAqBhX,GAC1B,OAAI2K,EAAQvR,MACH4G,EAAMiW,QAAUzgB,KAAKwQ,gBAAgBrJ,WAAW+/B,8BAGlD18B,EAAMkW,QACf,CAMO,eAAA7B,CAAgBrU,GAIrB,GAHAxK,KAAKmlC,oBAAsB36B,EAAM28B,WAGZ,IAAjB38B,EAAMoQ,SAAgB5a,KAAKsa,eAKV,IAAjB9P,EAAMoQ,OAAV,CAKA,IAAK5a,KAAKklC,SAAU,CAClB,IAAKllC,KAAKwhB,qBAAqBhX,GAC7B,OAIFA,EAAMnC,iB,CAIRmC,EAAM5E,iBAGN5F,KAAKilC,kBAAoB,EAErBjlC,KAAKklC,UAAY16B,EAAMkW,SACzB1gB,KAAKonC,wBAAwB58B,GAER,IAAjBA,EAAM68B,OACRrnC,KAAKsnC,mBAAmB98B,GACE,IAAjBA,EAAM68B,OACfrnC,KAAKunC,mBAAmB/8B,GACE,IAAjBA,EAAM68B,QACfrnC,KAAKwnC,mBAAmBh9B,GAI5BxK,KAAKynC,yBACLznC,KAAKkE,SAAQ,E,CACf,CAKQ,sBAAAujC,GAEFznC,KAAKgrB,eAAenP,gBACtB7b,KAAKgrB,eAAenP,cAAc7a,iBAAiB,YAAahB,KAAKylC,oBACrEzlC,KAAKgrB,eAAenP,cAAc7a,iBAAiB,UAAWhB,KAAK0lC,mBAErE1lC,KAAK0nC,yBAA2B1nC,KAAKqc,oBAAoBnZ,OAAOykC,aAAY,IAAM3nC,KAAK4nC,eA5c9D,GA6c3B,CAKQ,yBAAAzB,GACFnmC,KAAKgrB,eAAenP,gBACtB7b,KAAKgrB,eAAenP,cAActW,oBAAoB,YAAavF,KAAKylC,oBACxEzlC,KAAKgrB,eAAenP,cAActW,oBAAoB,UAAWvF,KAAK0lC,mBAExE1lC,KAAKqc,oBAAoBnZ,OAAO2kC,cAAc7nC,KAAK0nC,0BACnD1nC,KAAK0nC,8BAA2B78B,CAClC,CAOQ,uBAAAu8B,CAAwB58B,GAC1BxK,KAAKgmC,OAAO1iB,iBACdtjB,KAAKgmC,OAAOziB,aAAevjB,KAAKwmC,sBAAsBh8B,GAE1D,CAOQ,kBAAA88B,CAAmB98B,GAOzB,GANAxK,KAAKgmC,OAAOxG,qBAAuB,EACnCx/B,KAAKgmC,OAAOzG,mBAAoB,EAChCv/B,KAAKkmC,qBAAuBlmC,KAAKkiB,mBAAmB1X,GAAS,EAAuB,EAGpFxK,KAAKgmC,OAAO1iB,eAAiBtjB,KAAKwmC,sBAAsBh8B,IACnDxK,KAAKgmC,OAAO1iB,eACf,OAEFtjB,KAAKgmC,OAAOziB,kBAAe1Y,EAG3B,MAAM8F,EAAO3Q,KAAK+J,eAAe5F,OAAOE,MAAM6E,IAAIlJ,KAAKgmC,OAAO1iB,eAAe,IACxE3S,GAKDA,EAAK1P,SAAWjB,KAAKgmC,OAAO1iB,eAAe,IAMM,IAAjD3S,EAAKm3B,SAAS9nC,KAAKgmC,OAAO1iB,eAAe,KAC3CtjB,KAAKgmC,OAAO1iB,eAAe,IAE/B,CAMQ,kBAAAikB,CAAmB/8B,GACrBxK,KAAK2mC,oBAAoBn8B,GAAO,KAClCxK,KAAKkmC,qBAAuB,EAEhC,CAOQ,kBAAAsB,CAAmBh9B,GACzB,MAAMuF,EAAS/P,KAAKwmC,sBAAsBh8B,GACtCuF,IACF/P,KAAKkmC,qBAAuB,EAC5BlmC,KAAK+nC,cAAch4B,EAAO,IAE9B,CAMO,kBAAAmS,CAAmB1X,GACxB,OAAOA,EAAMiW,UAAYtL,EAAQvR,OAAS5D,KAAKwQ,gBAAgBrJ,WAAW+/B,8BAC5E,CAOQ,gBAAAz7B,CAAiBjB,GAQvB,GAJAA,EAAM3E,4BAID7F,KAAKgmC,OAAO1iB,eACf,OAKF,MAAM0kB,EAAuBhoC,KAAKgmC,OAAOziB,aAAe,CAACvjB,KAAKgmC,OAAOziB,aAAa,GAAIvjB,KAAKgmC,OAAOziB,aAAa,IAAM,KAIrH,GADAvjB,KAAKgmC,OAAOziB,aAAevjB,KAAKwmC,sBAAsBh8B,IACjDxK,KAAKgmC,OAAOziB,aAEf,YADAvjB,KAAKkE,SAAQ,GAKmB,IAA9BlE,KAAKkmC,qBACHlmC,KAAKgmC,OAAOziB,aAAa,GAAKvjB,KAAKgmC,OAAO1iB,eAAe,GAC3DtjB,KAAKgmC,OAAOziB,aAAa,GAAK,EAE9BvjB,KAAKgmC,OAAOziB,aAAa,GAAKvjB,KAAK+J,eAAe6D,KAEb,IAA9B5N,KAAKkmC,sBACdlmC,KAAKioC,gBAAgBjoC,KAAKgmC,OAAOziB,cAInCvjB,KAAKilC,kBAAoBjlC,KAAK+mC,2BAA2Bv8B,GAKvB,IAA9BxK,KAAKkmC,uBACHlmC,KAAKilC,kBAAoB,EAC3BjlC,KAAKgmC,OAAOziB,aAAa,GAAKvjB,KAAK+J,eAAe6D,KACzC5N,KAAKilC,kBAAoB,IAClCjlC,KAAKgmC,OAAOziB,aAAa,GAAK,IAOlC,MAAMpf,EAASnE,KAAK+J,eAAe5F,OACnC,GAAInE,KAAKgmC,OAAOziB,aAAa,GAAKpf,EAAOE,MAAMpD,OAAQ,CACrD,MAAM0P,EAAOxM,EAAOE,MAAM6E,IAAIlJ,KAAKgmC,OAAOziB,aAAa,IACnD5S,GAAuD,IAA/CA,EAAKm3B,SAAS9nC,KAAKgmC,OAAOziB,aAAa,KACjDvjB,KAAKgmC,OAAOziB,aAAa,I,CAKxBykB,GACHA,EAAqB,KAAOhoC,KAAKgmC,OAAOziB,aAAa,IACrDykB,EAAqB,KAAOhoC,KAAKgmC,OAAOziB,aAAa,IACrDvjB,KAAKkE,SAAQ,EAEjB,CAMQ,WAAA0jC,GACN,GAAK5nC,KAAKgmC,OAAOziB,cAAiBvjB,KAAKgmC,OAAO1iB,gBAG1CtjB,KAAKilC,kBAAmB,CAC1BjlC,KAAK0nB,sBAAsBhY,KAAK,CAAEmO,OAAQ7d,KAAKilC,kBAAmBnnB,qBAAqB,IAKvF,MAAM3Z,EAASnE,KAAK+J,eAAe5F,OAC/BnE,KAAKilC,kBAAoB,GACO,IAA9BjlC,KAAKkmC,uBACPlmC,KAAKgmC,OAAOziB,aAAa,GAAKvjB,KAAK+J,eAAe6D,MAEpD5N,KAAKgmC,OAAOziB,aAAa,GAAK9P,KAAKC,IAAIvP,EAAOM,MAAQzE,KAAK+J,eAAetJ,KAAM0D,EAAOE,MAAMpD,OAAS,KAEpE,IAA9BjB,KAAKkmC,uBACPlmC,KAAKgmC,OAAOziB,aAAa,GAAK,GAEhCvjB,KAAKgmC,OAAOziB,aAAa,GAAKpf,EAAOM,OAEvCzE,KAAKkE,S,CAET,CAMQ,cAAAyH,CAAenB,GACrB,MAAM09B,EAAc19B,EAAM28B,UAAYnnC,KAAKmlC,oBAI3C,GAFAnlC,KAAKmmC,4BAEDnmC,KAAKoI,cAAcnH,QAAU,GAAKinC,EAjpBP,KAipBmD19B,EAAMiW,QAAUzgB,KAAKwQ,gBAAgBrJ,WAAWghC,qBAChI,GAAInoC,KAAK+J,eAAe5F,OAAOwV,QAAU3Z,KAAK+J,eAAe5F,OAAOM,MAAO,CACzE,MAAM2jC,EAAcpoC,KAAKwL,cAAcwE,UACrCxF,EACAxK,KAAKuL,SACLvL,KAAK+J,eAAe6D,KACpB5N,KAAK+J,eAAetJ,MACpB,GAEF,GAAI2nC,QAAkCv9B,IAAnBu9B,EAAY,SAAuCv9B,IAAnBu9B,EAAY,GAAkB,CAC/E,MAAM1mB,GAAW,IAAA2mB,oBAAmBD,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAGpoC,KAAK+J,eAAgB/J,KAAKkwB,aAAahpB,gBAAgBya,uBACnI3hB,KAAKkwB,aAAa7oB,iBAAiBqa,GAAU,E,QAIjD1hB,KAAKsoC,8BAET,CAEQ,4BAAAA,GACN,MAAMtmC,EAAQhC,KAAKgmC,OAAOvG,oBACpBx9B,EAAMjC,KAAKgmC,OAAOrG,kBAClBrlB,KAAiBtY,IAAWC,GAAQD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,IAE7EqY,EAQAtY,GAAUC,IAIVjC,KAAKqlC,oBAAuBrlC,KAAKslC,kBACpCtjC,EAAM,KAAOhC,KAAKqlC,mBAAmB,IAAMrjC,EAAM,KAAOhC,KAAKqlC,mBAAmB,IAChFpjC,EAAI,KAAOjC,KAAKslC,iBAAiB,IAAMrjC,EAAI,KAAOjC,KAAKslC,iBAAiB,IAExEtlC,KAAKuoC,uBAAuBvmC,EAAOC,EAAKqY,IAfpCta,KAAKolC,kBACPplC,KAAKuoC,uBAAuBvmC,EAAOC,EAAKqY,EAgB9C,CAEQ,sBAAAiuB,CAAuBvmC,EAAqCC,EAAmCqY,GACrGta,KAAKqlC,mBAAqBrjC,EAC1BhC,KAAKslC,iBAAmBrjC,EACxBjC,KAAKolC,iBAAmB9qB,EACxBta,KAAK4V,mBAAmBlG,MAC1B,CAEQ,qBAAAq2B,CAAsBllC,GAC5Bb,KAAKwjB,iBAKLxjB,KAAK4lC,cAAcj8B,UACnB3J,KAAK4lC,cAAgB/kC,EAAEknB,aAAa1jB,MAAMwhC,QAAOhoB,GAAU7d,KAAK8lC,YAAYjoB,IAC9E,CAQQ,mCAAA2qB,CAAoC5uB,EAAyB5N,GACnE,IAAIy8B,EAAYz8B,EAChB,IAAK,IAAI3M,EAAI,EAAG2M,GAAK3M,EAAGA,IAAK,CAC3B,MAAM4B,EAAS2Y,EAAWvI,SAAShS,EAAGW,KAAKq4B,WAAWiC,WAAWr5B,OAC/B,IAA9BjB,KAAKq4B,UAAUte,WAGjB0uB,IACSxnC,EAAS,GAAK+K,IAAM3M,IAI7BopC,GAAaxnC,EAAS,E,CAG1B,OAAOwnC,CACT,CAEO,YAAAtlB,CAAa/C,EAAaC,EAAapf,GAC5CjB,KAAKgmC,OAAOxiB,iBACZxjB,KAAKmmC,4BACLnmC,KAAKgmC,OAAO1iB,eAAiB,CAAClD,EAAKC,GACnCrgB,KAAKgmC,OAAOxG,qBAAuBv+B,EACnCjB,KAAKkE,UACLlE,KAAKsoC,8BACP,CAEO,gBAAA9/B,CAAiBhB,GACjBxH,KAAKumC,oBAAoB/+B,KACxBxH,KAAK2mC,oBAAoBn/B,GAAI,IAC/BxH,KAAKkE,SAAQ,GAEflE,KAAKsoC,+BAET,CAMQ,UAAAI,CAAW34B,EAA0B62B,EAAuC+B,GAAmC,EAAMC,GAAmC,GAE9J,GAAI74B,EAAO,IAAM/P,KAAK+J,eAAe6D,KACnC,OAGF,MAAMzJ,EAASnE,KAAK+J,eAAe5F,OAC7ByV,EAAazV,EAAOE,MAAM6E,IAAI6G,EAAO,IAC3C,IAAK6J,EACH,OAGF,MAAMjJ,EAAOxM,EAAOK,4BAA4BuL,EAAO,IAAI,GAG3D,IAAI6xB,EAAa5hC,KAAKwoC,oCAAoC5uB,EAAY7J,EAAO,IACzE8xB,EAAWD,EAGf,MAAMiH,EAAa94B,EAAO,GAAK6xB,EAC/B,IAAIkH,EAAoB,EACpBC,EAAqB,EACrBC,EAAqB,EACrBC,EAAsB,EAE1B,GAAgC,MAA5Bt4B,EAAKu4B,OAAOtH,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhCjxB,EAAKu4B,OAAOtH,EAAa,IAChDA,IAEF,KAAOC,EAAWlxB,EAAK1P,QAAwC,MAA9B0P,EAAKu4B,OAAOrH,EAAW,IACtDA,G,KAEG,CAKL,IAAI9O,EAAWhjB,EAAO,GAClBijB,EAASjjB,EAAO,GAIkB,IAAlC6J,EAAWG,SAASgZ,KACtB+V,IACA/V,KAEkC,IAAhCnZ,EAAWG,SAASiZ,KACtB+V,IACA/V,KAIF,MAAM/xB,EAAS2Y,EAAW0oB,UAAUtP,GAAQ/xB,OAO5C,IANIA,EAAS,IACXgoC,GAAuBhoC,EAAS,EAChC4gC,GAAY5gC,EAAS,GAIhB8xB,EAAW,GAAK6O,EAAa,IAAM5hC,KAAKmpC,qBAAqBvvB,EAAWvI,SAAS0hB,EAAW,EAAG/yB,KAAKq4B,aAAa,CACtHze,EAAWvI,SAAS0hB,EAAW,EAAG/yB,KAAKq4B,WACvC,MAAMp3B,EAASjB,KAAKq4B,UAAUiC,WAAWr5B,OACP,IAA9BjB,KAAKq4B,UAAUte,YAEjB+uB,IACA/V,KACS9xB,EAAS,IAGlB+nC,GAAsB/nC,EAAS,EAC/B2gC,GAAc3gC,EAAS,GAEzB2gC,IACA7O,G,CAEF,KAAOC,EAASpZ,EAAW3Y,QAAU4gC,EAAW,EAAIlxB,EAAK1P,SAAWjB,KAAKmpC,qBAAqBvvB,EAAWvI,SAAS2hB,EAAS,EAAGhzB,KAAKq4B,aAAa,CAC9Ize,EAAWvI,SAAS2hB,EAAS,EAAGhzB,KAAKq4B,WACrC,MAAMp3B,EAASjB,KAAKq4B,UAAUiC,WAAWr5B,OACP,IAA9BjB,KAAKq4B,UAAUte,YAEjBgvB,IACA/V,KACS/xB,EAAS,IAGlBgoC,GAAuBhoC,EAAS,EAChC4gC,GAAY5gC,EAAS,GAEvB4gC,IACA7O,G,EAKJ6O,IAIA,IAAI7/B,EACA4/B,EACEiH,EACAC,EACAE,EAIF/nC,EAASwS,KAAKC,IAAI1T,KAAK+J,eAAe6D,KACxCi0B,EACED,EACAkH,EACAC,EACAC,EACAC,GAEJ,GAAKrC,GAA4E,KAA5Cj2B,EAAKy4B,MAAMxH,EAAYC,GAAUwH,OAAtE,CAKA,GAAIV,GACY,IAAV3mC,GAA8C,KAA/B4X,EAAW0vB,aAAa,GAAqB,CAC9D,MAAMC,EAAqBplC,EAAOE,MAAM6E,IAAI6G,EAAO,GAAK,GACxD,GAAIw5B,GAAsB3vB,EAAWyQ,WAA+E,KAAlEkf,EAAmBD,aAAatpC,KAAK+J,eAAe6D,KAAO,GAAqB,CAChI,MAAM47B,EAA2BxpC,KAAK0oC,WAAW,CAAC1oC,KAAK+J,eAAe6D,KAAO,EAAGmC,EAAO,GAAK,IAAI,GAAO,GAAM,GAC7G,GAAIy5B,EAA0B,CAC5B,MAAMxC,EAAShnC,KAAK+J,eAAe6D,KAAO47B,EAAyBxnC,MACnEA,GAASglC,EACT/lC,GAAU+lC,C,GAOlB,GAAI4B,GACE5mC,EAAQf,IAAWjB,KAAK+J,eAAe6D,MAAkE,KAA1DgM,EAAW0vB,aAAatpC,KAAK+J,eAAe6D,KAAO,GAAqB,CACzH,MAAM67B,EAAiBtlC,EAAOE,MAAM6E,IAAI6G,EAAO,GAAK,GACpD,IAAI05B,aAAc,EAAdA,EAAgBpf,YAAgD,KAAnCof,EAAeH,aAAa,GAAqB,CAChF,MAAMI,EAAuB1pC,KAAK0oC,WAAW,CAAC,EAAG34B,EAAO,GAAK,IAAI,GAAO,GAAO,GAC3E25B,IACFzoC,GAAUyoC,EAAqBzoC,O,EAMvC,MAAO,CAAEe,QAAOf,S,CAClB,CAOU,aAAA6lC,CAAc/2B,EAA0B62B,GAChD,MAAM+C,EAAe3pC,KAAK0oC,WAAW34B,EAAQ62B,GAC7C,GAAI+C,EAAc,CAEhB,KAAOA,EAAa3nC,MAAQ,GAC1B2nC,EAAa3nC,OAAShC,KAAK+J,eAAe6D,KAC1CmC,EAAO,KAET/P,KAAKgmC,OAAO1iB,eAAiB,CAACqmB,EAAa3nC,MAAO+N,EAAO,IACzD/P,KAAKgmC,OAAOxG,qBAAuBmK,EAAa1oC,M,CAEpD,CAMQ,eAAAgnC,CAAgBl4B,GACtB,MAAM45B,EAAe3pC,KAAK0oC,WAAW34B,GAAQ,GAC7C,GAAI45B,EAAc,CAChB,IAAIp7B,EAASwB,EAAO,GAGpB,KAAO45B,EAAa3nC,MAAQ,GAC1B2nC,EAAa3nC,OAAShC,KAAK+J,eAAe6D,KAC1CW,IAKF,IAAKvO,KAAKgmC,OAAOtG,6BACf,KAAOiK,EAAa3nC,MAAQ2nC,EAAa1oC,OAASjB,KAAK+J,eAAe6D,MACpE+7B,EAAa1oC,QAAUjB,KAAK+J,eAAe6D,KAC3CW,IAIJvO,KAAKgmC,OAAOziB,aAAe,CAACvjB,KAAKgmC,OAAOtG,6BAA+BiK,EAAa3nC,MAAQ2nC,EAAa3nC,MAAQ2nC,EAAa1oC,OAAQsN,E,CAE1I,CAOQ,oBAAA46B,CAAqBhjC,GAG3B,OAAwB,IAApBA,EAAK4T,YAGF/Z,KAAKwQ,gBAAgBrJ,WAAWyiC,cAAc1+B,QAAQ/E,EAAKm0B,aAAe,CACnF,CAMU,aAAAyN,CAAcp3B,GACtB,MAAMk5B,EAAe7pC,KAAK+J,eAAe5F,OAAO2lC,uBAAuBn5B,GACjEjD,EAAsB,CAC1B1L,MAAO,CAAEgK,EAAG,EAAGC,EAAG49B,EAAaE,OAC/B9nC,IAAK,CAAE+J,EAAGhM,KAAK+J,eAAe6D,KAAO,EAAG3B,EAAG49B,EAAaG,OAE1DhqC,KAAKgmC,OAAO1iB,eAAiB,CAAC,EAAGumB,EAAaE,OAC9C/pC,KAAKgmC,OAAOziB,kBAAe1Y,EAC3B7K,KAAKgmC,OAAOxG,sBAAuB,IAAAqH,gBAAen5B,EAAO1N,KAAK+J,eAAe6D,KAC/E,G,mBA57BWyQ,EAAgB,GAuDxB,MAAAhO,gBACA,MAAA8gB,cACA,MAAA1T,eACA,MAAA/K,iBACA,MAAAlM,gBACA,MAAAgW,sBA5DQ6B,E,iNC9Db,gBAGa,EAAA1B,kBAAmB,IAAAstB,iBAAkC,mBAarD,EAAAztB,qBAAsB,IAAAytB,iBAAqC,sBAiB3D,EAAAxsB,eAAgB,IAAAwsB,iBAA+B,gBAQ/C,EAAAzjC,gBAAiB,IAAAyjC,iBAAgC,iBAmCjD,EAAA3rB,mBAAoB,IAAA2rB,iBAAmC,oBA6BvD,EAAAjtB,yBAA0B,IAAAitB,iBAAyC,0BASnE,EAAAptB,eAAgB,IAAAotB,iBAA+B,e,yhBCtH5D,gBAGA,UACA,UACA,SACA,UAWMC,EAAqB,EAAAhkC,IAAIsS,QAAQ,WACjC2xB,EAAqB,EAAAjkC,IAAIsS,QAAQ,WACjC4xB,EAAiB,EAAAlkC,IAAIsS,QAAQ,WAC7B6xB,EAAwB,EAAAnkC,IAAIsS,QAAQ,WACpC8xB,EAAoB,CACxBpkC,IAAK,2BACLqS,KAAM,YAIK,EAAAgyB,oBAAsBv7B,OAAOw7B,OAAO,MAC/C,MAAMzyB,EAAS,CAEb,EAAA7R,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WAEZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,WACZ,EAAAtS,IAAIsS,QAAQ,YAKRtJ,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KACzC,IAAK,IAAI7P,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAMorC,EAAIv7B,EAAG7P,EAAI,GAAM,EAAI,GACrBqrC,EAAIx7B,EAAG7P,EAAI,EAAK,EAAI,GACpBsrC,EAAIz7B,EAAE7P,EAAI,GAChB0Y,EAAO9T,KAAK,CACViC,IAAK,EAAA0R,SAASgzB,MAAMH,EAAGC,EAAGC,GAC1BpyB,KAAM,EAAAX,SAASizB,OAAOJ,EAAGC,EAAGC,I,CAKhC,IAAK,IAAItrC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMk3B,EAAI,EAAQ,GAAJl3B,EACd0Y,EAAO9T,KAAK,CACViC,IAAK,EAAA0R,SAASgzB,MAAMrU,EAAGA,EAAGA,GAC1Bhe,KAAM,EAAAX,SAASizB,OAAOtU,EAAGA,EAAGA,I,CAIhC,OAAOxe,CACR,EA7CgD,IA+C1C,IAAM6E,EAAY,eAAlB,cAA2B,EAAApd,WAQhC,UAAWuY,GAA6B,OAAO/X,KAAK8qC,OAAS,CAK7D,WAAArrC,CACmB,GAEjBE,QAFkC,KAAA6Q,gBAAAA,EAV5B,KAAAu6B,eAAsC,IAAI,EAAAC,mBAC1C,KAAAC,mBAA0C,IAAI,EAAAD,mBAKrC,KAAAE,gBAAkBlrC,KAAKqB,SAAS,IAAI,EAAAiJ,cACrC,KAAA4d,eAAiBloB,KAAKkrC,gBAAgB1gC,MAOpDxK,KAAK8qC,QAAU,CACb9U,WAAYkU,EACZ9hB,WAAY+hB,EACZjU,OAAQkU,EACRjU,aAAckU,EACdzP,yBAAqB/vB,EACrBsgC,+BAAgCb,EAChCjU,0BAA2B,EAAAxe,MAAMuzB,MAAMjB,EAAoBG,GAC3De,uCAAwCf,EACxChU,kCAAmC,EAAAze,MAAMuzB,MAAMjB,EAAoBG,GACnEtyB,KAAM,EAAAuyB,oBAAoBnB,QAC1B5L,cAAex9B,KAAK+qC,eACpBxN,kBAAmBv9B,KAAKirC,oBAE1BjrC,KAAKsrC,uBACLtrC,KAAKurC,UAAUvrC,KAAKwQ,gBAAgBrJ,WAAWqkC,OAE/CxrC,KAAKqB,SAASrB,KAAKwQ,gBAAgB2O,uBAAuB,wBAAwB,IAAMnf,KAAK+qC,eAAe1hC,WAC5GrJ,KAAKqB,SAASrB,KAAKwQ,gBAAgB2O,uBAAuB,SAAS,IAAMnf,KAAKurC,UAAUvrC,KAAKwQ,gBAAgBrJ,WAAWqkC,SAC1H,CAOQ,SAAAD,CAAUC,EAAgB,CAAC,GACjC,MAAMzzB,EAAS/X,KAAK8qC,QAkBpB,GAjBA/yB,EAAOie,WAAayV,EAAWD,EAAMxV,WAAYkU,GACjDnyB,EAAOqQ,WAAaqjB,EAAWD,EAAMpjB,WAAY+hB,GACjDpyB,EAAOme,OAASuV,EAAWD,EAAMtV,OAAQkU,GACzCryB,EAAOoe,aAAesV,EAAWD,EAAMrV,aAAckU,GACrDtyB,EAAOozB,+BAAiCM,EAAWD,EAAME,oBAAqBpB,GAC9EvyB,EAAOse,0BAA4B,EAAAxe,MAAMuzB,MAAMrzB,EAAOqQ,WAAYrQ,EAAOozB,gCACzEpzB,EAAOszB,uCAAyCI,EAAWD,EAAMG,4BAA6B5zB,EAAOozB,gCACrGpzB,EAAOue,kCAAoC,EAAAze,MAAMuzB,MAAMrzB,EAAOqQ,WAAYrQ,EAAOszB,wCACjFtzB,EAAO6iB,oBAAsB4Q,EAAM5Q,oBAAsB6Q,EAAWD,EAAM5Q,oBAAqB,EAAAgR,iBAAc/gC,EACzGkN,EAAO6iB,sBAAwB,EAAAgR,aACjC7zB,EAAO6iB,yBAAsB/vB,GAO3B,EAAAgN,MAAMg0B,SAAS9zB,EAAOozB,gCAAiC,CACzD,MAAMW,EAAU,GAChB/zB,EAAOozB,+BAAiC,EAAAtzB,MAAMi0B,QAAQ/zB,EAAOozB,+BAAgCW,E,CAE/F,GAAI,EAAAj0B,MAAMg0B,SAAS9zB,EAAOszB,wCAAyC,CACjE,MAAMS,EAAU,GAChB/zB,EAAOszB,uCAAyC,EAAAxzB,MAAMi0B,QAAQ/zB,EAAOszB,uCAAwCS,E,CAmB/G,GAjBA/zB,EAAOC,KAAO,EAAAuyB,oBAAoBnB,QAClCrxB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMO,MAAO,EAAAxB,oBAAoB,IAC7DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMQ,IAAK,EAAAzB,oBAAoB,IAC3DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMS,MAAO,EAAA1B,oBAAoB,IAC7DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMU,OAAQ,EAAA3B,oBAAoB,IAC9DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMW,KAAM,EAAA5B,oBAAoB,IAC5DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMY,QAAS,EAAA7B,oBAAoB,IAC/DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMa,KAAM,EAAA9B,oBAAoB,IAC5DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMc,MAAO,EAAA/B,oBAAoB,IAC7DxyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMe,YAAa,EAAAhC,oBAAoB,IACnExyB,EAAOC,KAAK,GAAKyzB,EAAWD,EAAMgB,UAAW,EAAAjC,oBAAoB,IACjExyB,EAAOC,KAAK,IAAMyzB,EAAWD,EAAMiB,YAAa,EAAAlC,oBAAoB,KACpExyB,EAAOC,KAAK,IAAMyzB,EAAWD,EAAMkB,aAAc,EAAAnC,oBAAoB,KACrExyB,EAAOC,KAAK,IAAMyzB,EAAWD,EAAMmB,WAAY,EAAApC,oBAAoB,KACnExyB,EAAOC,KAAK,IAAMyzB,EAAWD,EAAMoB,cAAe,EAAArC,oBAAoB,KACtExyB,EAAOC,KAAK,IAAMyzB,EAAWD,EAAMqB,WAAY,EAAAtC,oBAAoB,KACnExyB,EAAOC,KAAK,IAAMyzB,EAAWD,EAAMsB,YAAa,EAAAvC,oBAAoB,KAChEiB,EAAMuB,aAAc,CACtB,MAAMC,EAAav5B,KAAKC,IAAIqE,EAAOC,KAAK/W,OAAS,GAAIuqC,EAAMuB,aAAa9rC,QACxE,IAAK,IAAI5B,EAAI,EAAGA,EAAI2tC,EAAY3tC,IAC9B0Y,EAAOC,KAAK3Y,EAAI,IAAMosC,EAAWD,EAAMuB,aAAa1tC,GAAI,EAAAkrC,oBAAoBlrC,EAAI,I,CAIpFW,KAAK+qC,eAAe1hC,QACpBrJ,KAAKirC,mBAAmB5hC,QACxBrJ,KAAKsrC,uBACLtrC,KAAKkrC,gBAAgBx7B,KAAK1P,KAAK+X,OACjC,CAEO,YAAAW,CAAau0B,GAClBjtC,KAAKktC,cAAcD,GACnBjtC,KAAKkrC,gBAAgBx7B,KAAK1P,KAAK+X,OACjC,CAEQ,aAAAm1B,CAAcD,GAEpB,QAAapiC,IAAToiC,EAMJ,OAAQA,GACN,KAAK,IACHjtC,KAAK8qC,QAAQ9U,WAAah2B,KAAKmtC,eAAenX,WAC9C,MACF,KAAK,IACHh2B,KAAK8qC,QAAQ1iB,WAAapoB,KAAKmtC,eAAe/kB,WAC9C,MACF,KAAK,IACHpoB,KAAK8qC,QAAQ5U,OAASl2B,KAAKmtC,eAAejX,OAC1C,MACF,QACEl2B,KAAK8qC,QAAQ9yB,KAAKi1B,GAAQjtC,KAAKmtC,eAAen1B,KAAKi1B,QAhBrD,IAAK,IAAI5tC,EAAI,EAAGA,EAAIW,KAAKmtC,eAAen1B,KAAK/W,SAAU5B,EACrDW,KAAK8qC,QAAQ9yB,KAAK3Y,GAAKW,KAAKmtC,eAAen1B,KAAK3Y,EAiBtD,CAEO,YAAAiZ,CAAa5H,GAClBA,EAAS1Q,KAAK8qC,SAEd9qC,KAAKkrC,gBAAgBx7B,KAAK1P,KAAK+X,OACjC,CAEQ,oBAAAuzB,GACNtrC,KAAKmtC,eAAiB,CACpBnX,WAAYh2B,KAAK8qC,QAAQ9U,WACzB5N,WAAYpoB,KAAK8qC,QAAQ1iB,WACzB8N,OAAQl2B,KAAK8qC,QAAQ5U,OACrBle,KAAMhY,KAAK8qC,QAAQ9yB,KAAKoxB,QAE5B,GAGF,SAASqC,EACP2B,EACAC,GAEA,QAAkBxiC,IAAduiC,EACF,IACE,OAAO,EAAAlnC,IAAIsS,QAAQ40B,E,CACnB,S,CAIJ,OAAOC,CACT,C,eA7JazwB,EAAY,GAcpB,MAAAlK,kBAdQkK,E,wFCzEb,gBACA,SAgBA,MAAa0wB,UAAwB,EAAA9tC,WAYnC,WAAAC,CACU8tC,GAER5tC,QAFQ,KAAA4tC,WAAAA,EARM,KAAAC,gBAAkBxtC,KAAKqB,SAAS,IAAI,EAAAiJ,cACpC,KAAAmjC,SAAWztC,KAAKwtC,gBAAgBhjC,MAChC,KAAAkjC,gBAAkB1tC,KAAKqB,SAAS,IAAI,EAAAiJ,cACpC,KAAAqjC,SAAW3tC,KAAK0tC,gBAAgBljC,MAChC,KAAAojC,cAAgB5tC,KAAKqB,SAAS,IAAI,EAAAiJ,cAClC,KAAAu7B,OAAS7lC,KAAK4tC,cAAcpjC,MAM1CxK,KAAK6tC,OAAS,IAAIC,MAAS9tC,KAAKutC,YAChCvtC,KAAK+tC,YAAc,EACnB/tC,KAAKguC,QAAU,CACjB,CAEA,aAAWC,GACT,OAAOjuC,KAAKutC,UACd,CAEA,aAAWU,CAAUC,GAEnB,GAAIluC,KAAKutC,aAAeW,EACtB,OAKF,MAAMC,EAAW,IAAIL,MAAqBI,GAC1C,IAAK,IAAI7uC,EAAI,EAAGA,EAAIoU,KAAKC,IAAIw6B,EAAcluC,KAAKiB,QAAS5B,IACvD8uC,EAAS9uC,GAAKW,KAAK6tC,OAAO7tC,KAAKouC,gBAAgB/uC,IAEjDW,KAAK6tC,OAASM,EACdnuC,KAAKutC,WAAaW,EAClBluC,KAAK+tC,YAAc,CACrB,CAEA,UAAW9sC,GACT,OAAOjB,KAAKguC,OACd,CAEA,UAAW/sC,CAAOotC,GAChB,GAAIA,EAAYruC,KAAKguC,QACnB,IAAK,IAAI3uC,EAAIW,KAAKguC,QAAS3uC,EAAIgvC,EAAWhvC,IACxCW,KAAK6tC,OAAOxuC,QAAKwL,EAGrB7K,KAAKguC,QAAUK,CACjB,CAUO,GAAAnlC,CAAI4E,GACT,OAAO9N,KAAK6tC,OAAO7tC,KAAKouC,gBAAgBtgC,GAC1C,CAUO,GAAA9E,CAAI8E,EAAexG,GACxBtH,KAAK6tC,OAAO7tC,KAAKouC,gBAAgBtgC,IAAUxG,CAC7C,CAOO,IAAArD,CAAKqD,GACVtH,KAAK6tC,OAAO7tC,KAAKouC,gBAAgBpuC,KAAKguC,UAAY1mC,EAC9CtH,KAAKguC,UAAYhuC,KAAKutC,YACxBvtC,KAAK+tC,cAAgB/tC,KAAK+tC,YAAc/tC,KAAKutC,WAC7CvtC,KAAK4tC,cAAcl+B,KAAK,IAExB1P,KAAKguC,SAET,CAOO,OAAAM,GACL,GAAItuC,KAAKguC,UAAYhuC,KAAKutC,WACxB,MAAM,IAAI7rC,MAAM,4CAIlB,OAFA1B,KAAK+tC,cAAgB/tC,KAAK+tC,YAAc/tC,KAAKutC,WAC7CvtC,KAAK4tC,cAAcl+B,KAAK,GACjB1P,KAAK6tC,OAAO7tC,KAAKouC,gBAAgBpuC,KAAKguC,QAAU,GACzD,CAKA,UAAWO,GACT,OAAOvuC,KAAKguC,UAAYhuC,KAAKutC,UAC/B,CAMO,GAAAloC,GACL,OAAOrF,KAAK6tC,OAAO7tC,KAAKouC,gBAAgBpuC,KAAKguC,UAAY,GAC3D,CAWO,MAAA7iC,CAAOnJ,EAAewsC,KAAwBC,GAEnD,GAAID,EAAa,CACf,IAAK,IAAInvC,EAAI2C,EAAO3C,EAAIW,KAAKguC,QAAUQ,EAAanvC,IAClDW,KAAK6tC,OAAO7tC,KAAKouC,gBAAgB/uC,IAAMW,KAAK6tC,OAAO7tC,KAAKouC,gBAAgB/uC,EAAImvC,IAE9ExuC,KAAKguC,SAAWQ,EAChBxuC,KAAKwtC,gBAAgB99B,KAAK,CAAE5B,MAAO9L,EAAO6b,OAAQ2wB,G,CAIpD,IAAK,IAAInvC,EAAIW,KAAKguC,QAAU,EAAG3uC,GAAK2C,EAAO3C,IACzCW,KAAK6tC,OAAO7tC,KAAKouC,gBAAgB/uC,EAAIovC,EAAMxtC,SAAWjB,KAAK6tC,OAAO7tC,KAAKouC,gBAAgB/uC,IAEzF,IAAK,IAAIA,EAAI,EAAGA,EAAIovC,EAAMxtC,OAAQ5B,IAChCW,KAAK6tC,OAAO7tC,KAAKouC,gBAAgBpsC,EAAQ3C,IAAMovC,EAAMpvC,GAOvD,GALIovC,EAAMxtC,QACRjB,KAAK0tC,gBAAgBh+B,KAAK,CAAE5B,MAAO9L,EAAO6b,OAAQ4wB,EAAMxtC,SAItDjB,KAAKguC,QAAUS,EAAMxtC,OAASjB,KAAKutC,WAAY,CACjD,MAAMmB,EAAe1uC,KAAKguC,QAAUS,EAAMxtC,OAAUjB,KAAKutC,WACzDvtC,KAAK+tC,aAAeW,EACpB1uC,KAAKguC,QAAUhuC,KAAKutC,WACpBvtC,KAAK4tC,cAAcl+B,KAAKg/B,E,MAExB1uC,KAAKguC,SAAWS,EAAMxtC,MAE1B,CAMO,SAAA0tC,CAAUtb,GACXA,EAAQrzB,KAAKguC,UACf3a,EAAQrzB,KAAKguC,SAEfhuC,KAAK+tC,aAAe1a,EACpBrzB,KAAKguC,SAAW3a,EAChBrzB,KAAK4tC,cAAcl+B,KAAK2jB,EAC1B,CAEO,aAAAub,CAAc5sC,EAAeqxB,EAAe2T,GACjD,KAAI3T,GAAS,GAAb,CAGA,GAAIrxB,EAAQ,GAAKA,GAAShC,KAAKguC,QAC7B,MAAM,IAAItsC,MAAM,+BAElB,GAAIM,EAAQglC,EAAS,EACnB,MAAM,IAAItlC,MAAM,gDAGlB,GAAIslC,EAAS,EAAG,CACd,IAAK,IAAI3nC,EAAIg0B,EAAQ,EAAGh0B,GAAK,EAAGA,IAC9BW,KAAKgJ,IAAIhH,EAAQ3C,EAAI2nC,EAAQhnC,KAAKkJ,IAAIlH,EAAQ3C,IAEhD,MAAMwvC,EAAgB7sC,EAAQqxB,EAAQ2T,EAAUhnC,KAAKguC,QACrD,GAAIa,EAAe,EAEjB,IADA7uC,KAAKguC,SAAWa,EACT7uC,KAAKguC,QAAUhuC,KAAKutC,YACzBvtC,KAAKguC,UACLhuC,KAAK+tC,cACL/tC,KAAK4tC,cAAcl+B,KAAK,E,MAI5B,IAAK,IAAIrQ,EAAI,EAAGA,EAAIg0B,EAAOh0B,IACzBW,KAAKgJ,IAAIhH,EAAQ3C,EAAI2nC,EAAQhnC,KAAKkJ,IAAIlH,EAAQ3C,G,CAGpD,CAQQ,eAAA+uC,CAAgBtgC,GACtB,OAAQ9N,KAAK+tC,YAAcjgC,GAAS9N,KAAKutC,UAC3C,EAxNF,gB,+ECfA,iBAAgBuB,EAASC,EAAQC,EAAgB,GAC/C,GAAmB,iBAARD,EACT,OAAOA,EAIT,MAAME,EAAoBnB,MAAMoB,QAAQH,GAAO,GAAK,CAAC,EAErD,IAAK,MAAMnsC,KAAOmsC,EAEhBE,EAAarsC,GAAOosC,GAAS,EAAID,EAAInsC,GAAQmsC,EAAInsC,IAAQksC,EAAMC,EAAInsC,GAAMosC,EAAQ,GAGnF,OAAOC,CACT,C,0JCjBA,gBAGA,IAAIE,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EAUT,IAAiB13B,EAmBAC,EAuEA3R,EAkGAqpC,EAoCAh3B,EA8FjB,SAAgBi3B,EAAYjZ,GAC1B,MAAMkZ,EAAIlZ,EAAEjyB,SAAS,IACrB,OAAOmrC,EAAExuC,OAAS,EAAI,IAAMwuC,EAAIA,CAClC,CAQA,SAAgBC,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,IAC7B,CAtVa,EAAAhE,WAAqB,CAChC1lC,IAAK,YACLqS,KAAM,GAMR,SAAiBX,GACC,EAAAgzB,MAAhB,SAAsBH,EAAWC,EAAWC,EAAWvrC,GACrD,YAAUyL,IAANzL,EACK,IAAIowC,EAAY/E,KAAK+E,EAAY9E,KAAK8E,EAAY7E,KAAK6E,EAAYpwC,KAErE,IAAIowC,EAAY/E,KAAK+E,EAAY9E,KAAK8E,EAAY7E,IAC3D,EAEgB,EAAAE,OAAhB,SAAuBJ,EAAWC,EAAWC,EAAWvrC,EAAY,KAIlE,OAAQqrC,GAAK,GAAKC,GAAK,GAAKC,GAAK,EAAIvrC,KAAO,CAC9C,CACD,CAdD,CAAiBwY,IAAQ,WAARA,EAAQ,KAmBzB,SAAiB,GAgDf,SAAgBk0B,EAAQj0B,EAAei0B,GAGrC,OAFAwD,EAAK77B,KAAKkV,MAAgB,IAAVmjB,IACfqD,EAAIC,EAAIC,GAAM92B,EAAKs3B,WAAWh4B,EAAMU,MAC9B,CACLrS,IAAK0R,EAASgzB,MAAMuE,EAAIC,EAAIC,EAAIC,GAChC/2B,KAAMX,EAASizB,OAAOsE,EAAIC,EAAIC,EAAIC,GAEtC,CAtDgB,EAAAlE,MAAhB,SAAsBtiC,EAAYC,GAEhC,GADAumC,GAAgB,IAAVvmC,EAAGwP,MAAe,IACb,IAAP+2B,EACF,MAAO,CACLppC,IAAK6C,EAAG7C,IACRqS,KAAMxP,EAAGwP,MAGb,MAAMu3B,EAAO/mC,EAAGwP,MAAQ,GAAM,IACxBw3B,EAAOhnC,EAAGwP,MAAQ,GAAM,IACxBy3B,EAAOjnC,EAAGwP,MAAQ,EAAK,IACvB03B,EAAOnnC,EAAGyP,MAAQ,GAAM,IACxB23B,EAAOpnC,EAAGyP,MAAQ,GAAM,IACxB43B,EAAOrnC,EAAGyP,MAAQ,EAAK,IAM7B,OALA42B,EAAKc,EAAMx8B,KAAKkV,OAAOmnB,EAAMG,GAAOX,GACpCF,EAAKc,EAAMz8B,KAAKkV,OAAOonB,EAAMG,GAAOZ,GACpCD,EAAKc,EAAM18B,KAAKkV,OAAOqnB,EAAMG,GAAOb,GAG7B,CAAEppC,IAFG0R,EAASgzB,MAAMuE,EAAIC,EAAIC,GAErB92B,KADDX,EAASizB,OAAOsE,EAAIC,EAAIC,GAEvC,EAEgB,EAAAxD,SAAhB,SAAyBh0B,GACvB,OAA+B,MAAV,IAAbA,EAAMU,KAChB,EAEgB,EAAA+kB,oBAAhB,SAAoCx0B,EAAYC,EAAYs0B,GAC1D,MAAMzsB,EAAS2H,EAAK+kB,oBAAoBx0B,EAAGyP,KAAMxP,EAAGwP,KAAM8kB,GAC1D,GAAKzsB,EAGL,OAAO2H,EAAKC,QACT5H,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,IAEpB,EAEgB,EAAA6lB,OAAhB,SAAuB5e,GACrB,MAAMu4B,GAA0B,IAAbv4B,EAAMU,QAAiB,EAE1C,OADC42B,EAAIC,EAAIC,GAAM92B,EAAKs3B,WAAWO,GACxB,CACLlqC,IAAK0R,EAASgzB,MAAMuE,EAAIC,EAAIC,GAC5B92B,KAAM63B,EAEV,EAEgB,EAAAtE,QAAO,EASP,EAAA7V,gBAAhB,SAAgCpe,EAAew4B,GAE7C,OADAf,EAAkB,IAAbz3B,EAAMU,KACJuzB,EAAQj0B,EAAQy3B,EAAKe,EAAU,IACxC,EAEgB,EAAAv4B,WAAhB,SAA2BD,GACzB,MAAO,CAAEA,EAAMU,MAAQ,GAAM,IAAOV,EAAMU,MAAQ,GAAM,IAAOV,EAAMU,MAAQ,EAAK,IACpF,CACD,CAjED,CAAiBV,IAAK,QAALA,EAAK,KAuEtB,SAAiB,GACf,IAAIy4B,EACAC,EACJ,IAAK,EAAAC,OAAQ,CACX,MAAMjqC,EAASrG,SAASC,cAAc,UACtCoG,EAAOD,MAAQ,EACfC,EAAOH,OAAS,EAChB,MAAMmoB,EAAMhoB,EAAOioB,WAAW,KAAM,CAClCiiB,oBAAoB,IAElBliB,IACF+hB,EAAO/hB,EACP+hB,EAAKI,yBAA2B,OAChCH,EAAeD,EAAKK,qBAAqB,EAAG,EAAG,EAAG,G,CAWtC,EAAAn4B,QAAhB,SAAwBtS,GAEtB,GAAIA,EAAI0qC,MAAM,kBACZ,OAAQ1qC,EAAIjF,QACV,KAAK,EAIH,OAHAkuC,EAAK1d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IACzCwc,EAAK3d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IACzCyc,EAAK5d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IAClCra,EAAKC,QAAQ22B,EAAIC,EAAIC,GAE9B,KAAK,EAKH,OAJAF,EAAK1d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IACzCwc,EAAK3d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IACzCyc,EAAK5d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IACzC0c,EAAK7d,SAASvrB,EAAIkjC,MAAM,EAAG,GAAGxW,OAAO,GAAI,IAClCra,EAAKC,QAAQ22B,EAAIC,EAAIC,EAAIC,GAElC,KAAK,EACH,MAAO,CACLppC,MACAqS,MAAOkZ,SAASvrB,EAAIkjC,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MAAO,CACLljC,MACAqS,KAAMkZ,SAASvrB,EAAIkjC,MAAM,GAAI,MAAQ,GAM7C,MAAMyH,EAAY3qC,EAAI0qC,MAAM,sFAC5B,GAAIC,EAKF,OAJA1B,EAAK1d,SAASof,EAAU,IACxBzB,EAAK3d,SAASof,EAAU,IACxBxB,EAAK5d,SAASof,EAAU,IACxBvB,EAAK77B,KAAKkV,MAAoE,UAA5C9d,IAAjBgmC,EAAU,GAAmB,EAAIC,WAAWD,EAAU,MAChEt4B,EAAKC,QAAQ22B,EAAIC,EAAIC,EAAIC,GAIlC,IAAKgB,IAASC,EACZ,MAAM,IAAI7uC,MAAM,uCAOlB,GAFA4uC,EAAK1gB,UAAY2gB,EACjBD,EAAK1gB,UAAY1pB,EACa,iBAAnBoqC,EAAK1gB,UACd,MAAM,IAAIluB,MAAM,uCAOlB,GAJA4uC,EAAKzgB,SAAS,EAAG,EAAG,EAAG,IACtBsf,EAAIC,EAAIC,EAAIC,GAAMgB,EAAKS,aAAa,EAAG,EAAG,EAAG,GAAGnvB,KAGtC,MAAP0tB,EACF,MAAM,IAAI5tC,MAAM,uCAMlB,MAAO,CACL6W,KAAMX,EAASizB,OAAOsE,EAAIC,EAAIC,EAAIC,GAClCppC,MAEJ,CACD,CA7FD,CAAiBA,IAAG,MAAHA,EAAG,KAkGpB,SAAiB,GAsBf,SAAgB8qC,EAAmBvG,EAAWC,EAAWC,GACvD,MAAMsG,EAAKxG,EAAI,IACTyG,EAAKxG,EAAI,IACTyG,EAAKxG,EAAI,IAIf,MAAY,OAHDsG,GAAM,OAAUA,EAAK,MAAQx9B,KAAK29B,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQz9B,KAAK29B,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQ19B,KAAK29B,KAAKD,EAAK,MAAS,MAAO,KAEzE,CAvBgB,EAAAE,kBAAhB,SAAkC9B,GAChC,OAAOyB,EACJzB,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAd,EACJ,EAUgB,EAAAyB,mBAAkB,CASnC,CA/BD,CAAiBzB,IAAG,MAAHA,EAAG,KAoCpB,SAAiBh3B,GAyCf,SAAgB+4B,EAAgBC,EAAgBC,EAAgBnU,GAG9D,MAAM4S,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAU,GAAM,IACvBpB,EAAOoB,GAAW,EAAK,IAC7B,IAAIzB,EAAO0B,GAAU,GAAM,IACvBzB,EAAOyB,GAAU,GAAM,IACvBxB,EAAOwB,GAAW,EAAK,IACvBC,EAAK/B,EAAcH,EAAIyB,mBAAmBlB,EAAKC,EAAKC,GAAMT,EAAIyB,mBAAmBf,EAAKC,EAAKC,IAC/F,KAAOsB,EAAKpU,IAAUyS,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAOr8B,KAAKG,IAAI,EAAGH,KAAK4b,KAAW,GAANygB,IAC7BC,GAAOt8B,KAAKG,IAAI,EAAGH,KAAK4b,KAAW,GAAN0gB,IAC7BC,GAAOv8B,KAAKG,IAAI,EAAGH,KAAK4b,KAAW,GAAN2gB,IAC7ByB,EAAK/B,EAAcH,EAAIyB,mBAAmBlB,EAAKC,EAAKC,GAAMT,EAAIyB,mBAAmBf,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CACvD,CAEA,SAAgB0B,EAAkBH,EAAgBC,EAAgBnU,GAGhE,MAAM4S,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAU,GAAM,IACvBpB,EAAOoB,GAAW,EAAK,IAC7B,IAAIzB,EAAO0B,GAAU,GAAM,IACvBzB,EAAOyB,GAAU,GAAM,IACvBxB,EAAOwB,GAAW,EAAK,IACvBC,EAAK/B,EAAcH,EAAIyB,mBAAmBlB,EAAKC,EAAKC,GAAMT,EAAIyB,mBAAmBf,EAAKC,EAAKC,IAC/F,KAAOsB,EAAKpU,IAAUyS,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAMr8B,KAAKC,IAAI,IAAMo8B,EAAMr8B,KAAK4b,KAAmB,IAAb,IAAMygB,KAC5CC,EAAMt8B,KAAKC,IAAI,IAAMq8B,EAAMt8B,KAAK4b,KAAmB,IAAb,IAAM0gB,KAC5CC,EAAMv8B,KAAKC,IAAI,IAAMs8B,EAAMv8B,KAAK4b,KAAmB,IAAb,IAAM2gB,KAC5CyB,EAAK/B,EAAcH,EAAIyB,mBAAmBlB,EAAKC,EAAKC,GAAMT,EAAIyB,mBAAmBf,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CACvD,CAjEgB,EAAA1S,oBAAhB,SAAoCiU,EAAgBC,EAAgBnU,GAClE,MAAMsU,EAAMpC,EAAI8B,kBAAkBE,GAAU,GACtCK,EAAMrC,EAAI8B,kBAAkBG,GAAU,GAE5C,GADW9B,EAAciC,EAAKC,GACrBvU,EAAO,CACd,GAAIuU,EAAMD,EAAK,CACb,MAAME,EAAUP,EAAgBC,EAAQC,EAAQnU,GAC1CyU,EAAepC,EAAciC,EAAKpC,EAAI8B,kBAAkBQ,GAAW,IACzE,GAAIC,EAAezU,EAAO,CACxB,MAAM0U,EAAUL,EAAkBH,EAAQC,EAAQnU,GAElD,OAAOyU,EADcpC,EAAciC,EAAKpC,EAAI8B,kBAAkBU,GAAW,IACpCF,EAAUE,C,CAEjD,OAAOF,C,CAET,MAAMA,EAAUH,EAAkBH,EAAQC,EAAQnU,GAC5CyU,EAAepC,EAAciC,EAAKpC,EAAI8B,kBAAkBQ,GAAW,IACzE,GAAIC,EAAezU,EAAO,CACxB,MAAM0U,EAAUT,EAAgBC,EAAQC,EAAQnU,GAEhD,OAAOyU,EADcpC,EAAciC,EAAKpC,EAAI8B,kBAAkBU,GAAW,IACpCF,EAAUE,C,CAEjD,OAAOF,C,CAGX,EAEgB,EAAAP,gBAAe,EAoBf,EAAAI,kBAAiB,EAqBjB,EAAA7B,WAAhB,SAA2BvoC,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EAC3E,EAEgB,EAAAkR,QAAhB,SAAwBiyB,EAAWC,EAAWC,EAAWvrC,GACvD,MAAO,CACL8G,IAAK0R,EAASgzB,MAAMH,EAAGC,EAAGC,EAAGvrC,GAC7BmZ,KAAMX,EAASizB,OAAOJ,EAAGC,EAAGC,EAAGvrC,GAEnC,CACD,CA5FD,CAAiBmZ,IAAI,OAAJA,EAAI,KA8FrB,gBAWA,iB,wFCvUA,eACA,UACA,UACA,UACA,SACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAGA,UACA,UACA,UAGA,IAAIy5B,GAA2B,EAE/B,MAAsBt9B,UAAqB,EAAAlV,WAiCzC,YAAW0C,GAOT,OANKlC,KAAKiyC,eACRjyC,KAAKiyC,aAAejyC,KAAKqB,SAAS,IAAI,EAAAiJ,cACtCtK,KAAK2e,UAAUnU,OAAMhD,I,MACF,QAAjB,EAAAxH,KAAKiyC,oBAAY,SAAEviC,KAAKlI,EAAG3C,SAAS,KAGjC7E,KAAKiyC,aAAaznC,KAC3B,CAEA,QAAWoD,GAAiB,OAAO5N,KAAK+J,eAAe6D,IAAM,CAC7D,QAAWnN,GAAiB,OAAOT,KAAK+J,eAAetJ,IAAM,CAC7D,WAAWkY,GAAwB,OAAO3Y,KAAK+J,eAAe4O,OAAS,CACvE,WAAWlP,GAAwC,OAAOzJ,KAAKiH,eAAewC,OAAS,CACvF,WAAWA,CAAQA,GACjB,IAAK,MAAM7G,KAAO6G,EAChBzJ,KAAKiH,eAAewC,QAAQ7G,GAAO6G,EAAQ7G,EAE/C,CAEA,WAAAnD,CACEgK,GAEA9J,QAxCe,KAAAuyC,UAAYlyC,KAAKqB,SAAS,IAAI,EAAAiJ,cAC/B,KAAA6nC,SAAWnyC,KAAKkyC,UAAU1nC,MACzB,KAAA4nC,QAAUpyC,KAAKqB,SAAS,IAAI,EAAAiJ,cAC7B,KAAA+nC,OAASryC,KAAKoyC,QAAQ5nC,MAC5B,KAAA8nC,YAActyC,KAAKqB,SAAS,IAAI,EAAAiJ,cAC1B,KAAAhI,WAAatC,KAAKsyC,YAAY9nC,MAC7B,KAAA+nC,UAAYvyC,KAAKqB,SAAS,IAAI,EAAAiJ,cAC/B,KAAA1I,SAAW5B,KAAKuyC,UAAU/nC,MACvB,KAAAgoC,eAAiBxyC,KAAKqB,SAAS,IAAI,EAAAiJ,cACtC,KAAAmoC,cAAgBzyC,KAAKwyC,eAAehoC,MAO1C,KAAAmU,UAAY3e,KAAKqB,SAAS,IAAI,EAAAiJ,cA2BtCtK,KAAKoW,sBAAwB,IAAI,EAAAs8B,qBACjC1yC,KAAKiH,eAAiBjH,KAAKqB,SAAS,IAAI,EAAAsxC,eAAelpC,IACvDzJ,KAAKoW,sBAAsBI,WAAW,EAAA9D,gBAAiB1S,KAAKiH,gBAC5DjH,KAAK+J,eAAiB/J,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAu8B,gBAC9E5yC,KAAKoW,sBAAsBI,WAAW,EAAAnG,eAAgBrQ,KAAK+J,gBAC3D/J,KAAK0b,YAAc1b,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAAw8B,aAC3E7yC,KAAKoW,sBAAsBI,WAAW,EAAAs8B,YAAa9yC,KAAK0b,aACxD1b,KAAKgH,YAAchH,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAA08B,cAC3E/yC,KAAKoW,sBAAsBI,WAAW,EAAA2a,aAAcnxB,KAAKgH,aACzDhH,KAAK8e,iBAAmB9e,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAA28B,mBAChFhzC,KAAKoW,sBAAsBI,WAAW,EAAAy8B,kBAAmBjzC,KAAK8e,kBAC9D9e,KAAKkzC,eAAiBlzC,KAAKqB,SAASrB,KAAKoW,sBAAsBC,eAAe,EAAA88B,iBAC9EnzC,KAAKoW,sBAAsBI,WAAW,EAAA48B,gBAAiBpzC,KAAKkzC,gBAC5DlzC,KAAKqzC,gBAAkBrzC,KAAKoW,sBAAsBC,eAAe,EAAAi9B,gBACjEtzC,KAAKoW,sBAAsBI,WAAW,EAAA+8B,gBAAiBvzC,KAAKqzC,iBAC5DrzC,KAAKyQ,gBAAkBzQ,KAAKoW,sBAAsBC,eAAe,EAAAm9B,gBACjExzC,KAAKoW,sBAAsBI,WAAW,EAAA7D,gBAAiB3S,KAAKyQ,iBAG5DzQ,KAAK0W,cAAgB1W,KAAKqB,SAAS,IAAI,EAAAoyC,aAAazzC,KAAK+J,eAAgB/J,KAAKqzC,gBAAiBrzC,KAAKgH,YAAahH,KAAK0b,YAAa1b,KAAKiH,eAAgBjH,KAAKyQ,gBAAiBzQ,KAAK8e,iBAAkB9e,KAAKkzC,iBAC1MlzC,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK0W,cAAcpU,WAAYtC,KAAKsyC,cAC/DtyC,KAAKqB,SAASrB,KAAK0W,eAGnB1W,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK+J,eAAenI,SAAU5B,KAAKuyC,YAC9DvyC,KAAKqB,UAAS,IAAAgW,cAAarX,KAAKgH,YAAYqrC,OAAQryC,KAAKoyC,UACzDpyC,KAAKqB,UAAS,IAAAgW,cAAarX,KAAKgH,YAAYmrC,SAAUnyC,KAAKkyC,YAC3DlyC,KAAKqB,SAASrB,KAAKgH,YAAY0sC,yBAAwB,IAAM1zC,KAAK+jB,oBAClE/jB,KAAKqB,SAASrB,KAAKgH,YAAY2+B,aAAY,IAAO3lC,KAAK2zC,aAAaC,qBACpE5zC,KAAKqB,SAASrB,KAAKiH,eAAei5B,uBAAuB,CAAC,cAAe,eAAe,IAAMlgC,KAAK6zC,mCACnG7zC,KAAKqB,SAASrB,KAAK+J,eAAe7H,UAASsI,IACzCxK,KAAK2e,UAAUjP,KAAK,CAAE7K,SAAU7E,KAAK+J,eAAe5F,OAAOM,MAAO4d,OAAQ,IAC1EriB,KAAK0W,cAAco9B,eAAe9zC,KAAK+J,eAAe5F,OAAOykB,UAAW5oB,KAAK+J,eAAe5F,OAAO4vC,aAAa,KAElH/zC,KAAKqB,SAASrB,KAAK0W,cAAcxU,UAASsI,IACxCxK,KAAK2e,UAAUjP,KAAK,CAAE7K,SAAU7E,KAAK+J,eAAe5F,OAAOM,MAAO4d,OAAQ,IAC1EriB,KAAK0W,cAAco9B,eAAe9zC,KAAK+J,eAAe5F,OAAOykB,UAAW5oB,KAAK+J,eAAe5F,OAAO4vC,aAAa,KAIlH/zC,KAAK2zC,aAAe3zC,KAAKqB,SAAS,IAAI,EAAA2yC,aAAY,CAACpyB,EAAMqyB,IAAkBj0C,KAAK0W,cAAcw9B,MAAMtyB,EAAMqyB,MAC1Gj0C,KAAKqB,UAAS,IAAAgW,cAAarX,KAAK2zC,aAAalB,cAAezyC,KAAKwyC,iBAEjExyC,KAAKqB,UAAS,IAAAgC,eAAa,K,MACM,QAA/B,EAAArD,KAAKm0C,kCAA0B,SAAExqC,UACjC3J,KAAKm0C,gCAA6BtpC,CAAS,IAE/C,CAEO,KAAAupC,CAAMxyB,EAA2BlR,GACtC1Q,KAAK2zC,aAAaS,MAAMxyB,EAAMlR,EAChC,CAWO,SAAA2jC,CAAUzyB,EAA2B0yB,GACtCt0C,KAAK0b,YAAY0F,UAAY,EAAAmzB,aAAaC,OAASxC,IACrDhyC,KAAK0b,YAAYjJ,KAAK,qDACtBu/B,GAA2B,GAE7BhyC,KAAK2zC,aAAaU,UAAUzyB,EAAM0yB,EACpC,CAEO,MAAAp3B,CAAOlR,EAAWC,GACnBwoC,MAAMzoC,IAAMyoC,MAAMxoC,KAItBD,EAAIyH,KAAKG,IAAI5H,EAAG,EAAA0oC,cAChBzoC,EAAIwH,KAAKG,IAAI3H,EAAG,EAAA0oC,cAEhB30C,KAAK+J,eAAemT,OAAOlR,EAAGC,GAChC,CAOO,MAAA2oC,CAAOC,EAA2BxqB,GAAqB,GAC5DrqB,KAAK+J,eAAe6qC,OAAOC,EAAWxqB,EACxC,CAUO,WAAA3kB,CAAY0c,EAActE,EAA+BuE,GAC9DriB,KAAK+J,eAAerE,YAAY0c,EAAMtE,EAAqBuE,EAC7D,CAEO,WAAAyyB,CAAYC,GACjB/0C,KAAK0F,YAAYqvC,GAAa/0C,KAAKS,KAAO,GAC5C,CAEO,WAAAu0C,GACLh1C,KAAK0F,aAAa1F,KAAK+J,eAAe5F,OAAOM,MAC/C,CAEO,cAAAsf,GACL/jB,KAAK0F,YAAY1F,KAAK+J,eAAe5F,OAAOwV,MAAQ3Z,KAAK+J,eAAe5F,OAAOM,MACjF,CAEO,YAAAwwC,CAAatkC,GAClB,MAAMukC,EAAevkC,EAAO3Q,KAAK+J,eAAe5F,OAAOM,MAClC,IAAjBywC,GACFl1C,KAAK0F,YAAYwvC,EAErB,CAGO,kBAAAC,CAAmBlU,EAAyBvwB,GACjD,OAAO1Q,KAAK0W,cAAcy+B,mBAAmBlU,EAAIvwB,EACnD,CAGO,kBAAA0kC,CAAmBnU,EAAyBvwB,GACjD,OAAO1Q,KAAK0W,cAAc0+B,mBAAmBnU,EAAIvwB,EACnD,CAGO,kBAAA2kC,CAAmBpU,EAAyBvwB,GACjD,OAAO1Q,KAAK0W,cAAc2+B,mBAAmBpU,EAAIvwB,EACnD,CAGO,kBAAA4kC,CAAmB39B,EAAejH,GACvC,OAAO1Q,KAAK0W,cAAc4+B,mBAAmB39B,EAAOjH,EACtD,CAEU,MAAAwF,GACRlW,KAAK6zC,+BACP,CAEO,KAAA78B,GACLhX,KAAK0W,cAAcM,QACnBhX,KAAK+J,eAAeiN,QACpBhX,KAAKqzC,gBAAgBr8B,QACrBhX,KAAKgH,YAAYgQ,QACjBhX,KAAK8e,iBAAiB9H,OACxB,CAGQ,6BAAA68B,G,MACN,IAAIvsC,GAAQ,EACZ,MAAMiuC,EAAav1C,KAAKiH,eAAeE,WAAWouC,WAC9CA,QAAyC1qC,IAA3B0qC,EAAWC,kBAAwD3qC,IAA3B0qC,EAAWC,YACnEluC,KAAkC,WAAvBiuC,EAAWE,SAAwBF,EAAWC,YAAc,OAC9Dx1C,KAAKiH,eAAeE,WAAWuuC,cACxCpuC,GAAQ,GAENA,EACFtH,KAAK21C,oCAE0B,QAA/B,EAAA31C,KAAKm0C,kCAA0B,SAAExqC,UACjC3J,KAAKm0C,gCAA6BtpC,EAEtC,CAEU,gCAAA8qC,GACR,IAAK31C,KAAKm0C,2BAA4B,CACpC,MAAMyB,EAA6B,GACnCA,EAAY3xC,KAAKjE,KAAKsC,WAAW,EAAAuzC,8BAA8Br0C,KAAK,KAAMxB,KAAK+J,kBAC/E6rC,EAAY3xC,KAAKjE,KAAKq1C,mBAAmB,CAAES,MAAO,MAAO,MACvD,IAAAD,+BAA8B71C,KAAK+J,iBAC5B,MAET/J,KAAKm0C,4BAA6B,IAAA9wC,eAAa,KAC7C,IAAK,MAAM+2B,KAAKwb,EACdxb,EAAEzwB,S,IAIV,EAnPF,gB,qGCxBA,mCACU,KAAAosC,WAAgC,GAEhC,KAAAC,WAAqB,CAwC/B,CAtCE,SAAWxrC,GAmBT,OAlBKxK,KAAKi2C,SACRj2C,KAAKi2C,OAAUhiC,IACbjU,KAAK+1C,WAAW9xC,KAAKgQ,GACF,CACjBtK,QAAS,KACP,IAAK3J,KAAKg2C,UACR,IAAK,IAAI32C,EAAI,EAAGA,EAAIW,KAAK+1C,WAAW90C,OAAQ5B,IAC1C,GAAIW,KAAK+1C,WAAW12C,KAAO4U,EAEzB,YADAjU,KAAK+1C,WAAW5qC,OAAO9L,EAAG,E,KAUjCW,KAAKi2C,MACd,CAEO,IAAAvmC,CAAKwmC,EAASC,GACnB,MAAMC,EAA2B,GACjC,IAAK,IAAI/2C,EAAI,EAAGA,EAAIW,KAAK+1C,WAAW90C,OAAQ5B,IAC1C+2C,EAAMnyC,KAAKjE,KAAK+1C,WAAW12C,IAE7B,IAAK,IAAIA,EAAI,EAAGA,EAAI+2C,EAAMn1C,OAAQ5B,IAChC+2C,EAAM/2C,GAAGg3C,UAAKxrC,EAAWqrC,EAAMC,EAEnC,CAEO,OAAAxsC,GACD3J,KAAK+1C,aACP/1C,KAAK+1C,WAAW90C,OAAS,GAE3BjB,KAAKg2C,WAAY,CACnB,GAGF,wBAAgCM,EAAiBC,GAC/C,OAAOD,GAAKz1C,GAAK01C,EAAG7mC,KAAK7O,IAC3B,C,8hBC7DA,gBACA,UACA,UACA,SACA,SACA,UACA,UAEA,SACA,SACA,UACA,UACA,UACA,UAEA,UAKM21C,EAAoC,CAAE,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAgCnFC,EAAyB,OAQ/B,SAASC,EAAoBC,EAAWC,GACtC,GAAID,EAAI,GACN,OAAOC,EAAKC,cAAe,EAE7B,OAAQF,GACN,KAAK,EAAG,QAASC,EAAKE,WACtB,KAAK,EAAG,QAASF,EAAKG,YACtB,KAAK,EAAG,QAASH,EAAKI,eACtB,KAAK,EAAG,QAASJ,EAAKK,iBACtB,KAAK,EAAG,QAASL,EAAKM,SACtB,KAAK,EAAG,QAASN,EAAKO,SACtB,KAAK,EAAG,QAASP,EAAKQ,WACtB,KAAK,EAAG,QAASR,EAAKS,gBACtB,KAAK,EAAG,QAAST,EAAKU,YACtB,KAAK,GAAI,QAASV,EAAKW,cACvB,KAAK,GAAI,QAASX,EAAKY,YACvB,KAAK,GAAI,QAASZ,EAAKa,eACvB,KAAK,GAAI,QAASb,EAAKc,iBACvB,KAAK,GAAI,QAASd,EAAKe,oBACvB,KAAK,GAAI,QAASf,EAAKgB,kBACvB,KAAK,GAAI,QAAShB,EAAKiB,gBACvB,KAAK,GAAI,QAASjB,EAAKkB,mBACvB,KAAK,GAAI,QAASlB,EAAKmB,aACvB,KAAK,GAAI,QAASnB,EAAKoB,YACvB,KAAK,GAAI,QAASpB,EAAKqB,UACvB,KAAK,GAAI,QAASrB,EAAKsB,SACvB,KAAK,GAAI,QAAStB,EAAKC,YAEzB,OAAO,CACT,CAEA,IAAYrxB,GAAZ,SAAYA,GACV,iDACA,kDACD,CAHD,CAAYA,IAAwB,2BAAxBA,EAAwB,KASpC,IAAI2yB,EAAQ,EASZ,MAAa1E,UAAqB,EAAAj0C,WAYzB,WAAA44C,GAAgC,OAAOp4C,KAAKq4C,YAAc,CAyCjE,WAAA54C,CACmBsK,EACAspC,EACAnjB,EACAxU,EACAlL,EACAC,EACA6nC,EACAC,EACAC,EAAiC,IAAI,EAAAC,sBAEtD94C,QAViB,KAAAoK,eAAAA,EACA,KAAAspC,gBAAAA,EACA,KAAAnjB,aAAAA,EACA,KAAAxU,YAAAA,EACA,KAAAlL,gBAAAA,EACA,KAAAC,gBAAAA,EACA,KAAA6nC,kBAAAA,EACA,KAAAC,gBAAAA,EACA,KAAAC,QAAAA,EA7DX,KAAAE,aAA4B,IAAIC,YAAY,MAC5C,KAAAC,eAAgC,IAAI,EAAAC,cACpC,KAAAC,aAA4B,IAAI,EAAAC,YAChC,KAAA1gB,UAAsB,IAAI,EAAAvnB,SAC1B,KAAAkoC,aAAe,GACf,KAAAC,UAAY,GAEV,KAAAC,kBAA8B,GAC9B,KAAAC,eAA2B,GAE7B,KAAAd,aAA+B,EAAA/yB,kBAAkBwpB,QAEjD,KAAAsK,uBAAyC,EAAA9zB,kBAAkBwpB,QAIlD,KAAAuK,eAAiBr5C,KAAKqB,SAAS,IAAI,EAAAiJ,cACpC,KAAAqM,cAAgB3W,KAAKq5C,eAAe7uC,MACnC,KAAA8uC,sBAAwBt5C,KAAKqB,SAAS,IAAI,EAAAiJ,cAC3C,KAAAsM,qBAAuB5W,KAAKs5C,sBAAsB9uC,MACjD,KAAA+uC,gBAAkBv5C,KAAKqB,SAAS,IAAI,EAAAiJ,cACrC,KAAAyM,eAAiB/W,KAAKu5C,gBAAgB/uC,MACrC,KAAAgvC,oBAAsBx5C,KAAKqB,SAAS,IAAI,EAAAiJ,cACzC,KAAAuM,mBAAqB7W,KAAKw5C,oBAAoBhvC,MAC7C,KAAAivC,wBAA0Bz5C,KAAKqB,SAAS,IAAI,EAAAiJ,cAC7C,KAAAyT,uBAAyB/d,KAAKy5C,wBAAwBjvC,MACrD,KAAAkvC,+BAAiC15C,KAAKqB,SAAS,IAAI,EAAAiJ,cACpD,KAAA2M,8BAAgCjX,KAAK05C,+BAA+BlvC,MAEnE,KAAAmvC,YAAc35C,KAAKqB,SAAS,IAAI,EAAAiJ,cACjC,KAAAnI,WAAanC,KAAK25C,YAAYnvC,MAC7B,KAAAovC,WAAa55C,KAAKqB,SAAS,IAAI,EAAAiJ,cAChC,KAAA/H,UAAYvC,KAAK45C,WAAWpvC,MAC3B,KAAAgL,cAAgBxV,KAAKqB,SAAS,IAAI,EAAAiJ,cACnC,KAAAmL,aAAezV,KAAKwV,cAAchL,MACjC,KAAA8nC,YAActyC,KAAKqB,SAAS,IAAI,EAAAiJ,cACjC,KAAAhI,WAAatC,KAAKsyC,YAAY9nC,MAC7B,KAAAmU,UAAY3e,KAAKqB,SAAS,IAAI,EAAAiJ,cAC/B,KAAApI,SAAWlC,KAAK2e,UAAUnU,MACzB,KAAAsL,eAAiB9V,KAAKqB,SAAS,IAAI,EAAAiJ,cACpC,KAAAyL,cAAgB/V,KAAK8V,eAAetL,MACnC,KAAAqvC,SAAW75C,KAAKqB,SAAS,IAAI,EAAAiJ,cAC9B,KAAA6M,QAAUnX,KAAK65C,SAASrvC,MAEhC,KAAAsvC,YAA2B,CACjCC,QAAQ,EACRC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfr1C,SAAU,GAgxFJ,KAAAs1C,eAAiB,CAAC,IAAD,SAjwFvBn6C,KAAKqB,SAASrB,KAAKw4C,SACnBx4C,KAAKo6C,iBAAmB,IAAIC,EAAgBr6C,KAAK+J,gBAGjD/J,KAAK6nB,cAAgB7nB,KAAK+J,eAAe5F,OACzCnE,KAAKqB,SAASrB,KAAK+J,eAAe4O,QAAQmP,kBAAiBjnB,GAAKb,KAAK6nB,cAAgBhnB,EAAEknB,gBAKvF/nB,KAAKw4C,QAAQ8B,uBAAsB,CAAC3iC,EAAO4iC,KACzCv6C,KAAK0b,YAAYC,MAAM,qBAAsB,CAAE6+B,WAAYx6C,KAAKw4C,QAAQiC,cAAc9iC,GAAQ4iC,OAAQA,EAAOG,WAAY,IAE3H16C,KAAKw4C,QAAQmC,uBAAsBhjC,IACjC3X,KAAK0b,YAAYC,MAAM,qBAAsB,CAAE6+B,WAAYx6C,KAAKw4C,QAAQiC,cAAc9iC,IAAS,IAEjG3X,KAAKw4C,QAAQoC,2BAA0BC,IACrC76C,KAAK0b,YAAYC,MAAM,yBAA0B,CAAEk/B,QAAO,IAE5D76C,KAAKw4C,QAAQsC,uBAAsB,CAACN,EAAY16B,EAAQ8B,KACtD5hB,KAAK0b,YAAYC,MAAM,qBAAsB,CAAE6+B,aAAY16B,SAAQ8B,QAAO,IAE5E5hB,KAAKw4C,QAAQuC,uBAAsB,CAACpjC,EAAOmI,EAAQk7B,KAClC,SAAXl7B,IACFk7B,EAAUA,EAAQN,WAEpB16C,KAAK0b,YAAYC,MAAM,qBAAsB,CAAE6+B,WAAYx6C,KAAKw4C,QAAQiC,cAAc9iC,GAAQmI,SAAQk7B,WAAU,IAMlHh7C,KAAKw4C,QAAQyC,iBAAgB,CAACr5B,EAAM5f,EAAOC,IAAQjC,KAAKk7C,MAAMt5B,EAAM5f,EAAOC,KAK3EjC,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKm7C,YAAYZ,KAC3Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAKq7C,WAAWd,KAC9Fv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKs7C,SAASf,KACxEv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAKu7C,YAAYhB,KAC/Fv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKw7C,WAAWjB,KAC1Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKy7C,cAAclB,KAC7Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK07C,eAAenB,KAC9Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK27C,eAAepB,KAC9Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK47C,oBAAoBrB,KACnFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK67C,mBAAmBtB,KAClFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK87C,eAAevB,KAC9Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK+7C,iBAAiBxB,KAChFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKg8C,eAAezB,GAAQ,KACtFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKnG,MAAO,MAAOyE,GAAUv6C,KAAKg8C,eAAezB,GAAQ,KACnGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKk8C,YAAY3B,GAAQ,KACnFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKnG,MAAO,MAAOyE,GAAUv6C,KAAKk8C,YAAY3B,GAAQ,KAChGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKm8C,YAAY5B,KAC3Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKo8C,YAAY7B,KAC3Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKq8C,YAAY9B,KAC3Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKs8C,SAAS/B,KACxEv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKu8C,WAAWhC,KAC1Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKw8C,WAAWjC,KAC1Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKy8C,kBAAkBlC,KACjFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK08C,gBAAgBnC,KAC/Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK28C,kBAAkBpC,KACjFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK48C,yBAAyBrC,KACxFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK68C,4BAA4BtC,KAC3Fv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKnG,MAAO,MAAOyE,GAAUv6C,KAAK88C,8BAA8BvC,KAC1Gv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK+8C,gBAAgBxC,KAC/Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKg9C,kBAAkBzC,KACjFv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKi9C,WAAW1C,KAC1Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKk9C,SAAS3C,KACxEv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKm9C,QAAQ5C,KACvEv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKnG,MAAO,MAAOyE,GAAUv6C,KAAKo9C,eAAe7C,KAC3Fv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKq9C,UAAU9C,KACzEv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKnG,MAAO,MAAOyE,GAAUv6C,KAAKs9C,iBAAiB/C,KAC7Fv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKu9C,eAAehD,KAC9Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAKw9C,aAAajD,KAC5Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKnG,MAAO,MAAOyE,GAAUv6C,KAAKy9C,oBAAoBlD,KAChGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAK09C,UAAUnD,KAC7Fv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAK29C,eAAepD,KAClGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK49C,gBAAgBrD,KAC/Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK69C,WAAWtD,KAC1Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK89C,cAAcvD,KAC7Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAES,MAAO,MAAOyE,GAAUv6C,KAAK+9C,cAAcxD,KAC7Ev6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAMtF,MAAO,MAAOyE,GAAUv6C,KAAKg+C,cAAczD,KAClGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAMtF,MAAO,MAAOyE,GAAUv6C,KAAKi+C,cAAc1D,KAClGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAKk+C,gBAAgB3D,KACnGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE+F,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAKm+C,YAAY5D,GAAQ,KACvGv6C,KAAKw4C,QAAQnD,mBAAmB,CAAE4G,OAAQ,IAAKb,cAAe,IAAKtF,MAAO,MAAOyE,GAAUv6C,KAAKm+C,YAAY5D,GAAQ,KAKpHv6C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAGomC,KAAK,IAAMr+C,KAAKs+C,SAClDt+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAGsmC,IAAI,IAAMv+C,KAAKw+C,aACjDx+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAGwmC,IAAI,IAAMz+C,KAAKw+C,aACjDx+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAGymC,IAAI,IAAM1+C,KAAKw+C,aACjDx+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAGqM,IAAI,IAAMtkB,KAAK2+C,mBACjD3+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAG2mC,IAAI,IAAM5+C,KAAK6+C,cACjD7+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAG6mC,IAAI,IAAM9+C,KAAK++C,QACjD/+C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAG+mC,IAAI,IAAMh/C,KAAKi/C,aACjDj/C,KAAKw4C,QAAQ4F,kBAAkB,EAAAnmC,GAAGinC,IAAI,IAAMl/C,KAAKm/C,YAGjDn/C,KAAKw4C,QAAQ4F,kBAAkB,EAAAgB,GAAGC,KAAK,IAAMr/C,KAAK8N,UAClD9N,KAAKw4C,QAAQ4F,kBAAkB,EAAAgB,GAAGE,KAAK,IAAMt/C,KAAKu/C,aAClDv/C,KAAKw4C,QAAQ4F,kBAAkB,EAAAgB,GAAGI,KAAK,IAAMx/C,KAAKy/C,WAMlDz/C,KAAKw4C,QAAQlD,mBAAmB,EAAG,IAAI,EAAAoK,YAAW99B,IAAU5hB,KAAK2/C,SAAS/9B,GAAO5hB,KAAK4/C,YAAYh+B,IAAc,MAEhH5hB,KAAKw4C,QAAQlD,mBAAmB,EAAG,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAK4/C,YAAYh+B,MAE3E5hB,KAAKw4C,QAAQlD,mBAAmB,EAAG,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAK2/C,SAAS/9B,MAGxE5hB,KAAKw4C,QAAQlD,mBAAmB,EAAG,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAK6/C,wBAAwBj+B,MAKvF5hB,KAAKw4C,QAAQlD,mBAAmB,EAAG,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAK8/C,aAAal+B,MAE5E5hB,KAAKw4C,QAAQlD,mBAAmB,GAAI,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAK+/C,mBAAmBn+B,MAEnF5hB,KAAKw4C,QAAQlD,mBAAmB,GAAI,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAKggD,mBAAmBp+B,MAEnF5hB,KAAKw4C,QAAQlD,mBAAmB,GAAI,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAKigD,uBAAuBr+B,MAavF5hB,KAAKw4C,QAAQlD,mBAAmB,IAAK,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAKkgD,oBAAoBt+B,MAIrF5hB,KAAKw4C,QAAQlD,mBAAmB,IAAK,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAKmgD,eAAev+B,MAEhF5hB,KAAKw4C,QAAQlD,mBAAmB,IAAK,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAKogD,eAAex+B,MAEhF5hB,KAAKw4C,QAAQlD,mBAAmB,IAAK,IAAI,EAAAoK,YAAW99B,GAAQ5hB,KAAKqgD,mBAAmBz+B,MAYpF5hB,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK69C,eAC3D79C,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK+9C,kBAC3D/9C,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK8N,UAC3D9N,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAKu/C,aAC3Dv/C,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAKy/C,WAC3Dz/C,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAKsgD,iBAC3DtgD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAKugD,0BAC3DvgD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAKwgD,sBAC3DxgD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAKygD,cAC3DzgD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK0gD,UAAU,KACrE1gD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK0gD,UAAU,KACrE1gD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK0gD,UAAU,KACrE1gD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK0gD,UAAU,KACrE1gD,KAAKw4C,QAAQrD,mBAAmB,CAAEW,MAAO,MAAO,IAAM91C,KAAK0gD,UAAU,KACrE1gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO,MAAO,IAAM91C,KAAK2gD,yBAC/E3gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO,MAAO,IAAM91C,KAAK2gD,yBAC/E,IAAK,MAAMC,KAAQ,EAAAC,SACjB7gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KACpG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KACpG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KACpG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KACpG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KACpG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KACpG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO8K,IAAQ,IAAM5gD,KAAK8gD,cAAc,IAAMF,KAEtG5gD,KAAKw4C,QAAQrD,mBAAmB,CAAEiG,cAAe,IAAKtF,MAAO,MAAO,IAAM91C,KAAK+gD,2BAK/E/gD,KAAKw4C,QAAQwI,iBAAiBtyC,IAC5B1O,KAAK0b,YAAYqmB,MAAM,kBAAmBrzB,GACnCA,KAMT1O,KAAKw4C,QAAQpD,mBAAmB,CAAEgG,cAAe,IAAKtF,MAAO,KAAO,IAAI,EAAAmL,YAAW,CAACr/B,EAAM24B,IAAWv6C,KAAKkhD,oBAAoBt/B,EAAM24B,KACtI,CAKQ,cAAA4G,CAAenH,EAAsBC,EAAsBC,EAAuBr1C,GACxF7E,KAAK85C,YAAYC,QAAS,EAC1B/5C,KAAK85C,YAAYE,aAAeA,EAChCh6C,KAAK85C,YAAYG,aAAeA,EAChCj6C,KAAK85C,YAAYI,cAAgBA,EACjCl6C,KAAK85C,YAAYj1C,SAAWA,CAC9B,CAEQ,sBAAAu8C,CAAuBC,GAEzBrhD,KAAK0b,YAAY0F,UAAY,EAAAmzB,aAAaC,MAC5C8M,QAAQC,KAAK,CAACF,EAAG,IAAIC,SAAQ,CAACE,EAAKC,IAAQ39C,YAAW,IAAM29C,EAAI,kBArS7C,SAsShBC,OAAMC,IACL,GAAY,kBAARA,EACF,MAAMA,EAERnvC,QAAQC,KAAK,kDAAiE,GAGtF,CAEQ,iBAAAmvC,GACN,OAAO5hD,KAAKq4C,aAAa9mC,SAASC,KACpC,CAeO,KAAA0iC,CAAMtyB,EAA2BqyB,GACtC,IAAIrjC,EACAopC,EAAeh6C,KAAK6nB,cAAc7b,EAClCiuC,EAAej6C,KAAK6nB,cAAc5b,EAClCjK,EAAQ,EACZ,MAAM6/C,EAAY7hD,KAAK85C,YAAYC,OAEnC,GAAI8H,EAAW,CAEb,GAAIjxC,EAAS5Q,KAAKw4C,QAAQtE,MAAMl0C,KAAK04C,aAAc14C,KAAK85C,YAAYI,cAAejG,GAEjF,OADAj0C,KAAKohD,uBAAuBxwC,GACrBA,EAETopC,EAAeh6C,KAAK85C,YAAYE,aAChCC,EAAej6C,KAAK85C,YAAYG,aAChCj6C,KAAK85C,YAAYC,QAAS,EACtBn4B,EAAK3gB,OAASw1C,IAChBz0C,EAAQhC,KAAK85C,YAAYj1C,SAAW4xC,E,CA0BxC,GArBIz2C,KAAK0b,YAAY0F,UAAY,EAAAmzB,aAAauN,OAC5C9hD,KAAK0b,YAAYC,MAAM,gBAA+B,iBAATiG,EAAoB,KAAKA,KAAU,KAAKksB,MAAMiU,UAAU70C,IAAImpC,KAAKz0B,GAAM/gB,GAAKkkB,OAAOC,aAAankB,KAAI26B,KAAK,QAA0B,iBAAT5Z,EACnKA,EAAKogC,MAAM,IAAI90C,KAAIrM,GAAKA,EAAEujB,WAAW,KACrCxC,GAKF5hB,KAAK04C,aAAaz3C,OAAS2gB,EAAK3gB,QAC9BjB,KAAK04C,aAAaz3C,OAASw1C,IAC7Bz2C,KAAK04C,aAAe,IAAIC,YAAYllC,KAAKC,IAAIkO,EAAK3gB,OAAQw1C,KAMzDoL,GACH7hD,KAAKo6C,iBAAiB6H,aAIpBrgC,EAAK3gB,OAASw1C,EAChB,IAAK,IAAIp3C,EAAI2C,EAAO3C,EAAIuiB,EAAK3gB,OAAQ5B,GAAKo3C,EAAwB,CAChE,MAAMx0C,EAAM5C,EAAIo3C,EAAyB70B,EAAK3gB,OAAS5B,EAAIo3C,EAAyB70B,EAAK3gB,OACnFihD,EAAuB,iBAATtgC,EAChB5hB,KAAK44C,eAAeuJ,OAAOvgC,EAAK+O,UAAUtxB,EAAG4C,GAAMjC,KAAK04C,cACxD14C,KAAK84C,aAAaqJ,OAAOvgC,EAAKwgC,SAAS/iD,EAAG4C,GAAMjC,KAAK04C,cACzD,GAAI9nC,EAAS5Q,KAAKw4C,QAAQtE,MAAMl0C,KAAK04C,aAAcwJ,GAGjD,OAFAliD,KAAKmhD,eAAenH,EAAcC,EAAciI,EAAK7iD,GACrDW,KAAKohD,uBAAuBxwC,GACrBA,C,MAIX,IAAKixC,EAAW,CACd,MAAMK,EAAuB,iBAATtgC,EAChB5hB,KAAK44C,eAAeuJ,OAAOvgC,EAAM5hB,KAAK04C,cACtC14C,KAAK84C,aAAaqJ,OAAOvgC,EAAM5hB,KAAK04C,cACxC,GAAI9nC,EAAS5Q,KAAKw4C,QAAQtE,MAAMl0C,KAAK04C,aAAcwJ,GAGjD,OAFAliD,KAAKmhD,eAAenH,EAAcC,EAAciI,EAAK,GACrDliD,KAAKohD,uBAAuBxwC,GACrBA,C,CAKT5Q,KAAK6nB,cAAc7b,IAAMguC,GAAgBh6C,KAAK6nB,cAAc5b,IAAMguC,GACpEj6C,KAAKwV,cAAc9F,OAIrB1P,KAAKs5C,sBAAsB5pC,KAAK1P,KAAKo6C,iBAAiBp4C,MAAOhC,KAAKo6C,iBAAiBn4C,IACrF,CAEO,KAAAi5C,CAAMt5B,EAAmB5f,EAAeC,GAC7C,IAAI44C,EACAwH,EACJ,MAAMC,EAAUtiD,KAAKqzC,gBAAgBiP,QAC/BpjC,EAAmBlf,KAAKwQ,gBAAgBrJ,WAAW+X,iBACnDtR,EAAO5N,KAAK+J,eAAe6D,KAC3B20C,EAAiBviD,KAAKkwB,aAAahpB,gBAAgBs7C,WACnDC,EAAaziD,KAAKkwB,aAAawyB,MAAMD,WACrCE,EAAU3iD,KAAKq4C,aACrB,IAAIuK,EAAY5iD,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAE3FjM,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,GAG/CjM,KAAK6nB,cAAc7b,GAAK/J,EAAMD,EAAQ,GAAsD,IAAjD4gD,EAAU7oC,SAAS/Z,KAAK6nB,cAAc7b,EAAI,IACvF42C,EAAUE,qBAAqB9iD,KAAK6nB,cAAc7b,EAAI,EAAG,EAAG,EAAG22C,EAAQ55C,GAAI45C,EAAQ75C,GAAI65C,EAAQpxC,UAGjG,IAAK,IAAI7J,EAAM1F,EAAO0F,EAAMzF,IAAOyF,EAAK,CAUtC,GATAmzC,EAAOj5B,EAAKla,GAIZ26C,EAAUriD,KAAKu4C,gBAAgBwK,QAAQlI,GAKnCA,EAAO,KAAOyH,EAAS,CACzB,MAAMU,EAAKV,EAAQv9B,OAAOC,aAAa61B,IACnCmI,IACFnI,EAAOmI,EAAG5+B,WAAW,G,CAezB,GAXIlF,GACFlf,KAAK25C,YAAYjqC,MAAK,IAAAuzC,qBAAoBpI,IAExC76C,KAAK4hD,qBACP5hD,KAAKyQ,gBAAgByyC,cAAcljD,KAAK4hD,oBAAqB5hD,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAOxGo2C,IAAWriD,KAAK6nB,cAAc7b,EAAnC,CAeA,GAAIhM,KAAK6nB,cAAc7b,EAAIq2C,EAAU,GAAKz0C,EAGxC,GAAI20C,EAAgB,CAElB,KAAOviD,KAAK6nB,cAAc7b,EAAI4B,GAC5Bg1C,EAAUE,qBAAqB9iD,KAAK6nB,cAAc7b,IAAK,EAAG,EAAG22C,EAAQ55C,GAAI45C,EAAQ75C,GAAI65C,EAAQpxC,UAE/FvR,KAAK6nB,cAAc7b,EAAI,EACvBhM,KAAK6nB,cAAc5b,IACfjM,KAAK6nB,cAAc5b,IAAMjM,KAAK6nB,cAAcksB,aAAe,GAC7D/zC,KAAK6nB,cAAc5b,IACnBjM,KAAK+J,eAAe6qC,OAAO50C,KAAKmjD,kBAAkB,KAE9CnjD,KAAK6nB,cAAc5b,GAAKjM,KAAK+J,eAAetJ,OAC9CT,KAAK6nB,cAAc5b,EAAIjM,KAAK+J,eAAetJ,KAAO,GAIpDT,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAAIoe,WAAY,GAG7Fu4B,EAAY5iD,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,E,MAGvF,GADAjM,KAAK6nB,cAAc7b,EAAI4B,EAAO,EACd,IAAZy0C,EAGF,SAuBN,GAjBII,IAEFG,EAAUQ,YAAYpjD,KAAK6nB,cAAc7b,EAAGq2C,EAASriD,KAAK6nB,cAAcw7B,YAAYV,GAAUA,GAIzD,IAAjCC,EAAU7oC,SAASnM,EAAO,IAC5Bg1C,EAAUE,qBAAqBl1C,EAAO,EAAG,EAAA01C,eAAgB,EAAAC,gBAAiBZ,EAAQ55C,GAAI45C,EAAQ75C,GAAI65C,EAAQpxC,WAK9GqxC,EAAUE,qBAAqB9iD,KAAK6nB,cAAc7b,IAAK6uC,EAAMwH,EAASM,EAAQ55C,GAAI45C,EAAQ75C,GAAI65C,EAAQpxC,UAKlG8wC,EAAU,EACZ,OAASA,GAEPO,EAAUE,qBAAqB9iD,KAAK6nB,cAAc7b,IAAK,EAAG,EAAG22C,EAAQ55C,GAAI45C,EAAQ75C,GAAI65C,EAAQpxC,S,MApE1FqxC,EAAU7oC,SAAS/Z,KAAK6nB,cAAc7b,EAAI,GAM7C42C,EAAUY,mBAAmBxjD,KAAK6nB,cAAc7b,EAAI,EAAG6uC,GAFvD+H,EAAUY,mBAAmBxjD,KAAK6nB,cAAc7b,EAAI,EAAG6uC,E,CAwEzD54C,EAAMD,EAAQ,IAChB4gD,EAAUvxC,SAASrR,KAAK6nB,cAAc7b,EAAI,EAAGhM,KAAKq4B,WAChB,IAA9Br4B,KAAKq4B,UAAUte,YAAoB/Z,KAAKq4B,UAAU4E,UAAY,MAChEj9B,KAAKw4C,QAAQiL,mBAAqB,EACzBzjD,KAAKq4B,UAAUsI,aACxB3gC,KAAKw4C,QAAQiL,mBAAqBzjD,KAAKq4B,UAAUiC,WAAWlW,WAAW,GAEvEpkB,KAAKw4C,QAAQiL,mBAAqBzjD,KAAKq4B,UAAUoI,SAKjDzgC,KAAK6nB,cAAc7b,EAAI4B,GAAQ3L,EAAMD,EAAQ,GAAkD,IAA7C4gD,EAAU7oC,SAAS/Z,KAAK6nB,cAAc7b,KAAa42C,EAAUxxC,WAAWpR,KAAK6nB,cAAc7b,IAC/I42C,EAAUE,qBAAqB9iD,KAAK6nB,cAAc7b,EAAG,EAAG,EAAG22C,EAAQ55C,GAAI45C,EAAQ75C,GAAI65C,EAAQpxC,UAG7FvR,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,EACrD,CAKO,kBAAAopC,CAAmBpU,EAAyBvwB,GACjD,MAAiB,MAAbuwB,EAAG6U,OAAkB7U,EAAGgb,QAAWhb,EAAGma,cASnCp7C,KAAKw4C,QAAQnD,mBAAmBpU,EAAIvwB,GAPlC1Q,KAAKw4C,QAAQnD,mBAAmBpU,GAAIsZ,IACpC7D,EAAoB6D,EAAOA,OAAO,GAAIv6C,KAAKwQ,gBAAgBrJ,WAAW22C,gBAGpEptC,EAAS6pC,IAItB,CAKO,kBAAAnF,CAAmBnU,EAAyBvwB,GACjD,OAAO1Q,KAAKw4C,QAAQpD,mBAAmBnU,EAAI,IAAI,EAAAggB,WAAWvwC,GAC5D,CAKO,kBAAAykC,CAAmBlU,EAAyBvwB,GACjD,OAAO1Q,KAAKw4C,QAAQrD,mBAAmBlU,EAAIvwB,EAC7C,CAKO,kBAAA4kC,CAAmB39B,EAAejH,GACvC,OAAO1Q,KAAKw4C,QAAQlD,mBAAmB39B,EAAO,IAAI,EAAA+nC,WAAWhvC,GAC/D,CAUO,IAAA4tC,GAEL,OADAt+C,KAAKq5C,eAAe3pC,QACb,CACT,CAYO,QAAA8uC,GA0BL,OAzBAx+C,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,GAC/CjM,KAAKwQ,gBAAgBrJ,WAAWu8C,aAClC1jD,KAAK6nB,cAAc7b,EAAI,GAEzBhM,KAAK6nB,cAAc5b,IACfjM,KAAK6nB,cAAc5b,IAAMjM,KAAK6nB,cAAcksB,aAAe,GAC7D/zC,KAAK6nB,cAAc5b,IACnBjM,KAAK+J,eAAe6qC,OAAO50C,KAAKmjD,mBACvBnjD,KAAK6nB,cAAc5b,GAAKjM,KAAK+J,eAAetJ,KACrDT,KAAK6nB,cAAc5b,EAAIjM,KAAK+J,eAAetJ,KAAO,EAOlDT,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAAIoe,WAAY,EAGzFrqB,KAAK6nB,cAAc7b,GAAKhM,KAAK+J,eAAe6D,MAC9C5N,KAAK6nB,cAAc7b,IAErBhM,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,GAEnDjM,KAAKsyC,YAAY5iC,QACV,CACT,CAQO,cAAAivC,GAEL,OADA3+C,KAAK6nB,cAAc7b,EAAI,GAChB,CACT,CAaO,SAAA6yC,G,MAEL,IAAK7+C,KAAKkwB,aAAahpB,gBAAgBy8C,kBAKrC,OAJA3jD,KAAK4jD,kBACD5jD,KAAK6nB,cAAc7b,EAAI,GACzBhM,KAAK6nB,cAAc7b,KAEd,EAQT,GAFAhM,KAAK4jD,gBAAgB5jD,KAAK+J,eAAe6D,MAErC5N,KAAK6nB,cAAc7b,EAAI,EACzBhM,KAAK6nB,cAAc7b,SAUnB,GAA6B,IAAzBhM,KAAK6nB,cAAc7b,GAClBhM,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,WAC1C5oB,KAAK6nB,cAAc5b,GAAKjM,KAAK6nB,cAAcksB,eACkC,QAA7E,EAAA/zC,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,UAAE,eAAEoe,WAAW,CAC7FrqB,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAAIoe,WAAY,EAC3FrqB,KAAK6nB,cAAc5b,IACnBjM,KAAK6nB,cAAc7b,EAAIhM,KAAK+J,eAAe6D,KAAO,EAMlD,MAAM+C,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GACpF0E,EAAKm3B,SAAS9nC,KAAK6nB,cAAc7b,KAAO2E,EAAKS,WAAWpR,KAAK6nB,cAAc7b,IAC7EhM,KAAK6nB,cAAc7b,G,CAQzB,OADAhM,KAAK4jD,mBACE,CACT,CAQO,GAAA7E,GACL,GAAI/+C,KAAK6nB,cAAc7b,GAAKhM,KAAK+J,eAAe6D,KAC9C,OAAO,EAET,MAAMi2C,EAAY7jD,KAAK6nB,cAAc7b,EAKrC,OAJAhM,KAAK6nB,cAAc7b,EAAIhM,KAAK6nB,cAAci8B,WACtC9jD,KAAKwQ,gBAAgBrJ,WAAW+X,kBAClClf,KAAK45C,WAAWlqC,KAAK1P,KAAK6nB,cAAc7b,EAAI63C,IAEvC,CACT,CASO,QAAA5E,GAEL,OADAj/C,KAAKqzC,gBAAgBqN,UAAU,IACxB,CACT,CASO,OAAAvB,GAEL,OADAn/C,KAAKqzC,gBAAgBqN,UAAU,IACxB,CACT,CAKQ,eAAAkD,CAAgBG,EAAiB/jD,KAAK+J,eAAe6D,KAAO,GAClE5N,KAAK6nB,cAAc7b,EAAIyH,KAAKC,IAAIqwC,EAAQtwC,KAAKG,IAAI,EAAG5T,KAAK6nB,cAAc7b,IACvEhM,KAAK6nB,cAAc5b,EAAIjM,KAAKkwB,aAAahpB,gBAAgBugB,OACrDhU,KAAKC,IAAI1T,KAAK6nB,cAAcksB,aAActgC,KAAKG,IAAI5T,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAc5b,IACpGwH,KAAKC,IAAI1T,KAAK+J,eAAetJ,KAAO,EAAGgT,KAAKG,IAAI,EAAG5T,KAAK6nB,cAAc5b,IAC1EjM,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,EACrD,CAKQ,UAAA+3C,CAAWh4C,EAAWC,GAC5BjM,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,GAC/CjM,KAAKkwB,aAAahpB,gBAAgBugB,QACpCznB,KAAK6nB,cAAc7b,EAAIA,EACvBhM,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UAAY3c,IAEtDjM,KAAK6nB,cAAc7b,EAAIA,EACvBhM,KAAK6nB,cAAc5b,EAAIA,GAEzBjM,KAAK4jD,kBACL5jD,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,EACrD,CAKQ,WAAAg4C,CAAYj4C,EAAWC,GAG7BjM,KAAK4jD,kBACL5jD,KAAKgkD,WAAWhkD,KAAK6nB,cAAc7b,EAAIA,EAAGhM,KAAK6nB,cAAc5b,EAAIA,EACnE,CASO,QAAAqvC,CAASf,GAEd,MAAM2J,EAAYlkD,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UAM5D,OALIs7B,GAAa,EACflkD,KAAKikD,YAAY,GAAIxwC,KAAKC,IAAIwwC,EAAW3J,EAAOA,OAAO,IAAM,IAE7Dv6C,KAAKikD,YAAY,IAAK1J,EAAOA,OAAO,IAAM,KAErC,CACT,CASO,UAAAiB,CAAWjB,GAEhB,MAAM4J,EAAenkD,KAAK6nB,cAAcksB,aAAe/zC,KAAK6nB,cAAc5b,EAM1E,OALIk4C,GAAgB,EAClBnkD,KAAKikD,YAAY,EAAGxwC,KAAKC,IAAIywC,EAAc5J,EAAOA,OAAO,IAAM,IAE/Dv6C,KAAKikD,YAAY,EAAG1J,EAAOA,OAAO,IAAM,IAEnC,CACT,CAQO,aAAAkB,CAAclB,GAEnB,OADAv6C,KAAKikD,YAAY1J,EAAOA,OAAO,IAAM,EAAG,IACjC,CACT,CAQO,cAAAmB,CAAenB,GAEpB,OADAv6C,KAAKikD,cAAc1J,EAAOA,OAAO,IAAM,GAAI,IACpC,CACT,CAUO,cAAAoB,CAAepB,GAGpB,OAFAv6C,KAAKw7C,WAAWjB,GAChBv6C,KAAK6nB,cAAc7b,EAAI,GAChB,CACT,CAUO,mBAAA4vC,CAAoBrB,GAGzB,OAFAv6C,KAAKs7C,SAASf,GACdv6C,KAAK6nB,cAAc7b,EAAI,GAChB,CACT,CAQO,kBAAA6vC,CAAmBtB,GAExB,OADAv6C,KAAKgkD,YAAYzJ,EAAOA,OAAO,IAAM,GAAK,EAAGv6C,KAAK6nB,cAAc5b,IACzD,CACT,CAWO,cAAA6vC,CAAevB,GAOpB,OANAv6C,KAAKgkD,WAEFzJ,EAAOt5C,QAAU,GAAMs5C,EAAOA,OAAO,IAAM,GAAK,EAAI,GAEpDA,EAAOA,OAAO,IAAM,GAAK,IAErB,CACT,CASO,eAAAmC,CAAgBnC,GAErB,OADAv6C,KAAKgkD,YAAYzJ,EAAOA,OAAO,IAAM,GAAK,EAAGv6C,KAAK6nB,cAAc5b,IACzD,CACT,CAQO,iBAAA0wC,CAAkBpC,GAEvB,OADAv6C,KAAKikD,YAAY1J,EAAOA,OAAO,IAAM,EAAG,IACjC,CACT,CAQO,eAAAwC,CAAgBxC,GAErB,OADAv6C,KAAKgkD,WAAWhkD,KAAK6nB,cAAc7b,GAAIuuC,EAAOA,OAAO,IAAM,GAAK,IACzD,CACT,CASO,iBAAAyC,CAAkBzC,GAEvB,OADAv6C,KAAKikD,YAAY,EAAG1J,EAAOA,OAAO,IAAM,IACjC,CACT,CAUO,UAAA0C,CAAW1C,GAEhB,OADAv6C,KAAK87C,eAAevB,IACb,CACT,CAaO,QAAA2C,CAAS3C,GACd,MAAM6J,EAAQ7J,EAAOA,OAAO,GAM5B,OALc,IAAV6J,SACKpkD,KAAK6nB,cAAcw8B,KAAKrkD,KAAK6nB,cAAc7b,GAC/B,IAAVo4C,IACTpkD,KAAK6nB,cAAcw8B,KAAO,CAAC,IAEtB,CACT,CAQO,gBAAAtI,CAAiBxB,GACtB,GAAIv6C,KAAK6nB,cAAc7b,GAAKhM,KAAK+J,eAAe6D,KAC9C,OAAO,EAET,IAAIw2C,EAAQ7J,EAAOA,OAAO,IAAM,EAChC,KAAO6J,KACLpkD,KAAK6nB,cAAc7b,EAAIhM,KAAK6nB,cAAci8B,WAE5C,OAAO,CACT,CAOO,iBAAArH,CAAkBlC,GACvB,GAAIv6C,KAAK6nB,cAAc7b,GAAKhM,KAAK+J,eAAe6D,KAC9C,OAAO,EAET,IAAIw2C,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,KAAO6J,KACLpkD,KAAK6nB,cAAc7b,EAAIhM,KAAK6nB,cAAcy8B,WAE5C,OAAO,CACT,CAOO,eAAApG,CAAgB3D,GACrB,MAAM8G,EAAI9G,EAAOA,OAAO,GAGxB,OAFU,IAAN8G,IAASrhD,KAAKq4C,aAAavvC,IAAM,WAC3B,IAANu4C,GAAiB,IAANA,IAASrhD,KAAKq4C,aAAavvC,KAAM,YACzC,CACT,CAYQ,kBAAAy7C,CAAmBt4C,EAAWjK,EAAeC,EAAauiD,GAAqB,EAAOC,GAA0B,GACtH,MAAM9zC,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ1N,GACrE0E,EAAK+zC,aACH1iD,EACAC,EACAjC,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBACpCnjD,KAAKmjD,iBACLsB,GAEED,IACF7zC,EAAK0Z,WAAY,EAErB,CAOQ,gBAAAs6B,CAAiB14C,EAAWw4C,GAA0B,GAC5D,MAAM9zC,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ1N,GACjE0E,IACFA,EAAK+tB,KAAK1+B,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBAAmBsB,GACjEzkD,KAAK+J,eAAe5F,OAAOygD,aAAa5kD,KAAK6nB,cAAclO,MAAQ1N,GACnE0E,EAAK0Z,WAAY,EAErB,CA0BO,cAAA2xB,CAAezB,EAAiBkK,GAA0B,GAE/D,IAAIz2C,EACJ,OAFAhO,KAAK4jD,gBAAgB5jD,KAAK+J,eAAe6D,MAEjC2sC,EAAOA,OAAO,IACpB,KAAK,EAIH,IAHAvsC,EAAIhO,KAAK6nB,cAAc5b,EACvBjM,KAAKo6C,iBAAiByI,UAAU70C,GAChChO,KAAKukD,mBAAmBv2C,IAAKhO,KAAK6nB,cAAc7b,EAAGhM,KAAK+J,eAAe6D,KAA+B,IAAzB5N,KAAK6nB,cAAc7b,EAASy4C,GAClGz2C,EAAIhO,KAAK+J,eAAetJ,KAAMuN,IACnChO,KAAK2kD,iBAAiB32C,EAAGy2C,GAE3BzkD,KAAKo6C,iBAAiByI,UAAU70C,GAChC,MACF,KAAK,EASH,IARAA,EAAIhO,KAAK6nB,cAAc5b,EACvBjM,KAAKo6C,iBAAiByI,UAAU70C,GAEhChO,KAAKukD,mBAAmBv2C,EAAG,EAAGhO,KAAK6nB,cAAc7b,EAAI,GAAG,EAAMy4C,GAC1DzkD,KAAK6nB,cAAc7b,EAAI,GAAKhM,KAAK+J,eAAe6D,OAElD5N,KAAK6nB,cAAcxjB,MAAM6E,IAAI8E,EAAI,GAAIqc,WAAY,GAE5Crc,KACLhO,KAAK2kD,iBAAiB32C,EAAGy2C,GAE3BzkD,KAAKo6C,iBAAiByI,UAAU,GAChC,MACF,KAAK,EAGH,IAFA70C,EAAIhO,KAAK+J,eAAetJ,KACxBT,KAAKo6C,iBAAiByI,UAAU70C,EAAI,GAC7BA,KACLhO,KAAK2kD,iBAAiB32C,EAAGy2C,GAE3BzkD,KAAKo6C,iBAAiByI,UAAU,GAChC,MACF,KAAK,EAEH,MAAMgC,EAAiB7kD,KAAK6nB,cAAcxjB,MAAMpD,OAASjB,KAAK+J,eAAetJ,KACzEokD,EAAiB,IACnB7kD,KAAK6nB,cAAcxjB,MAAMsqC,UAAUkW,GACnC7kD,KAAK6nB,cAAclO,MAAQlG,KAAKG,IAAI5T,KAAK6nB,cAAclO,MAAQkrC,EAAgB,GAC/E7kD,KAAK6nB,cAAcpjB,MAAQgP,KAAKG,IAAI5T,KAAK6nB,cAAcpjB,MAAQogD,EAAgB,GAE/E7kD,KAAK2e,UAAUjP,KAAK,IAI1B,OAAO,CACT,CAwBO,WAAAwsC,CAAY3B,EAAiBkK,GAA0B,GAE5D,OADAzkD,KAAK4jD,gBAAgB5jD,KAAK+J,eAAe6D,MACjC2sC,EAAOA,OAAO,IACpB,KAAK,EACHv6C,KAAKukD,mBAAmBvkD,KAAK6nB,cAAc5b,EAAGjM,KAAK6nB,cAAc7b,EAAGhM,KAAK+J,eAAe6D,KAA+B,IAAzB5N,KAAK6nB,cAAc7b,EAASy4C,GAC1H,MACF,KAAK,EACHzkD,KAAKukD,mBAAmBvkD,KAAK6nB,cAAc5b,EAAG,EAAGjM,KAAK6nB,cAAc7b,EAAI,GAAG,EAAOy4C,GAClF,MACF,KAAK,EACHzkD,KAAKukD,mBAAmBvkD,KAAK6nB,cAAc5b,EAAG,EAAGjM,KAAK+J,eAAe6D,MAAM,EAAM62C,GAIrF,OADAzkD,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,IAC5C,CACT,CAWO,WAAAkwC,CAAY5B,GACjBv6C,KAAK4jD,kBACL,IAAIQ,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,GAAIv6C,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAcksB,cAAgB/zC,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UACtG,OAAO,EAGT,MAAMvI,EAAcrgB,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,EAE5D64C,EAAyB9kD,KAAK+J,eAAetJ,KAAO,EAAIT,KAAK6nB,cAAcksB,aAC3EgR,EAAuB/kD,KAAK+J,eAAetJ,KAAO,EAAIT,KAAK6nB,cAAclO,MAAQmrC,EAAyB,EAChH,KAAOV,KAGLpkD,KAAK6nB,cAAcxjB,MAAM8G,OAAO45C,EAAuB,EAAG,GAC1D/kD,KAAK6nB,cAAcxjB,MAAM8G,OAAOkV,EAAK,EAAGrgB,KAAK6nB,cAAcxC,aAAarlB,KAAKmjD,mBAK/E,OAFAnjD,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAc5b,EAAGjM,KAAK6nB,cAAcksB,cAC9E/zC,KAAK6nB,cAAc7b,EAAI,GAChB,CACT,CAWO,WAAAowC,CAAY7B,GACjBv6C,KAAK4jD,kBACL,IAAIQ,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,GAAIv6C,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAcksB,cAAgB/zC,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UACtG,OAAO,EAGT,MAAMvI,EAAcrgB,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,EAElE,IAAI+B,EAGJ,IAFAA,EAAIhO,KAAK+J,eAAetJ,KAAO,EAAIT,KAAK6nB,cAAcksB,aACtD/lC,EAAIhO,KAAK+J,eAAetJ,KAAO,EAAIT,KAAK6nB,cAAclO,MAAQ3L,EACvDo2C,KAGLpkD,KAAK6nB,cAAcxjB,MAAM8G,OAAOkV,EAAK,GACrCrgB,KAAK6nB,cAAcxjB,MAAM8G,OAAO6C,EAAG,EAAGhO,KAAK6nB,cAAcxC,aAAarlB,KAAKmjD,mBAK7E,OAFAnjD,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAc5b,EAAGjM,KAAK6nB,cAAcksB,cAC9E/zC,KAAK6nB,cAAc7b,EAAI,GAChB,CACT,CAcO,WAAAmvC,CAAYZ,GACjBv6C,KAAK4jD,kBACL,MAAMjzC,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAUxF,OATI0E,IACFA,EAAKyyC,YACHpjD,KAAK6nB,cAAc7b,EACnBuuC,EAAOA,OAAO,IAAM,EACpBv6C,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBACpCnjD,KAAKmjD,kBAEPnjD,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,KAE9C,CACT,CAcO,WAAAowC,CAAY9B,GACjBv6C,KAAK4jD,kBACL,MAAMjzC,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAUxF,OATI0E,IACFA,EAAKq0C,YACHhlD,KAAK6nB,cAAc7b,EACnBuuC,EAAOA,OAAO,IAAM,EACpBv6C,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBACpCnjD,KAAKmjD,kBAEPnjD,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,KAE9C,CACT,CAUO,QAAAqwC,CAAS/B,GACd,IAAI6J,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,KAAO6J,KACLpkD,KAAK6nB,cAAcxjB,MAAM8G,OAAOnL,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAce,UAAW,GACzF5oB,KAAK6nB,cAAcxjB,MAAM8G,OAAOnL,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAcksB,aAAc,EAAG/zC,KAAK6nB,cAAcxC,aAAarlB,KAAKmjD,mBAGtI,OADAnjD,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,eAC/E,CACT,CAOO,UAAAwI,CAAWhC,GAChB,IAAI6J,EAAQ7J,EAAOA,OAAO,IAAM,EAEhC,KAAO6J,KACLpkD,KAAK6nB,cAAcxjB,MAAM8G,OAAOnL,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAcksB,aAAc,GAC5F/zC,KAAK6nB,cAAcxjB,MAAM8G,OAAOnL,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAce,UAAW,EAAG5oB,KAAK6nB,cAAcxC,aAAa,EAAAC,oBAG9H,OADAtlB,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,eAC/E,CACT,CAoBO,UAAAsH,CAAWd,GAChB,GAAIv6C,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAcksB,cAAgB/zC,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UACtG,OAAO,EAET,MAAMw7B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAItuC,EAAIjM,KAAK6nB,cAAce,UAAW3c,GAAKjM,KAAK6nB,cAAcksB,eAAgB9nC,EAAG,CACpF,MAAM0E,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ1N,GACrE0E,EAAKq0C,YAAY,EAAGZ,EAAOpkD,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBAAmBnjD,KAAKmjD,kBACvFxyC,EAAK0Z,WAAY,C,CAGnB,OADArqB,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,eAC/E,CACT,CAqBO,WAAAwH,CAAYhB,GACjB,GAAIv6C,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAcksB,cAAgB/zC,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UACtG,OAAO,EAET,MAAMw7B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAItuC,EAAIjM,KAAK6nB,cAAce,UAAW3c,GAAKjM,KAAK6nB,cAAcksB,eAAgB9nC,EAAG,CACpF,MAAM0E,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ1N,GACrE0E,EAAKyyC,YAAY,EAAGgB,EAAOpkD,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBAAmBnjD,KAAKmjD,kBACvFxyC,EAAK0Z,WAAY,C,CAGnB,OADArqB,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,eAC/E,CACT,CAWO,aAAAiK,CAAczD,GACnB,GAAIv6C,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAcksB,cAAgB/zC,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UACtG,OAAO,EAET,MAAMw7B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAItuC,EAAIjM,KAAK6nB,cAAce,UAAW3c,GAAKjM,KAAK6nB,cAAcksB,eAAgB9nC,EAAG,CACpF,MAAM0E,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ1N,GACrE0E,EAAKyyC,YAAYpjD,KAAK6nB,cAAc7b,EAAGo4C,EAAOpkD,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBAAmBnjD,KAAKmjD,kBAC1GxyC,EAAK0Z,WAAY,C,CAGnB,OADArqB,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,eAC/E,CACT,CAWO,aAAAkK,CAAc1D,GACnB,GAAIv6C,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAcksB,cAAgB/zC,KAAK6nB,cAAc5b,EAAIjM,KAAK6nB,cAAce,UACtG,OAAO,EAET,MAAMw7B,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,IAAK,IAAItuC,EAAIjM,KAAK6nB,cAAce,UAAW3c,GAAKjM,KAAK6nB,cAAcksB,eAAgB9nC,EAAG,CACpF,MAAM0E,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ1N,GACrE0E,EAAKq0C,YAAYhlD,KAAK6nB,cAAc7b,EAAGo4C,EAAOpkD,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBAAmBnjD,KAAKmjD,kBAC1GxyC,EAAK0Z,WAAY,C,CAGnB,OADArqB,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,eAC/E,CACT,CAUO,UAAAyI,CAAWjC,GAChBv6C,KAAK4jD,kBACL,MAAMjzC,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAIlJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,GAUxF,OATI0E,IACFA,EAAK+zC,aACH1kD,KAAK6nB,cAAc7b,EACnBhM,KAAK6nB,cAAc7b,GAAKuuC,EAAOA,OAAO,IAAM,GAC5Cv6C,KAAK6nB,cAAcw7B,YAAYrjD,KAAKmjD,kBACpCnjD,KAAKmjD,kBAEPnjD,KAAKo6C,iBAAiByI,UAAU7iD,KAAK6nB,cAAc5b,KAE9C,CACT,CA6BO,wBAAA2wC,CAAyBrC,GAC9B,IAAKv6C,KAAKw4C,QAAQiL,mBAChB,OAAO,EAGT,MAAMxiD,EAASs5C,EAAOA,OAAO,IAAM,EAC7B34B,EAAO,IAAI+2B,YAAY13C,GAC7B,IAAK,IAAI5B,EAAI,EAAGA,EAAI4B,IAAU5B,EAC5BuiB,EAAKviB,GAAKW,KAAKw4C,QAAQiL,mBAGzB,OADAzjD,KAAKk7C,MAAMt5B,EAAM,EAAGA,EAAK3gB,SAClB,CACT,CA2BO,2BAAA47C,CAA4BtC,GACjC,OAAIA,EAAOA,OAAO,GAAK,IAGnBv6C,KAAKilD,IAAI,UAAYjlD,KAAKilD,IAAI,iBAAmBjlD,KAAKilD,IAAI,UAC5DjlD,KAAKkwB,aAAa7oB,iBAAiB,EAAA4Q,GAAGC,IAAM,UACnClY,KAAKilD,IAAI,UAClBjlD,KAAKkwB,aAAa7oB,iBAAiB,EAAA4Q,GAAGC,IAAM,UALrC,CAQX,CA0BO,6BAAA4kC,CAA8BvC,GACnC,OAAIA,EAAOA,OAAO,GAAK,IAMnBv6C,KAAKilD,IAAI,SACXjlD,KAAKkwB,aAAa7oB,iBAAiB,EAAA4Q,GAAGC,IAAM,cACnClY,KAAKilD,IAAI,gBAClBjlD,KAAKkwB,aAAa7oB,iBAAiB,EAAA4Q,GAAGC,IAAM,cACnClY,KAAKilD,IAAI,SAGlBjlD,KAAKkwB,aAAa7oB,iBAAiBkzC,EAAOA,OAAO,GAAK,KAC7Cv6C,KAAKilD,IAAI,WAClBjlD,KAAKkwB,aAAa7oB,iBAAiB,EAAA4Q,GAAGC,IAAM,mBAdrC,CAiBX,CAMQ,GAAA+sC,CAAIC,GACV,OAAyE,KAAjEllD,KAAKwQ,gBAAgBrJ,WAAWg+C,SAAW,IAAIj6C,QAAQg6C,EACjE,CAmBO,OAAA/H,CAAQ5C,GACb,IAAK,IAAIl7C,EAAI,EAAGA,EAAIk7C,EAAOt5C,OAAQ5B,IACjC,OAAQk7C,EAAOA,OAAOl7C,IACpB,KAAK,EACHW,KAAKkwB,aAAawyB,MAAMD,YAAa,EACrC,MACF,KAAK,GACHziD,KAAKwQ,gBAAgB/G,QAAQi6C,YAAa,EAIhD,OAAO,CACT,CAoHO,cAAAtG,CAAe7C,GACpB,IAAK,IAAIl7C,EAAI,EAAGA,EAAIk7C,EAAOt5C,OAAQ5B,IACjC,OAAQk7C,EAAOA,OAAOl7C,IACpB,KAAK,EACHW,KAAKkwB,aAAahpB,gBAAgBya,uBAAwB,EAC1D,MACF,KAAK,EACH3hB,KAAKqzC,gBAAgB+R,YAAY,EAAG,EAAAC,iBACpCrlD,KAAKqzC,gBAAgB+R,YAAY,EAAG,EAAAC,iBACpCrlD,KAAKqzC,gBAAgB+R,YAAY,EAAG,EAAAC,iBACpCrlD,KAAKqzC,gBAAgB+R,YAAY,EAAG,EAAAC,iBAEpC,MACF,KAAK,EAMCrlD,KAAKwQ,gBAAgBrJ,WAAW22C,cAAcjH,cAChD72C,KAAK+J,eAAemT,OAAO,IAAKld,KAAK+J,eAAetJ,MACpDT,KAAKu5C,gBAAgB7pC,QAEvB,MACF,KAAK,EACH1P,KAAKkwB,aAAahpB,gBAAgBugB,QAAS,EAC3CznB,KAAKgkD,WAAW,EAAG,GACnB,MACF,KAAK,EACHhkD,KAAKkwB,aAAahpB,gBAAgBs7C,YAAa,EAC/C,MACF,KAAK,GACHxiD,KAAKwQ,gBAAgB/G,QAAQkuB,aAAc,EAC3C,MACF,KAAK,GACH33B,KAAKkwB,aAAahpB,gBAAgBy8C,mBAAoB,EACtD,MACF,KAAK,GACH3jD,KAAK0b,YAAYC,MAAM,6CACvB3b,KAAKkwB,aAAahpB,gBAAgBo+C,mBAAoB,EACtDtlD,KAAKy5C,wBAAwB/pC,OAC7B,MACF,KAAK,EAEH1P,KAAKs4C,kBAAkB/2B,eAAiB,MACxC,MACF,KAAK,IAEHvhB,KAAKs4C,kBAAkB/2B,eAAiB,QACxC,MACF,KAAK,KACHvhB,KAAKs4C,kBAAkB/2B,eAAiB,OACxC,MACF,KAAK,KAGHvhB,KAAKs4C,kBAAkB/2B,eAAiB,MACxC,MACF,KAAK,KAGHvhB,KAAKkwB,aAAahpB,gBAAgB+R,WAAY,EAC9CjZ,KAAKw5C,oBAAoB9pC,OACzB,MACF,KAAK,KACH1P,KAAK0b,YAAYC,MAAM,yCACvB,MACF,KAAK,KACH3b,KAAKs4C,kBAAkBiN,eAAiB,MACxC,MACF,KAAK,KACHvlD,KAAK0b,YAAYC,MAAM,yCACvB,MACF,KAAK,KACH3b,KAAKs4C,kBAAkBiN,eAAiB,aACxC,MACF,KAAK,GACHvlD,KAAKkwB,aAAa4K,gBAAiB,EACnC,MACF,KAAK,KACH96B,KAAK69C,aACL,MACF,KAAK,KACH79C,KAAK69C,aAEP,KAAK,GACL,KAAK,KACH79C,KAAK+J,eAAe4O,QAAQ6sC,kBAAkBxlD,KAAKmjD,kBACnDnjD,KAAKkwB,aAAa/N,qBAAsB,EACxCniB,KAAKs5C,sBAAsB5pC,KAAK,EAAG1P,KAAK+J,eAAetJ,KAAO,GAC9DT,KAAKy5C,wBAAwB/pC,OAC7B,MACF,KAAK,KACH1P,KAAKkwB,aAAahpB,gBAAgBL,oBAAqB,EAI7D,OAAO,CACT,CAuBO,SAAAw2C,CAAU9C,GACf,IAAK,IAAIl7C,EAAI,EAAGA,EAAIk7C,EAAOt5C,OAAQ5B,IACjC,OAAQk7C,EAAOA,OAAOl7C,IACpB,KAAK,EACHW,KAAKkwB,aAAawyB,MAAMD,YAAa,EACrC,MACF,KAAK,GACHziD,KAAKwQ,gBAAgB/G,QAAQi6C,YAAa,EAIhD,OAAO,CACT,CAgHO,gBAAApG,CAAiB/C,GACtB,IAAK,IAAIl7C,EAAI,EAAGA,EAAIk7C,EAAOt5C,OAAQ5B,IACjC,OAAQk7C,EAAOA,OAAOl7C,IACpB,KAAK,EACHW,KAAKkwB,aAAahpB,gBAAgBya,uBAAwB,EAC1D,MACF,KAAK,EAMC3hB,KAAKwQ,gBAAgBrJ,WAAW22C,cAAcjH,cAChD72C,KAAK+J,eAAemT,OAAO,GAAIld,KAAK+J,eAAetJ,MACnDT,KAAKu5C,gBAAgB7pC,QAEvB,MACF,KAAK,EACH1P,KAAKkwB,aAAahpB,gBAAgBugB,QAAS,EAC3CznB,KAAKgkD,WAAW,EAAG,GACnB,MACF,KAAK,EACHhkD,KAAKkwB,aAAahpB,gBAAgBs7C,YAAa,EAC/C,MACF,KAAK,GACHxiD,KAAKwQ,gBAAgB/G,QAAQkuB,aAAc,EAC3C,MACF,KAAK,GACH33B,KAAKkwB,aAAahpB,gBAAgBy8C,mBAAoB,EACtD,MACF,KAAK,GACH3jD,KAAK0b,YAAYC,MAAM,oCACvB3b,KAAKkwB,aAAahpB,gBAAgBo+C,mBAAoB,EACtDtlD,KAAKy5C,wBAAwB/pC,OAC7B,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACH1P,KAAKs4C,kBAAkB/2B,eAAiB,OACxC,MACF,KAAK,KACHvhB,KAAKkwB,aAAahpB,gBAAgB+R,WAAY,EAC9C,MACF,KAAK,KACHjZ,KAAK0b,YAAYC,MAAM,yCACvB,MACF,KAAK,KAML,KAAK,KACH3b,KAAKs4C,kBAAkBiN,eAAiB,UACxC,MALF,KAAK,KACHvlD,KAAK0b,YAAYC,MAAM,yCACvB,MAIF,KAAK,GACH3b,KAAKkwB,aAAa4K,gBAAiB,EACnC,MACF,KAAK,KACH96B,KAAK+9C,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEH/9C,KAAK+J,eAAe4O,QAAQ8sC,uBACH,OAArBlL,EAAOA,OAAOl7C,IAChBW,KAAK+9C,gBAEP/9C,KAAKkwB,aAAa/N,qBAAsB,EACxCniB,KAAKs5C,sBAAsB5pC,KAAK,EAAG1P,KAAK+J,eAAetJ,KAAO,GAC9DT,KAAKy5C,wBAAwB/pC,OAC7B,MACF,KAAK,KACH1P,KAAKkwB,aAAahpB,gBAAgBL,oBAAqB,EAI7D,OAAO,CACT,CAmCO,WAAAs3C,CAAY5D,EAAiBviC,GAWlC,MAAM0tC,EAAK1lD,KAAKkwB,aAAahpB,iBACrBqa,eAAgBokC,EAAeJ,eAAgBK,GAAkB5lD,KAAKs4C,kBACxEuN,EAAK7lD,KAAKkwB,cACV,QAAEvX,EAAO,KAAE/K,GAAS5N,KAAK+J,gBACzB,OAAE6O,EAAM,IAAE4H,GAAQ7H,EAClBi+B,EAAO52C,KAAKwQ,gBAAgBrJ,WAM5B2+C,EAAOx+C,GAAsBA,EAAQ,EAAQ,EAE7C+5C,EAAI9G,EAAOA,OAAO,GAExB,OARWwL,EASa1E,EATFnyC,EAQlB8I,EACQ,IAANqpC,EAAqB,EACf,IAANA,EAAqByE,EAAID,EAAGnD,MAAMD,YAC5B,KAANpB,EAAsB,EAChB,KAANA,EAAsByE,EAAIlP,EAAK8M,YACvB,EAGJ,IAANrC,EAAqByE,EAAIJ,EAAG/jC,uBACtB,IAAN0/B,EAAqBzK,EAAKkH,cAAcjH,YAAwB,KAATjpC,EAAc,EAAmB,MAATA,EAAe,EAAQ,EAAoB,EACpH,IAANyzC,EAAqByE,EAAIJ,EAAGj+B,QACtB,IAAN45B,EAAqByE,EAAIJ,EAAGlD,YACtB,IAANnB,EAAqB,EACf,IAANA,EAAqByE,EAAsB,QAAlBH,GACnB,KAANtE,EAAsByE,EAAIlP,EAAKjf,aACzB,KAAN0pB,EAAsByE,GAAKD,EAAG/qB,gBACxB,KAANumB,EAAsByE,EAAIJ,EAAG/B,mBACvB,KAANtC,EAAsByE,EAAIJ,EAAGJ,mBACvB,KAANjE,EAAsB,EAChB,MAANA,EAAwByE,EAAsB,UAAlBH,GACtB,OAANtE,EAAwByE,EAAsB,SAAlBH,GACtB,OAANtE,EAAwByE,EAAsB,QAAlBH,GACtB,OAANtE,EAAwByE,EAAIJ,EAAGzsC,WACzB,OAANooC,EAAwB,EAClB,OAANA,EAAwByE,EAAsB,QAAlBF,GACtB,OAANvE,EAAwB,EAClB,OAANA,EAAwByE,EAAsB,eAAlBF,GACtB,OAANvE,EAAwB,EAClB,KAANA,GAAkB,OAANA,GAAoB,OAANA,EAAwByE,EAAIltC,IAAW4H,GAC3D,OAAN6gC,EAAwByE,EAAIJ,EAAG7+C,oBACvB,EArCVg/C,EAAGx+C,iBAAiB,GAAG,EAAA4Q,GAAGC,OAAOF,EAAO,GAAK,MAAM+tC,KAAK72C,QACjD,EAFC,IAAC62C,EAAW72C,CAuCxB,CAKQ,gBAAA82C,CAAiBnuC,EAAeouC,EAAcC,EAAYC,EAAYC,GAS5E,OARa,IAATH,GACFpuC,GAAS,SACTA,IAAS,SACTA,GAAS,EAAAyjB,cAAc+qB,aAAa,CAACH,EAAIC,EAAIC,KAC3B,IAATH,IACTpuC,IAAS,SACTA,GAAS,SAA2B,IAALquC,GAE1BruC,CACT,CAMQ,aAAAyuC,CAAc/L,EAAiB7yC,EAAa6+C,GAKlD,MAAMC,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG9B,IAAIC,EAAS,EAGTC,EAAU,EAEd,EAAG,CAED,GADAF,EAAKE,EAAUD,GAAUlM,EAAOA,OAAO7yC,EAAMg/C,GACzCnM,EAAOoM,aAAaj/C,EAAMg/C,GAAU,CACtC,MAAME,EAAYrM,EAAOsM,aAAan/C,EAAMg/C,GAC5C,IAAIrnD,EAAI,EACR,GACkB,IAAZmnD,EAAK,KACPC,EAAS,GAEXD,EAAKE,EAAUrnD,EAAI,EAAIonD,GAAUG,EAAUvnD,WAClCA,EAAIunD,EAAU3lD,QAAU5B,EAAIqnD,EAAU,EAAID,EAASD,EAAKvlD,QACnE,K,CAGF,GAAiB,IAAZulD,EAAK,IAAYE,EAAUD,GAAU,GACxB,IAAZD,EAAK,IAAYE,EAAUD,GAAU,EACzC,MAGED,EAAK,KACPC,EAAS,E,SAEFC,EAAUh/C,EAAM6yC,EAAOt5C,QAAUylD,EAAUD,EAASD,EAAKvlD,QAGpE,IAAK,IAAI5B,EAAI,EAAGA,EAAImnD,EAAKvlD,SAAU5B,GAChB,IAAbmnD,EAAKnnD,KACPmnD,EAAKnnD,GAAK,GAKd,OAAQmnD,EAAK,IACX,KAAK,GACHD,EAAKx9C,GAAK/I,KAAKgmD,iBAAiBO,EAAKx9C,GAAIy9C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKz9C,GAAK9I,KAAKgmD,iBAAiBO,EAAKz9C,GAAI09C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKh1C,SAAWg1C,EAAKh1C,SAASu9B,QAC9ByX,EAAKh1C,SAASu1C,eAAiB9mD,KAAKgmD,iBAAiBO,EAAKh1C,SAASu1C,eAAgBN,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvH,OAAOE,CACT,CAWQ,iBAAAK,CAAkB1gD,EAAekgD,GAGvCA,EAAKh1C,SAAWg1C,EAAKh1C,SAASu9B,WAGxBzoC,GAASA,EAAQ,KACrBA,EAAQ,GAEVkgD,EAAKh1C,SAAS2pB,eAAiB70B,EAC/BkgD,EAAKx9C,IAAM,UAGG,IAAV1C,IACFkgD,EAAKx9C,KAAM,WAIbw9C,EAAKS,gBACP,CAEQ,YAAAC,CAAaV,GACnBA,EAAKx9C,GAAK,EAAAuc,kBAAkBvc,GAC5Bw9C,EAAKz9C,GAAK,EAAAwc,kBAAkBxc,GAC5By9C,EAAKh1C,SAAWg1C,EAAKh1C,SAASu9B,QAG9ByX,EAAKh1C,SAAS2pB,eAAiB,EAC/BqrB,EAAKh1C,SAASu1C,iBAAkB,SAChCP,EAAKS,gBACP,CAuFO,cAAAzJ,CAAehD,GAEpB,GAAsB,IAAlBA,EAAOt5C,QAAqC,IAArBs5C,EAAOA,OAAO,GAEvC,OADAv6C,KAAKinD,aAAajnD,KAAKq4C,eAChB,EAGT,MAAM6O,EAAI3M,EAAOt5C,OACjB,IAAIogD,EACJ,MAAMkF,EAAOvmD,KAAKq4C,aAElB,IAAK,IAAIh5C,EAAI,EAAGA,EAAI6nD,EAAG7nD,IACrBgiD,EAAI9G,EAAOA,OAAOl7C,GACdgiD,GAAK,IAAMA,GAAK,IAElBkF,EAAKx9C,KAAM,SACXw9C,EAAKx9C,IAAM,SAAqBs4C,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBkF,EAAKz9C,KAAM,SACXy9C,EAAKz9C,IAAM,SAAqBu4C,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBkF,EAAKx9C,KAAM,SACXw9C,EAAKx9C,IAAM,SAAqBs4C,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1BkF,EAAKz9C,KAAM,SACXy9C,EAAKz9C,IAAM,SAAqBu4C,EAAI,KACrB,IAANA,EAETrhD,KAAKinD,aAAaV,GACH,IAANlF,EAETkF,EAAKx9C,IAAM,UACI,IAANs4C,EAETkF,EAAKz9C,IAAM,SACI,IAANu4C,GAETkF,EAAKx9C,IAAM,UACX/I,KAAK+mD,kBAAkBxM,EAAOoM,aAAatnD,GAAKk7C,EAAOsM,aAAaxnD,GAAI,GAAK,EAAuBknD,IACrF,IAANlF,EAETkF,EAAKx9C,IAAM,UACI,IAANs4C,EAGTkF,EAAKx9C,IAAM,SACI,IAANs4C,EAETkF,EAAKx9C,IAAM,WACI,IAANs4C,EAETkF,EAAKx9C,IAAM,WACI,IAANs4C,EAETkF,EAAKz9C,IAAM,UACI,KAANu4C,EAETrhD,KAAK+mD,kBAAkB,EAAuBR,GAC/B,KAANlF,GAETkF,EAAKx9C,KAAM,UACXw9C,EAAKz9C,KAAM,WACI,KAANu4C,EAETkF,EAAKz9C,KAAM,SACI,KAANu4C,GAETkF,EAAKx9C,KAAM,UACX/I,KAAK+mD,kBAAkB,EAAqBR,IAC7B,KAANlF,EAETkF,EAAKx9C,KAAM,UACI,KAANs4C,EAETkF,EAAKx9C,KAAM,SACI,KAANs4C,EAETkF,EAAKx9C,KAAM,WACI,KAANs4C,EAETkF,EAAKx9C,IAAM,WACI,KAANs4C,GAETkF,EAAKx9C,KAAM,SACXw9C,EAAKx9C,IAA6B,SAAvB,EAAAuc,kBAAkBvc,IACd,KAANs4C,GAETkF,EAAKz9C,KAAM,SACXy9C,EAAKz9C,IAA6B,SAAvB,EAAAwc,kBAAkBxc,IACd,KAANu4C,GAAkB,KAANA,GAAkB,KAANA,EAEjChiD,GAAKW,KAAKsmD,cAAc/L,EAAQl7C,EAAGknD,GACpB,KAANlF,EAETkF,EAAKz9C,IAAM,WACI,KAANu4C,EAETkF,EAAKz9C,KAAM,WACI,KAANu4C,GACTkF,EAAKh1C,SAAWg1C,EAAKh1C,SAASu9B,QAC9ByX,EAAKh1C,SAASu1C,gBAAkB,EAChCP,EAAKS,kBACU,MAAN3F,GAETkF,EAAKx9C,KAAM,SACXw9C,EAAKx9C,IAA6B,SAAvB,EAAAuc,kBAAkBvc,GAC7Bw9C,EAAKz9C,KAAM,SACXy9C,EAAKz9C,IAA6B,SAAvB,EAAAwc,kBAAkBxc,IAE7B9I,KAAK0b,YAAYC,MAAM,6BAA8B0lC,GAGzD,OAAO,CACT,CA2BO,YAAA7D,CAAajD,GAClB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEHv6C,KAAKkwB,aAAa7oB,iBAAiB,GAAG,EAAA4Q,GAAGC,UACzC,MACF,KAAK,EAEH,MAAMjM,EAAIjM,KAAK6nB,cAAc5b,EAAI,EAC3BD,EAAIhM,KAAK6nB,cAAc7b,EAAI,EACjChM,KAAKkwB,aAAa7oB,iBAAiB,GAAG,EAAA4Q,GAAGC,OAAOjM,KAAKD,MAGzD,OAAO,CACT,CAGO,mBAAAyxC,CAAoBlD,GAGzB,GACO,IADCA,EAAOA,OAAO,GACpB,CAEE,MAAMtuC,EAAIjM,KAAK6nB,cAAc5b,EAAI,EAC3BD,EAAIhM,KAAK6nB,cAAc7b,EAAI,EACjChM,KAAKkwB,aAAa7oB,iBAAiB,GAAG,EAAA4Q,GAAGC,QAAQjM,KAAKD,KACjD,CAkBT,OAAO,CACT,CAsBO,SAAA0xC,CAAUnD,GAkBf,OAjBAv6C,KAAKkwB,aAAa4K,gBAAiB,EACnC96B,KAAKy5C,wBAAwB/pC,OAC7B1P,KAAK6nB,cAAce,UAAY,EAC/B5oB,KAAK6nB,cAAcksB,aAAe/zC,KAAK+J,eAAetJ,KAAO,EAC7DT,KAAKq4C,aAAe,EAAA/yB,kBAAkBwpB,QACtC9uC,KAAKkwB,aAAalZ,QAClBhX,KAAKqzC,gBAAgBr8B,QAGrBhX,KAAK6nB,cAAcs/B,OAAS,EAC5BnnD,KAAK6nB,cAAcu/B,OAASpnD,KAAK6nB,cAAclO,MAC/C3Z,KAAK6nB,cAAcw/B,iBAAiBt+C,GAAK/I,KAAKq4C,aAAatvC,GAC3D/I,KAAK6nB,cAAcw/B,iBAAiBv+C,GAAK9I,KAAKq4C,aAAavvC,GAC3D9I,KAAK6nB,cAAcy/B,aAAetnD,KAAKqzC,gBAAgBiP,QAGvDtiD,KAAKkwB,aAAahpB,gBAAgBugB,QAAS,GACpC,CACT,CAqBO,cAAAk2B,CAAepD,GACpB,MAAM6J,EAAQ7J,EAAOA,OAAO,IAAM,EAClC,OAAQ6J,GACN,KAAK,EACL,KAAK,EACHpkD,KAAKwQ,gBAAgB/G,QAAQmuB,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACH53B,KAAKwQ,gBAAgB/G,QAAQmuB,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACH53B,KAAKwQ,gBAAgB/G,QAAQmuB,YAAc,MAG/C,MAAM2vB,EAAanD,EAAQ,GAAM,EAEjC,OADApkD,KAAKwQ,gBAAgB/G,QAAQkuB,YAAc4vB,GACpC,CACT,CASO,eAAA3J,CAAgBrD,GACrB,MAAMzyC,EAAMyyC,EAAOA,OAAO,IAAM,EAChC,IAAIiN,EAWJ,OATIjN,EAAOt5C,OAAS,IAAMumD,EAASjN,EAAOA,OAAO,IAAMv6C,KAAK+J,eAAetJ,MAAmB,IAAX+mD,KACjFA,EAASxnD,KAAK+J,eAAetJ,MAG3B+mD,EAAS1/C,IACX9H,KAAK6nB,cAAce,UAAY9gB,EAAM,EACrC9H,KAAK6nB,cAAcksB,aAAeyT,EAAS,EAC3CxnD,KAAKgkD,WAAW,EAAG,KAEd,CACT,CAgCO,aAAAlG,CAAcvD,GACnB,IAAK7D,EAAoB6D,EAAOA,OAAO,GAAIv6C,KAAKwQ,gBAAgBrJ,WAAW22C,eACzE,OAAO,EAET,MAAM2J,EAAUlN,EAAOt5C,OAAS,EAAKs5C,EAAOA,OAAO,GAAK,EACxD,OAAQA,EAAOA,OAAO,IACpB,KAAK,GACY,IAAXkN,GACFznD,KAAK05C,+BAA+BhqC,KAAK8V,EAAyBC,qBAEpE,MACF,KAAK,GACHzlB,KAAK05C,+BAA+BhqC,KAAK8V,EAAyBK,sBAClE,MACF,KAAK,GACC7lB,KAAK+J,gBACP/J,KAAKkwB,aAAa7oB,iBAAiB,GAAG,EAAA4Q,GAAGC,SAASlY,KAAK+J,eAAetJ,QAAQT,KAAK+J,eAAe6D,SAEpG,MACF,KAAK,GACY,IAAX65C,GAA2B,IAAXA,IAClBznD,KAAKk5C,kBAAkBj1C,KAAKjE,KAAKg5C,cAC7Bh5C,KAAKk5C,kBAAkBj4C,OA7rFjB,IA8rFRjB,KAAKk5C,kBAAkB11C,SAGZ,IAAXikD,GAA2B,IAAXA,IAClBznD,KAAKm5C,eAAel1C,KAAKjE,KAAKi5C,WAC1Bj5C,KAAKm5C,eAAel4C,OAnsFd,IAosFRjB,KAAKm5C,eAAe31C,SAGxB,MACF,KAAK,GACY,IAAXikD,GAA2B,IAAXA,GACdznD,KAAKk5C,kBAAkBj4C,QACzBjB,KAAK2/C,SAAS3/C,KAAKk5C,kBAAkB7zC,OAG1B,IAAXoiD,GAA2B,IAAXA,GACdznD,KAAKm5C,eAAel4C,QACtBjB,KAAK4/C,YAAY5/C,KAAKm5C,eAAe9zC,OAK7C,OAAO,CACT,CAWO,UAAAw4C,CAAWtD,GAMhB,OALAv6C,KAAK6nB,cAAcs/B,OAASnnD,KAAK6nB,cAAc7b,EAC/ChM,KAAK6nB,cAAcu/B,OAASpnD,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,EAC1EjM,KAAK6nB,cAAcw/B,iBAAiBt+C,GAAK/I,KAAKq4C,aAAatvC,GAC3D/I,KAAK6nB,cAAcw/B,iBAAiBv+C,GAAK9I,KAAKq4C,aAAavvC,GAC3D9I,KAAK6nB,cAAcy/B,aAAetnD,KAAKqzC,gBAAgBiP,SAChD,CACT,CAWO,aAAAvE,CAAcxD,GAUnB,OATAv6C,KAAK6nB,cAAc7b,EAAIhM,KAAK6nB,cAAcs/B,QAAU,EACpDnnD,KAAK6nB,cAAc5b,EAAIwH,KAAKG,IAAI5T,KAAK6nB,cAAcu/B,OAASpnD,KAAK6nB,cAAclO,MAAO,GACtF3Z,KAAKq4C,aAAatvC,GAAK/I,KAAK6nB,cAAcw/B,iBAAiBt+C,GAC3D/I,KAAKq4C,aAAavvC,GAAK9I,KAAK6nB,cAAcw/B,iBAAiBv+C,GAC3D9I,KAAKqzC,gBAAgBiP,QAAWtiD,KAAa0nD,cACzC1nD,KAAK6nB,cAAcy/B,eACrBtnD,KAAKqzC,gBAAgBiP,QAAUtiD,KAAK6nB,cAAcy/B,cAEpDtnD,KAAK4jD,mBACE,CACT,CAcO,QAAAjE,CAAS/9B,GAGd,OAFA5hB,KAAKg5C,aAAep3B,EACpB5hB,KAAK8V,eAAepG,KAAKkS,IAClB,CACT,CAMO,WAAAg+B,CAAYh+B,GAEjB,OADA5hB,KAAKi5C,UAAYr3B,GACV,CACT,CAWO,uBAAAi+B,CAAwBj+B,GAC7B,MAAMpX,EAAqB,GACrBm9C,EAAQ/lC,EAAKogC,MAAM,KACzB,KAAO2F,EAAM1mD,OAAS,GAAG,CACvB,MAAM2mD,EAAMD,EAAMnkD,QACZqkD,EAAOF,EAAMnkD,QACnB,GAAI,QAAQskD,KAAKF,GAAM,CACrB,MAAM95C,EAAQ2jB,SAASm2B,GACvB,GAAIG,EAAkBj6C,GACpB,GAAa,MAAT+5C,EACFr9C,EAAMvG,KAAK,CAAEsF,KAAM,EAAyBuE,cACvC,CACL,MAAM+J,GAAQ,IAAA4zB,YAAWoc,GACrBhwC,GACFrN,EAAMvG,KAAK,CAAEsF,KAAM,EAAsBuE,QAAO+J,S,GAS1D,OAHIrN,EAAMvJ,QACRjB,KAAK65C,SAASnqC,KAAKlF,IAEd,CACT,CAmBO,YAAAs1C,CAAal+B,GAClB,MAAMomC,EAAOpmC,EAAKogC,MAAM,KACxB,QAAIgG,EAAK/mD,OAAS,KAGd+mD,EAAK,GACAhoD,KAAKioD,iBAAiBD,EAAK,GAAIA,EAAK,KAEzCA,EAAK,IAGFhoD,KAAKkoD,mBACd,CAEQ,gBAAAD,CAAiB1N,EAAgB7oC,GAEnC1R,KAAK4hD,qBACP5hD,KAAKkoD,mBAEP,MAAMC,EAAe5N,EAAOyH,MAAM,KAClC,IAAI/gB,EACJ,MAAMmnB,EAAeD,EAAaE,WAAUxnD,GAAKA,EAAEynD,WAAW,SAO9D,OANsB,IAAlBF,IACFnnB,EAAKknB,EAAaC,GAAchf,MAAM,SAAMv+B,GAE9C7K,KAAKq4C,aAAa9mC,SAAWvR,KAAKq4C,aAAa9mC,SAASu9B,QACxD9uC,KAAKq4C,aAAa9mC,SAASC,MAAQxR,KAAKyQ,gBAAgB83C,aAAa,CAAEtnB,KAAIvvB,QAC3E1R,KAAKq4C,aAAa2O,kBACX,CACT,CAEQ,gBAAAkB,GAIN,OAHAloD,KAAKq4C,aAAa9mC,SAAWvR,KAAKq4C,aAAa9mC,SAASu9B,QACxD9uC,KAAKq4C,aAAa9mC,SAASC,MAAQ,EACnCxR,KAAKq4C,aAAa2O,kBACX,CACT,CAUQ,wBAAAwB,CAAyB5mC,EAAcolB,GAC7C,MAAM2gB,EAAQ/lC,EAAKogC,MAAM,KACzB,IAAK,IAAI3iD,EAAI,EAAGA,EAAIsoD,EAAM1mD,UACpB+lC,GAAUhnC,KAAKm6C,eAAel5C,UADA5B,IAAK2nC,EAEvC,GAAiB,MAAb2gB,EAAMtoD,GACRW,KAAK65C,SAASnqC,KAAK,CAAC,CAAEnG,KAAM,EAAyBuE,MAAO9N,KAAKm6C,eAAenT,UAC3E,CACL,MAAMnvB,GAAQ,IAAA4zB,YAAWkc,EAAMtoD,IAC3BwY,GACF7X,KAAK65C,SAASnqC,KAAK,CAAC,CAAEnG,KAAM,EAAsBuE,MAAO9N,KAAKm6C,eAAenT,GAASnvB,U,CAI5F,OAAO,CACT,CAwBO,kBAAAkoC,CAAmBn+B,GACxB,OAAO5hB,KAAKwoD,yBAAyB5mC,EAAM,EAC7C,CAOO,kBAAAo+B,CAAmBp+B,GACxB,OAAO5hB,KAAKwoD,yBAAyB5mC,EAAM,EAC7C,CAOO,sBAAAq+B,CAAuBr+B,GAC5B,OAAO5hB,KAAKwoD,yBAAyB5mC,EAAM,EAC7C,CAUO,mBAAAs+B,CAAoBt+B,GACzB,IAAKA,EAEH,OADA5hB,KAAK65C,SAASnqC,KAAK,CAAC,CAAEnG,KAAM,MACrB,EAET,MAAMiB,EAAqB,GACrBm9C,EAAQ/lC,EAAKogC,MAAM,KACzB,IAAK,IAAI3iD,EAAI,EAAGA,EAAIsoD,EAAM1mD,SAAU5B,EAClC,GAAI,QAAQyoD,KAAKH,EAAMtoD,IAAK,CAC1B,MAAMyO,EAAQ2jB,SAASk2B,EAAMtoD,IACzB0oD,EAAkBj6C,IACpBtD,EAAMvG,KAAK,CAAEsF,KAAM,EAA0BuE,S,CAOnD,OAHItD,EAAMvJ,QACRjB,KAAK65C,SAASnqC,KAAKlF,IAEd,CACT,CAOO,cAAA21C,CAAev+B,GAEpB,OADA5hB,KAAK65C,SAASnqC,KAAK,CAAC,CAAEnG,KAAM,EAA0BuE,MAAO,QACtD,CACT,CAOO,cAAAsyC,CAAex+B,GAEpB,OADA5hB,KAAK65C,SAASnqC,KAAK,CAAC,CAAEnG,KAAM,EAA0BuE,MAAO,QACtD,CACT,CAOO,kBAAAuyC,CAAmBz+B,GAExB,OADA5hB,KAAK65C,SAASnqC,KAAK,CAAC,CAAEnG,KAAM,EAA0BuE,MAAO,QACtD,CACT,CAWO,QAAAyxC,GAGL,OAFAv/C,KAAK6nB,cAAc7b,EAAI,EACvBhM,KAAK8N,SACE,CACT,CAOO,qBAAAyyC,GAIL,OAHAvgD,KAAK0b,YAAYC,MAAM,6CACvB3b,KAAKkwB,aAAahpB,gBAAgBo+C,mBAAoB,EACtDtlD,KAAKy5C,wBAAwB/pC,QACtB,CACT,CAOO,iBAAA8wC,GAIL,OAHAxgD,KAAK0b,YAAYC,MAAM,oCACvB3b,KAAKkwB,aAAahpB,gBAAgBo+C,mBAAoB,EACtDtlD,KAAKy5C,wBAAwB/pC,QACtB,CACT,CAQO,oBAAAixC,GAGL,OAFA3gD,KAAKqzC,gBAAgBqN,UAAU,GAC/B1gD,KAAKqzC,gBAAgB+R,YAAY,EAAG,EAAAC,kBAC7B,CACT,CAkBO,aAAAvE,CAAc2H,GACnB,OAA8B,IAA1BA,EAAexnD,QACjBjB,KAAK2gD,wBACE,IAEiB,MAAtB8H,EAAe,IAGnBzoD,KAAKqzC,gBAAgB+R,YAAY5O,EAAOiS,EAAe,IAAK,EAAA5H,SAAS4H,EAAe,KAAO,EAAApD,kBAFlF,EAIX,CAWO,KAAAv3C,GAUL,OATA9N,KAAK4jD,kBACL5jD,KAAK6nB,cAAc5b,IACfjM,KAAK6nB,cAAc5b,IAAMjM,KAAK6nB,cAAcksB,aAAe,GAC7D/zC,KAAK6nB,cAAc5b,IACnBjM,KAAK+J,eAAe6qC,OAAO50C,KAAKmjD,mBACvBnjD,KAAK6nB,cAAc5b,GAAKjM,KAAK+J,eAAetJ,OACrDT,KAAK6nB,cAAc5b,EAAIjM,KAAK+J,eAAetJ,KAAO,GAEpDT,KAAK4jD,mBACE,CACT,CAYO,MAAAnE,GAEL,OADAz/C,KAAK6nB,cAAcw8B,KAAKrkD,KAAK6nB,cAAc7b,IAAK,GACzC,CACT,CAWO,YAAAs0C,GAEL,GADAtgD,KAAK4jD,kBACD5jD,KAAK6nB,cAAc5b,IAAMjM,KAAK6nB,cAAce,UAAW,CAIzD,MAAM8/B,EAAqB1oD,KAAK6nB,cAAcksB,aAAe/zC,KAAK6nB,cAAce,UAChF5oB,KAAK6nB,cAAcxjB,MAAMuqC,cAAc5uC,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,EAAGy8C,EAAoB,GAC5G1oD,KAAK6nB,cAAcxjB,MAAM2E,IAAIhJ,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,EAAGjM,KAAK6nB,cAAcxC,aAAarlB,KAAKmjD,mBACnHnjD,KAAKo6C,iBAAiBtG,eAAe9zC,KAAK6nB,cAAce,UAAW5oB,KAAK6nB,cAAcksB,a,MAEtF/zC,KAAK6nB,cAAc5b,IACnBjM,KAAK4jD,kBAEP,OAAO,CACT,CAOO,SAAAnD,GAGL,OAFAzgD,KAAKw4C,QAAQxhC,QACbhX,KAAKu5C,gBAAgB7pC,QACd,CACT,CAEO,KAAAsH,GACLhX,KAAKq4C,aAAe,EAAA/yB,kBAAkBwpB,QACtC9uC,KAAKo5C,uBAAyB,EAAA9zB,kBAAkBwpB,OAClD,CAKQ,cAAAqU,GAGN,OAFAnjD,KAAKo5C,uBAAuBtwC,KAAM,SAClC9I,KAAKo5C,uBAAuBtwC,IAA6B,SAAvB9I,KAAKq4C,aAAavvC,GAC7C9I,KAAKo5C,sBACd,CAYO,SAAAsH,CAAUiI,GAEf,OADA3oD,KAAKqzC,gBAAgBqN,UAAUiI,IACxB,CACT,CAUO,sBAAA5H,GAEL,MAAM56C,EAAO,IAAI,EAAA2K,SACjB3K,EAAKs6B,QAAU,GAAK,GAAsB,IAAIrc,WAAW,GACzDje,EAAK4C,GAAK/I,KAAKq4C,aAAatvC,GAC5B5C,EAAK2C,GAAK9I,KAAKq4C,aAAavvC,GAG5B9I,KAAKgkD,WAAW,EAAG,GACnB,IAAK,IAAI4E,EAAU,EAAGA,EAAU5oD,KAAK+J,eAAetJ,OAAQmoD,EAAS,CACnE,MAAMvoC,EAAMrgB,KAAK6nB,cAAclO,MAAQ3Z,KAAK6nB,cAAc5b,EAAI28C,EACxDj4C,EAAO3Q,KAAK6nB,cAAcxjB,MAAM6E,IAAImX,GACtC1P,IACFA,EAAK+tB,KAAKv4B,GACVwK,EAAK0Z,WAAY,E,CAKrB,OAFArqB,KAAKo6C,iBAAiByO,eACtB7oD,KAAKgkD,WAAW,EAAG,IACZ,CACT,CA6BO,mBAAA9C,CAAoBt/B,EAAc24B,GACvC,MAMM5P,EAAI3qC,KAAK+J,eAAe5F,OACxByyC,EAAO52C,KAAKwQ,gBAAgBrJ,WAGlC,MAVU,CAACsoC,IACTzvC,KAAKkwB,aAAa7oB,iBAAiB,GAAG,EAAA4Q,GAAGC,MAAMu3B,IAAI,EAAAx3B,GAAGC,UAC/C,GAQiB4wC,CAAb,OAATlnC,EAAwB,OAAO5hB,KAAKq4C,aAAa0Q,cAAgB,EAAI,MAC5D,OAATnnC,EAAwB,aACf,MAATA,EAAuB,OAAO+oB,EAAE/hB,UAAY,KAAK+hB,EAAEoJ,aAAe,KAEzD,MAATnyB,EAAuB,SACd,OAATA,EAAwB,OAPc,CAAE,MAAS,EAAG,UAAa,EAAG,IAAO,GAOrCg1B,EAAKhf,cAAgBgf,EAAKjf,YAAc,EAAI,OAC7E,OACX,CAEO,cAAAmc,CAAe5jC,EAAYE,GAChCpQ,KAAKo6C,iBAAiBtG,eAAe5jC,EAAIE,EAC3C,EArsGF,iBAktGA,IAAMiqC,EAAN,MAIE,WAAA56C,CACmCsK,GAAA,KAAAA,eAAAA,EAEjC/J,KAAKiiD,YACP,CAEO,UAAAA,GACLjiD,KAAKgC,MAAQhC,KAAK+J,eAAe5F,OAAO8H,EACxCjM,KAAKiC,IAAMjC,KAAK+J,eAAe5F,OAAO8H,CACxC,CAEO,SAAA42C,CAAU52C,GACXA,EAAIjM,KAAKgC,MACXhC,KAAKgC,MAAQiK,EACJA,EAAIjM,KAAKiC,MAClBjC,KAAKiC,IAAMgK,EAEf,CAEO,cAAA6nC,CAAe5jC,EAAYE,GAC5BF,EAAKE,IACP+nC,EAAQjoC,EACRA,EAAKE,EACLA,EAAK+nC,GAEHjoC,EAAKlQ,KAAKgC,QACZhC,KAAKgC,MAAQkO,GAEXE,EAAKpQ,KAAKiC,MACZjC,KAAKiC,IAAMmO,EAEf,CAEO,YAAAy4C,GACL7oD,KAAK8zC,eAAe,EAAG9zC,KAAK+J,eAAetJ,KAAO,EACpD,GAGF,SAASsnD,EAAkBzgD,GACzB,OAAO,GAAKA,GAASA,EAAQ,GAC/B,CA5CM+yC,EAAe,GAKhB,MAAAhqC,iBALCgqC,E,cCxwGN,SAAgB5rC,EAAamnC,GAC3B,IAAK,MAAMxb,KAAKwb,EACdxb,EAAEzwB,UAEJisC,EAAY30C,OAAS,CACvB,C,+HAxDA,mBAIE,WAAAxB,GAHU,KAAAupD,aAA8B,GAC9B,KAAAhgC,aAAuB,CAGjC,CAKO,OAAArf,GACL3J,KAAKgpB,aAAc,EACnB,IAAK,MAAMoR,KAAKp6B,KAAKgpD,aACnB5uB,EAAEzwB,UAEJ3J,KAAKgpD,aAAa/nD,OAAS,CAC7B,CAOO,QAAAI,CAAgC+4B,GAErC,OADAp6B,KAAKgpD,aAAa/kD,KAAKm2B,GAChBA,CACT,CAOO,UAAA6uB,CAAkC7uB,GACvC,MAAMtsB,EAAQ9N,KAAKgpD,aAAa99C,QAAQkvB,IACzB,IAAXtsB,GACF9N,KAAKgpD,aAAa79C,OAAO2C,EAAO,EAEpC,GAMF,wBAA6Bg7C,GAC3B,MAAO,CAAEn/C,QAASm/C,EACpB,EAKA,iBAUA,qCAA0CI,GACxC,MAAO,CAAEv/C,QAAS,IAAM8E,EAAay6C,GACvC,C,gGCrEA,MAAavgD,EAAb,cACU,KAAAwgD,MAA8F,CAAC,CAgBzG,CAdS,GAAAngD,CAAI+gC,EAAe0d,EAAiBngD,GACpCtH,KAAKmpD,MAAMpf,KACd/pC,KAAKmpD,MAAMpf,GAAS,CAAC,GAEvB/pC,KAAKmpD,MAAMpf,GAA2B0d,GAAUngD,CAClD,CAEO,GAAA4B,CAAI6gC,EAAe0d,GACxB,OAAOznD,KAAKmpD,MAAMpf,GAA4B/pC,KAAKmpD,MAAMpf,GAA2B0d,QAAU58C,CAChG,CAEO,KAAAxB,GACLrJ,KAAKmpD,MAAQ,CAAC,CAChB,EAhBF,cAmBA,iCACU,KAAAA,MAAwE,IAAIxgD,CAgBtF,CAdS,GAAAK,CAAI+gC,EAAe0d,EAAiB2B,EAAeC,EAAiB/hD,GACpEtH,KAAKmpD,MAAMjgD,IAAI6gC,EAAO0d,IACzBznD,KAAKmpD,MAAMngD,IAAI+gC,EAAO0d,EAAQ,IAAI9+C,GAEpC3I,KAAKmpD,MAAMjgD,IAAI6gC,EAAO0d,GAASz+C,IAAIogD,EAAOC,EAAQ/hD,EACpD,CAEO,GAAA4B,CAAI6gC,EAAe0d,EAAiB2B,EAAeC,G,MACxD,OAAoC,QAA7B,EAAArpD,KAAKmpD,MAAMjgD,IAAI6gC,EAAO0d,UAAO,eAAEv+C,IAAIkgD,EAAOC,EACnD,CAEO,KAAAhgD,GACLrJ,KAAKmpD,MAAM9/C,OACb,E,wMCzBW,EAAAmnC,OAA+B,oBAAd8Y,UAC9B,MAAMC,EAAa,EAAM,OAAI,OAASD,UAAUC,UAC1CC,EAAY,EAAM,OAAI,OAASF,UAAUE,SAElC,EAAA7uC,UAAY4uC,EAAUx3C,SAAS,WAC/B,EAAAotB,aAAeoqB,EAAUx3C,SAAS,QAClC,EAAA03C,SAAW,iCAAiCzlD,KAAKulD,GAC9D,8BACE,IAAK,EAAAE,SACH,OAAO,EAET,MAAMC,EAAeH,EAAU3Y,MAAM,kBACrC,OAAqB,OAAjB8Y,GAAyBA,EAAazoD,OAAS,EAC1C,EAEFwwB,SAASi4B,EAAa,GAC/B,EAKa,EAAA9lD,MAAQ,CAAC,YAAa,WAAY,SAAU,UAAUmO,SAASy3C,GAC/D,EAAAG,OAAsB,SAAbH,EACT,EAAAI,SAAwB,WAAbJ,EACX,EAAA/kC,UAAY,CAAC,UAAW,QAAS,QAAS,SAAS1S,SAASy3C,GAC5D,EAAAzuC,QAAUyuC,EAASt+C,QAAQ,UAAY,EAEvC,EAAAkR,WAAa,WAAWpY,KAAKulD,E,oFCpC1C,IAAIlqD,EAAI,EAOR,mBAGE,WAAAI,CACmBoqD,GAAA,KAAAA,QAAAA,EAHF,KAAAhc,OAAc,EAK/B,CAEO,KAAAxkC,GACLrJ,KAAK6tC,OAAO5sC,OAAS,CACvB,CAEO,MAAA6oD,CAAOxiD,GACe,IAAvBtH,KAAK6tC,OAAO5sC,QAIhB5B,EAAIW,KAAK+pD,QAAQ/pD,KAAK6pD,QAAQviD,IAC9BtH,KAAK6tC,OAAO1iC,OAAO9L,EAAG,EAAGiI,IAJvBtH,KAAK6tC,OAAO5pC,KAAKqD,EAKrB,CAEO,OAAOA,GACZ,GAA2B,IAAvBtH,KAAK6tC,OAAO5sC,OACd,OAAO,EAET,MAAM2B,EAAM5C,KAAK6pD,QAAQviD,GACzB,QAAYuD,IAARjI,EACF,OAAO,EAGT,GADAvD,EAAIW,KAAK+pD,QAAQnnD,IACN,IAAPvD,EACF,OAAO,EAET,GAAIW,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOxuC,MAAQuD,EACnC,OAAO,EAET,GACE,GAAI5C,KAAK6tC,OAAOxuC,KAAOiI,EAErB,OADAtH,KAAK6tC,OAAO1iC,OAAO9L,EAAG,IACf,UAEAA,EAAIW,KAAK6tC,OAAO5sC,QAAUjB,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOxuC,MAAQuD,GACtE,OAAO,CACT,CAEO,eAAConD,CAAepnD,GACrB,GAA2B,IAAvB5C,KAAK6tC,OAAO5sC,SAGhB5B,EAAIW,KAAK+pD,QAAQnnD,KACbvD,EAAI,GAAKA,GAAKW,KAAK6tC,OAAO5sC,SAG1BjB,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOxuC,MAAQuD,GAGrC,SACQ5C,KAAK6tC,OAAOxuC,WACTA,EAAIW,KAAK6tC,OAAO5sC,QAAUjB,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOxuC,MAAQuD,EACxE,CAEO,YAAAqnD,CAAarnD,EAAa8N,GAC/B,GAA2B,IAAvB1Q,KAAK6tC,OAAO5sC,SAGhB5B,EAAIW,KAAK+pD,QAAQnnD,KACbvD,EAAI,GAAKA,GAAKW,KAAK6tC,OAAO5sC,SAG1BjB,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOxuC,MAAQuD,GAGrC,GACE8N,EAAS1Q,KAAK6tC,OAAOxuC,YACZA,EAAIW,KAAK6tC,OAAO5sC,QAAUjB,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOxuC,MAAQuD,EACxE,CAEO,MAAAsnD,GAEL,MAAO,IAAIlqD,KAAK6tC,QAAQqc,QAC1B,CAEQ,OAAAH,CAAQnnD,GACd,IAAI8Q,EAAM,EACNE,EAAM5T,KAAK6tC,OAAO5sC,OAAS,EAC/B,KAAO2S,GAAOF,GAAK,CACjB,IAAIy2C,EAAOz2C,EAAME,GAAQ,EACzB,MAAMw2C,EAASpqD,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOsc,IACxC,GAAIC,EAASxnD,EACXgR,EAAMu2C,EAAM,MACP,MAAIC,EAASxnD,GAEb,CAEL,KAAOunD,EAAM,GAAKnqD,KAAK6pD,QAAQ7pD,KAAK6tC,OAAOsc,EAAM,MAAQvnD,GACvDunD,IAEF,OAAOA,C,CANPz2C,EAAMy2C,EAAM,C,EAWhB,OAAOz2C,CACT,E,iIC/GF,gBA2BA,MAAe22C,EAAf,cACU,KAAAC,OAAmC,GAEnC,KAAAC,GAAK,CAkEf,CA7DS,OAAAC,CAAQC,GACbzqD,KAAKsqD,OAAOrmD,KAAKwmD,GACjBzqD,KAAK0qD,QACP,CAEO,KAAAjmB,GACL,KAAOzkC,KAAKuqD,GAAKvqD,KAAKsqD,OAAOrpD,QACtBjB,KAAKsqD,OAAOtqD,KAAKuqD,OACpBvqD,KAAKuqD,KAGTvqD,KAAKqJ,OACP,CAEO,KAAAA,GACDrJ,KAAK2qD,gBACP3qD,KAAK4qD,gBAAgB5qD,KAAK2qD,eAC1B3qD,KAAK2qD,mBAAgB9/C,GAEvB7K,KAAKuqD,GAAK,EACVvqD,KAAKsqD,OAAOrpD,OAAS,CACvB,CAEQ,MAAAypD,GACD1qD,KAAK2qD,gBACR3qD,KAAK2qD,cAAgB3qD,KAAK6qD,iBAAiB7qD,KAAK8qD,SAAStpD,KAAKxB,OAElE,CAEQ,QAAA8qD,CAASC,GACf/qD,KAAK2qD,mBAAgB9/C,EACrB,IAAImgD,EAAe,EACfC,EAAc,EACdC,EAAwBH,EAASI,gBACjCC,EAAoB,EACxB,KAAOprD,KAAKuqD,GAAKvqD,KAAKsqD,OAAOrpD,QAAQ,CAanC,GAZA+pD,EAAe1kC,KAAKC,MACfvmB,KAAKsqD,OAAOtqD,KAAKuqD,OACpBvqD,KAAKuqD,KAKPS,EAAev3C,KAAKG,IAAI,EAAG0S,KAAKC,MAAQykC,GACxCC,EAAcx3C,KAAKG,IAAIo3C,EAAcC,GAGrCG,EAAoBL,EAASI,gBACX,IAAdF,EAAoBG,EAOtB,OAJIF,EAAwBF,GAAgB,IAC1Cx4C,QAAQC,KAAK,4CAA4CgB,KAAKoO,IAAIpO,KAAKkV,MAAMuiC,EAAwBF,cAEvGhrD,KAAK0qD,SAGPQ,EAAwBE,C,CAE1BprD,KAAKqJ,OACP,EAQF,MAAagiD,UAA0BhB,EAC3B,gBAAAQ,CAAiBn6C,GACzB,OAAO5M,YAAW,IAAM4M,EAAS1Q,KAAKsrD,gBAAgB,MACxD,CAEU,eAAAV,CAAgBpQ,GACxBp0B,aAAao0B,EACf,CAEQ,eAAA8Q,CAAgBC,GACtB,MAAMtpD,EAAMqkB,KAAKC,MAAQglC,EACzB,MAAO,CACLJ,cAAe,IAAM13C,KAAKG,IAAI,EAAG3R,EAAMqkB,KAAKC,OAEhD,EAdF,sBAoCa,EAAAilC,eAAkB,EAAAhb,QAAU,wBAAyBttC,OAnBlE,cAAoCmnD,EACxB,gBAAAQ,CAAiBn6C,GACzB,OAAO+6C,oBAAoB/6C,EAC7B,CAEU,eAAAk6C,CAAgBpQ,GACxBkR,mBAAmBlR,EACrB,GAYkG6Q,EAMpG,0BAGE,WAAA5rD,GACEO,KAAK2rD,OAAS,IAAI,EAAAH,aACpB,CAEO,GAAAxiD,CAAIyhD,GACTzqD,KAAK2rD,OAAOtiD,QACZrJ,KAAK2rD,OAAOnB,QAAQC,EACtB,CAEO,KAAAhmB,GACLzkC,KAAK2rD,OAAOlnB,OACd,E,yGC/JF,eAGA,yCAA8CrS,GAW5C,MAAMzhB,EAAOyhB,EAAcjuB,OAAOE,MAAM6E,IAAIkpB,EAAcjuB,OAAOwV,MAAQyY,EAAcjuB,OAAO8H,EAAI,GAC5F2/C,EAAWj7C,aAAI,EAAJA,EAAMzH,IAAIkpB,EAAcxkB,KAAO,GAE1C2xC,EAAWntB,EAAcjuB,OAAOE,MAAM6E,IAAIkpB,EAAcjuB,OAAOwV,MAAQyY,EAAcjuB,OAAO8H,GAC9FszC,GAAYqM,IACdrM,EAASl1B,UAAauhC,EAAS,EAAAC,wBAA0B,EAAAvI,gBAAkBsI,EAAS,EAAAC,wBAA0B,EAAAC,qBAElH,C,uGClBA,MAAaxwB,EAAb,cAsBS,KAAAvyB,GAAK,EACL,KAAAD,GAAK,EACL,KAAAyI,SAA2B,IAAIw6C,CAgGxC,CAvHS,iBAAOj0C,CAAWxQ,GACvB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,EAEJ,CAEO,mBAAO++C,CAAa/+C,GACzB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,EACvG,CAEO,KAAAwnC,GACL,MAAMkd,EAAS,IAAI1wB,EAInB,OAHA0wB,EAAOjjD,GAAK/I,KAAK+I,GACjBijD,EAAOljD,GAAK9I,KAAK8I,GACjBkjD,EAAOz6C,SAAWvR,KAAKuR,SAASu9B,QACzBkd,CACT,CAQO,SAAA9vB,GAA4B,OAAiB,SAAVl8B,KAAK+I,EAAsB,CAC9D,MAAA2xB,GAA4B,OAAiB,UAAV16B,KAAK+I,EAAmB,CAC3D,WAAAyxB,GACL,OAAIx6B,KAAKsR,oBAAuD,IAAjCtR,KAAKuR,SAAS2pB,eACpC,EAEQ,UAAVl7B,KAAK+I,EACd,CACO,OAAAkjD,GAA4B,OAAiB,UAAVjsD,KAAK+I,EAAoB,CAC5D,WAAAkyB,GAA4B,OAAiB,WAAVj7B,KAAK+I,EAAwB,CAChE,QAAA4xB,GAA4B,OAAiB,SAAV36B,KAAK8I,EAAqB,CAC7D,KAAAkyB,GAA4B,OAAiB,UAAVh7B,KAAK8I,EAAkB,CAC1D,eAAA4yB,GAA4B,OAAiB,WAAV17B,KAAK+I,EAA4B,CACpE,WAAAggD,GAA4B,OAAiB,UAAV/oD,KAAK8I,EAAwB,CAChE,UAAA2xB,GAA4B,OAAiB,WAAVz6B,KAAK8I,EAAuB,CAG/D,cAAAgzB,GAA2B,OAAiB,SAAV97B,KAAK+I,EAAyB,CAChE,cAAAkzB,GAA2B,OAAiB,SAAVj8B,KAAK8I,EAAyB,CAChE,OAAAojD,GAA2B,OAA0C,WAAxB,SAAVlsD,KAAK+I,GAAgD,CACxF,OAAAojD,GAA2B,OAA0C,WAAxB,SAAVnsD,KAAK8I,GAAgD,CACxF,WAAAsjD,GAA2B,OAA0C,WAAxB,SAAVpsD,KAAK+I,KAAqF,WAAxB,SAAV/I,KAAK+I,GAAiD,CACjJ,WAAAsjD,GAA2B,OAA0C,WAAxB,SAAVrsD,KAAK8I,KAAqF,WAAxB,SAAV9I,KAAK8I,GAAiD,CACjJ,WAAAwjD,GAA2B,OAA0C,IAAxB,SAAVtsD,KAAK+I,GAAgC,CACxE,WAAAwjD,GAA2B,OAA0C,IAAxB,SAAVvsD,KAAK8I,GAAgC,CACxE,kBAAA0jD,GAAgC,OAAmB,IAAZxsD,KAAK+I,IAAwB,IAAZ/I,KAAK8I,EAAU,CAGvE,UAAA8yB,GACL,OAAkB,SAAV57B,KAAK+I,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAV/I,KAAK+I,GACtC,KAAK,SAAqB,OAAiB,SAAV/I,KAAK+I,GACtC,QAA0B,OAAQ,EAEtC,CACO,UAAAgzB,GACL,OAAkB,SAAV/7B,KAAK8I,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAV9I,KAAK8I,GACtC,KAAK,SAAqB,OAAiB,SAAV9I,KAAK8I,GACtC,QAA0B,OAAQ,EAEtC,CAGO,gBAAAwI,GACL,OAAiB,UAAVtR,KAAK8I,EACd,CACO,cAAAk+C,GACDhnD,KAAKuR,SAASk7C,UAChBzsD,KAAK8I,KAAM,UAEX9I,KAAK8I,IAAM,SAEf,CACO,iBAAAyyB,GACL,GAAe,UAAVv7B,KAAK8I,KAA+B9I,KAAKuR,SAASu1C,eACrD,OAAuC,SAA/B9mD,KAAKuR,SAASu1C,gBACpB,KAAK,SACL,KAAK,SAAqB,OAAsC,IAA/B9mD,KAAKuR,SAASu1C,eAC/C,KAAK,SAAqB,OAAsC,SAA/B9mD,KAAKuR,SAASu1C,eAC/C,QAA0B,OAAO9mD,KAAK47B,aAG1C,OAAO57B,KAAK47B,YACd,CACO,qBAAA8wB,GACL,OAAkB,UAAV1sD,KAAK8I,KAA+B9I,KAAKuR,SAASu1C,eACvB,SAA/B9mD,KAAKuR,SAASu1C,eACd9mD,KAAK87B,gBACX,CACO,mBAAAV,GACL,OAAkB,UAAVp7B,KAAK8I,KAA+B9I,KAAKuR,SAASu1C,eACE,WAAxB,SAA/B9mD,KAAKuR,SAASu1C,gBACf9mD,KAAKksD,SACX,CACO,uBAAAS,GACL,OAAkB,UAAV3sD,KAAK8I,KAA+B9I,KAAKuR,SAASu1C,eACE,WAAxB,SAA/B9mD,KAAKuR,SAASu1C,iBAC8C,WAAxB,SAA/B9mD,KAAKuR,SAASu1C,gBACpB9mD,KAAKosD,aACX,CACO,uBAAAjxB,GACL,OAAkB,UAAVn7B,KAAK8I,KAA+B9I,KAAKuR,SAASu1C,eACE,IAAxB,SAA/B9mD,KAAKuR,SAASu1C,gBACf9mD,KAAKssD,aACX,CACO,iBAAAM,GACL,OAAiB,UAAV5sD,KAAK+I,GACG,UAAV/I,KAAK8I,GAA4B9I,KAAKuR,SAAS2pB,eAAiB,EACjE,CACN,EAvHF,kBA+HA,MAAa6wB,EAEX,OAAWlxB,GACT,OAAI76B,KAAK6sD,QAEQ,UAAZ7sD,KAAK8sD,KACL9sD,KAAKk7B,gBAAkB,GAGrBl7B,KAAK8sD,IACd,CACA,OAAWjyB,CAAIvzB,GAAiBtH,KAAK8sD,KAAOxlD,CAAO,CAEnD,kBAAW4zB,GAET,OAAIl7B,KAAK6sD,OACA,GAEW,UAAZ7sD,KAAK8sD,OAAoC,EACnD,CACA,kBAAW5xB,CAAe5zB,GACxBtH,KAAK8sD,OAAQ,UACb9sD,KAAK8sD,MAASxlD,GAAS,GAAM,SAC/B,CAEA,kBAAWw/C,GACT,OAAmB,SAAZ9mD,KAAK8sD,IACd,CACA,kBAAWhG,CAAex/C,GACxBtH,KAAK8sD,OAAQ,SACb9sD,KAAK8sD,MAAgB,SAARxlD,CACf,CAGA,SAAWkK,GACT,OAAOxR,KAAK6sD,MACd,CACA,SAAWr7C,CAAMlK,GACftH,KAAK6sD,OAASvlD,CAChB,CAEA,WAAA7H,CACEo7B,EAAc,EACdrpB,EAAgB,GA1CV,KAAAs7C,KAAe,EAgCf,KAAAD,OAAiB,EAYvB7sD,KAAK8sD,KAAOjyB,EACZ76B,KAAK6sD,OAASr7C,CAChB,CAEO,KAAAs9B,GACL,OAAO,IAAIid,EAAc/rD,KAAK8sD,KAAM9sD,KAAK6sD,OAC3C,CAMO,OAAAJ,GACL,OAA+B,IAAxBzsD,KAAKk7B,gBAA0D,IAAhBl7B,KAAK6sD,MAC7D,EA3DF,iB,oGClIA,gBAGA,UACA,SACA,SACA,UACA,UAEA,UACA,UACA,UAEa,EAAAE,gBAAkB,WAS/B,eAoBE,WAAAttD,CACUutD,EACAx8C,EACAzG,GAFA,KAAAijD,eAAAA,EACA,KAAAx8C,gBAAAA,EACA,KAAAzG,eAAAA,EArBH,KAAAtF,MAAgB,EAChB,KAAAkV,MAAgB,EAChB,KAAA1N,EAAY,EACZ,KAAAD,EAAY,EAGZ,KAAAq4C,KAAkD,CAAC,EACnD,KAAA+C,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB,EAAA/hC,kBAAkBwpB,QACrC,KAAAwY,aAAqC,EAAAjC,gBACrC,KAAAziC,QAAoB,GACnB,KAAAqqC,UAAuB,EAAAn8C,SAASo8C,aAAa,CAAC,EAAG,EAAAC,eAAgB,EAAA5J,gBAAiB,EAAAD,iBAClF,KAAA8J,gBAA6B,EAAAt8C,SAASo8C,aAAa,CAAC,EAAG,EAAA3yB,qBAAsB,EAAA8yB,sBAAuB,EAAAvB,uBAGpG,KAAAwB,aAAuB,EA6NvB,KAAAC,oBAAsB,IAAI,EAAA/B,cAC1B,KAAAgC,uBAAyB,EAvN/BxtD,KAAKytD,MAAQztD,KAAK+J,eAAe6D,KACjC5N,KAAK0tD,MAAQ1tD,KAAK+J,eAAetJ,KACjCT,KAAKqE,MAAQ,IAAI,EAAAipC,aAA0BttC,KAAK2tD,wBAAwB3tD,KAAK0tD,QAC7E1tD,KAAK4oB,UAAY,EACjB5oB,KAAK+zC,aAAe/zC,KAAK0tD,MAAQ,EACjC1tD,KAAK4tD,eACP,CAEO,WAAAvK,CAAYkD,GAUjB,OATIA,GACFvmD,KAAKitD,UAAUlkD,GAAKw9C,EAAKx9C,GACzB/I,KAAKitD,UAAUnkD,GAAKy9C,EAAKz9C,GACzB9I,KAAKitD,UAAU17C,SAAWg1C,EAAKh1C,WAE/BvR,KAAKitD,UAAUlkD,GAAK,EACpB/I,KAAKitD,UAAUnkD,GAAK,EACpB9I,KAAKitD,UAAU17C,SAAW,IAAI,EAAAw6C,eAEzB/rD,KAAKitD,SACd,CAEO,iBAAAY,CAAkBtH,GAUvB,OATIA,GACFvmD,KAAKotD,gBAAgBrkD,GAAKw9C,EAAKx9C,GAC/B/I,KAAKotD,gBAAgBtkD,GAAKy9C,EAAKz9C,GAC/B9I,KAAKotD,gBAAgB77C,SAAWg1C,EAAKh1C,WAErCvR,KAAKotD,gBAAgBrkD,GAAK,EAC1B/I,KAAKotD,gBAAgBtkD,GAAK,EAC1B9I,KAAKotD,gBAAgB77C,SAAW,IAAI,EAAAw6C,eAE/B/rD,KAAKotD,eACd,CAEO,YAAA/nC,CAAakhC,EAAsBl8B,GACxC,OAAO,IAAI,EAAAyjC,WAAW9tD,KAAK+J,eAAe6D,KAAM5N,KAAKqjD,YAAYkD,GAAOl8B,EAC1E,CAEA,iBAAW5I,GACT,OAAOzhB,KAAKgtD,gBAAkBhtD,KAAKqE,MAAM4pC,UAAYjuC,KAAK0tD,KAC5D,CAEA,sBAAWn0C,GACT,MACMw0C,EADY/tD,KAAK2Z,MAAQ3Z,KAAKiM,EACNjM,KAAKyE,MACnC,OAAQspD,GAAa,GAAKA,EAAY/tD,KAAK0tD,KAC7C,CAOQ,uBAAAC,CAAwBltD,GAC9B,IAAKT,KAAKgtD,eACR,OAAOvsD,EAGT,MAAMutD,EAAsBvtD,EAAOT,KAAKwQ,gBAAgBrJ,WAAW8mD,WAEnE,OAAOD,EAAsB,EAAAjB,gBAAkB,EAAAA,gBAAkBiB,CACnE,CAKO,gBAAAE,CAAiBC,GACtB,GAA0B,IAAtBnuD,KAAKqE,MAAMpD,OAAc,MACV4J,IAAbsjD,IACFA,EAAW,EAAA7oC,mBAEb,IAAIjmB,EAAIW,KAAK0tD,MACb,KAAOruD,KACLW,KAAKqE,MAAMJ,KAAKjE,KAAKqlB,aAAa8oC,G,CAGxC,CAKO,KAAA9kD,GACLrJ,KAAKyE,MAAQ,EACbzE,KAAK2Z,MAAQ,EACb3Z,KAAKiM,EAAI,EACTjM,KAAKgM,EAAI,EACThM,KAAKqE,MAAQ,IAAI,EAAAipC,aAA0BttC,KAAK2tD,wBAAwB3tD,KAAK0tD,QAC7E1tD,KAAK4oB,UAAY,EACjB5oB,KAAK+zC,aAAe/zC,KAAK0tD,MAAQ,EACjC1tD,KAAK4tD,eACP,CAOO,MAAA1wC,CAAOkxC,EAAiBC,GAE7B,MAAMC,EAAWtuD,KAAKqjD,YAAY,EAAA/9B,mBAGlC,IAAIipC,EAAmB,EAIvB,MAAMrgB,EAAeluC,KAAK2tD,wBAAwBU,GAOlD,GANIngB,EAAeluC,KAAKqE,MAAM4pC,YAC5BjuC,KAAKqE,MAAM4pC,UAAYC,GAKrBluC,KAAKqE,MAAMpD,OAAS,EAAG,CAEzB,GAAIjB,KAAKytD,MAAQW,EACf,IAAK,IAAI/uD,EAAI,EAAGA,EAAIW,KAAKqE,MAAMpD,OAAQ5B,IAErCkvD,IAAqBvuD,KAAKqE,MAAM6E,IAAI7J,GAAI6d,OAAOkxC,EAASE,GAK5D,IAAIE,EAAS,EACb,GAAIxuD,KAAK0tD,MAAQW,EACf,IAAK,IAAIpiD,EAAIjM,KAAK0tD,MAAOzhD,EAAIoiD,EAASpiD,IAChCjM,KAAKqE,MAAMpD,OAASotD,EAAUruD,KAAK2Z,QACjC3Z,KAAKwQ,gBAAgBrJ,WAAWuuC,kBAAsE7qC,IAAvD7K,KAAKwQ,gBAAgBrJ,WAAWouC,WAAWE,cAAoF5qC,IAA3D7K,KAAKwQ,gBAAgBrJ,WAAWouC,WAAWC,YAGhKx1C,KAAKqE,MAAMJ,KAAK,IAAI,EAAA6pD,WAAWM,EAASE,IAEpCtuD,KAAK2Z,MAAQ,GAAK3Z,KAAKqE,MAAMpD,QAAUjB,KAAK2Z,MAAQ3Z,KAAKiM,EAAIuiD,EAAS,GAGxExuD,KAAK2Z,QACL60C,IACIxuD,KAAKyE,MAAQ,GAEfzE,KAAKyE,SAKPzE,KAAKqE,MAAMJ,KAAK,IAAI,EAAA6pD,WAAWM,EAASE,UAMhD,IAAK,IAAIriD,EAAIjM,KAAK0tD,MAAOzhD,EAAIoiD,EAASpiD,IAChCjM,KAAKqE,MAAMpD,OAASotD,EAAUruD,KAAK2Z,QACjC3Z,KAAKqE,MAAMpD,OAASjB,KAAK2Z,MAAQ3Z,KAAKiM,EAAI,EAE5CjM,KAAKqE,MAAMgB,OAGXrF,KAAK2Z,QACL3Z,KAAKyE,UAQb,GAAIypC,EAAeluC,KAAKqE,MAAM4pC,UAAW,CAEvC,MAAMwgB,EAAezuD,KAAKqE,MAAMpD,OAASitC,EACrCugB,EAAe,IACjBzuD,KAAKqE,MAAMsqC,UAAU8f,GACrBzuD,KAAK2Z,MAAQlG,KAAKG,IAAI5T,KAAK2Z,MAAQ80C,EAAc,GACjDzuD,KAAKyE,MAAQgP,KAAKG,IAAI5T,KAAKyE,MAAQgqD,EAAc,GACjDzuD,KAAKonD,OAAS3zC,KAAKG,IAAI5T,KAAKonD,OAASqH,EAAc,IAErDzuD,KAAKqE,MAAM4pC,UAAYC,C,CAIzBluC,KAAKgM,EAAIyH,KAAKC,IAAI1T,KAAKgM,EAAGoiD,EAAU,GACpCpuD,KAAKiM,EAAIwH,KAAKC,IAAI1T,KAAKiM,EAAGoiD,EAAU,GAChCG,IACFxuD,KAAKiM,GAAKuiD,GAEZxuD,KAAKmnD,OAAS1zC,KAAKC,IAAI1T,KAAKmnD,OAAQiH,EAAU,GAE9CpuD,KAAK4oB,UAAY,C,CAKnB,GAFA5oB,KAAK+zC,aAAesa,EAAU,EAE1BruD,KAAK0uD,mBACP1uD,KAAK2uD,QAAQP,EAASC,GAGlBruD,KAAKytD,MAAQW,GACf,IAAK,IAAI/uD,EAAI,EAAGA,EAAIW,KAAKqE,MAAMpD,OAAQ5B,IAErCkvD,IAAqBvuD,KAAKqE,MAAM6E,IAAI7J,GAAI6d,OAAOkxC,EAASE,GAK9DtuD,KAAKytD,MAAQW,EACbpuD,KAAK0tD,MAAQW,EAEbruD,KAAKutD,oBAAoBlkD,QAErBklD,EAAmB,GAAMvuD,KAAKqE,MAAMpD,SACtCjB,KAAKwtD,uBAAyB,EAC9BxtD,KAAKutD,oBAAoB/C,SAAQ,IAAMxqD,KAAK4uD,0BAEhD,CAKQ,qBAAAA,GACN,IAAIC,GAAY,EACZ7uD,KAAKwtD,wBAA0BxtD,KAAKqE,MAAMpD,SAG5CjB,KAAKwtD,uBAAyB,EAC9BqB,GAAY,GAEd,IAAIC,EAAU,EACd,KAAO9uD,KAAKwtD,uBAAyBxtD,KAAKqE,MAAMpD,QAG9C,GAFA6tD,GAAW9uD,KAAKqE,MAAM6E,IAAIlJ,KAAKwtD,0BAA2BuB,gBAEtDD,EAAU,IACZ,OAAO,EAMX,OAAOD,CACT,CAEA,oBAAYH,GACV,MAAMnZ,EAAav1C,KAAKwQ,gBAAgBrJ,WAAWouC,WACnD,OAAIA,GAAcA,EAAWC,YACpBx1C,KAAKgtD,gBAAyC,WAAvBzX,EAAWE,SAAwBF,EAAWC,aAAe,MAEtFx1C,KAAKgtD,iBAAmBhtD,KAAKwQ,gBAAgBrJ,WAAWuuC,WACjE,CAEQ,OAAAiZ,CAAQP,EAAiBC,GAC3BruD,KAAKytD,QAAUW,IAKfA,EAAUpuD,KAAKytD,MACjBztD,KAAKgvD,cAAcZ,EAASC,GAE5BruD,KAAKivD,eAAeb,EAASC,GAEjC,CAEQ,aAAAW,CAAcZ,EAAiBC,GACrC,MAAMa,GAAqB,IAAAC,8BAA6BnvD,KAAKqE,MAAOrE,KAAKytD,MAAOW,EAASpuD,KAAK2Z,MAAQ3Z,KAAKiM,EAAGjM,KAAKqjD,YAAY,EAAA/9B,oBAC/H,GAAI4pC,EAASjuD,OAAS,EAAG,CACvB,MAAMmuD,GAAkB,IAAAC,6BAA4BrvD,KAAKqE,MAAO6qD,IAChE,IAAAI,4BAA2BtvD,KAAKqE,MAAO+qD,EAAgBG,QACvDvvD,KAAKwvD,4BAA4BpB,EAASC,EAASe,EAAgBK,a,CAEvE,CAEQ,2BAAAD,CAA4BpB,EAAiBC,EAAiBoB,GACpE,MAAMnB,EAAWtuD,KAAKqjD,YAAY,EAAA/9B,mBAElC,IAAIoqC,EAAsBD,EAC1B,KAAOC,KAAwB,GACV,IAAf1vD,KAAK2Z,OACH3Z,KAAKiM,EAAI,GACXjM,KAAKiM,IAEHjM,KAAKqE,MAAMpD,OAASotD,GAEtBruD,KAAKqE,MAAMJ,KAAK,IAAI,EAAA6pD,WAAWM,EAASE,MAGtCtuD,KAAKyE,QAAUzE,KAAK2Z,OACtB3Z,KAAKyE,QAEPzE,KAAK2Z,SAGT3Z,KAAKonD,OAAS3zC,KAAKG,IAAI5T,KAAKonD,OAASqI,EAAc,EACrD,CAEQ,cAAAR,CAAeb,EAAiBC,GACtC,MAAMC,EAAWtuD,KAAKqjD,YAAY,EAAA/9B,mBAG5BqqC,EAAW,GACjB,IAAIC,EAAgB,EAEpB,IAAK,IAAI3jD,EAAIjM,KAAKqE,MAAMpD,OAAS,EAAGgL,GAAK,EAAGA,IAAK,CAE/C,IAAIszC,EAAWv/C,KAAKqE,MAAM6E,IAAI+C,GAC9B,IAAKszC,IAAaA,EAASl1B,WAAak1B,EAASvuC,oBAAsBo9C,EACrE,SAIF,MAAMyB,EAA6B,CAACtQ,GACpC,KAAOA,EAASl1B,WAAape,EAAI,GAC/BszC,EAAWv/C,KAAKqE,MAAM6E,MAAM+C,GAC5B4jD,EAAapqD,QAAQ85C,GAKvB,MAAMuQ,EAAY9vD,KAAK2Z,MAAQ3Z,KAAKiM,EACpC,GAAI6jD,GAAa7jD,GAAK6jD,EAAY7jD,EAAI4jD,EAAa5uD,OACjD,SAGF,MAAM8uD,EAAiBF,EAAaA,EAAa5uD,OAAS,GAAG+P,mBACvDg/C,GAAkB,IAAAC,gCAA+BJ,EAAc7vD,KAAKytD,MAAOW,GAC3E8B,EAAaF,EAAgB/uD,OAAS4uD,EAAa5uD,OACzD,IAAIkvD,EAGFA,EAFiB,IAAfnwD,KAAK2Z,OAAe3Z,KAAKiM,IAAMjM,KAAKqE,MAAMpD,OAAS,EAEtCwS,KAAKG,IAAI,EAAG5T,KAAKiM,EAAIjM,KAAKqE,MAAM4pC,UAAYiiB,GAE5Cz8C,KAAKG,IAAI,EAAG5T,KAAKqE,MAAMpD,OAASjB,KAAKqE,MAAM4pC,UAAYiiB,GAIxE,MAAME,EAAyB,GAC/B,IAAK,IAAI/wD,EAAI,EAAGA,EAAI6wD,EAAY7wD,IAAK,CACnC,MAAMgxD,EAAUrwD,KAAKqlB,aAAa,EAAAC,mBAAmB,GACrD8qC,EAASnsD,KAAKosD,E,CAEZD,EAASnvD,OAAS,IACpB0uD,EAAS1rD,KAAK,CAGZjC,MAAOiK,EAAI4jD,EAAa5uD,OAAS2uD,EACjCQ,aAEFR,GAAiBQ,EAASnvD,QAE5B4uD,EAAa5rD,QAAQmsD,GAGrB,IAAIE,EAAgBN,EAAgB/uD,OAAS,EACzCsvD,EAAUP,EAAgBM,GACd,IAAZC,IACFD,IACAC,EAAUP,EAAgBM,IAE5B,IAAIE,EAAeX,EAAa5uD,OAASivD,EAAa,EAClDO,EAASV,EACb,KAAOS,GAAgB,GAAG,CACxB,MAAME,EAAcj9C,KAAKC,IAAI+8C,EAAQF,GACrC,QAAoC1lD,IAAhCglD,EAAaS,GAGf,MASF,GAPAT,EAAaS,GAAeK,cAAcd,EAAaW,GAAeC,EAASC,EAAaH,EAAUG,EAAaA,GAAa,GAChIH,GAAWG,EACK,IAAZH,IACFD,IACAC,EAAUP,EAAgBM,IAE5BG,GAAUC,EACK,IAAXD,EAAc,CAChBD,IACA,MAAMI,EAAoBn9C,KAAKG,IAAI48C,EAAc,GACjDC,GAAS,IAAAI,6BAA4BhB,EAAce,EAAmB5wD,KAAKytD,M,EAK/E,IAAK,IAAIpuD,EAAI,EAAGA,EAAIwwD,EAAa5uD,OAAQ5B,IACnC2wD,EAAgB3wD,GAAK+uD,GACvByB,EAAaxwD,GAAGyxD,QAAQd,EAAgB3wD,GAAIivD,GAKhD,IAAIoB,EAAsBQ,EAAaC,EACvC,KAAOT,KAAwB,GACV,IAAf1vD,KAAK2Z,MACH3Z,KAAKiM,EAAIoiD,EAAU,GACrBruD,KAAKiM,IACLjM,KAAKqE,MAAMgB,QAEXrF,KAAK2Z,QACL3Z,KAAKyE,SAIHzE,KAAK2Z,MAAQlG,KAAKC,IAAI1T,KAAKqE,MAAM4pC,UAAWjuC,KAAKqE,MAAMpD,OAAS2uD,GAAiBvB,IAC/EruD,KAAK2Z,QAAU3Z,KAAKyE,OACtBzE,KAAKyE,QAEPzE,KAAK2Z,SAIX3Z,KAAKonD,OAAS3zC,KAAKC,IAAI1T,KAAKonD,OAAS8I,EAAYlwD,KAAK2Z,MAAQ00C,EAAU,E,CAM1E,GAAIsB,EAAS1uD,OAAS,EAAG,CAGvB,MAAM8vD,EAA+B,GAG/BC,EAA8B,GACpC,IAAK,IAAI3xD,EAAI,EAAGA,EAAIW,KAAKqE,MAAMpD,OAAQ5B,IACrC2xD,EAAc/sD,KAAKjE,KAAKqE,MAAM6E,IAAI7J,IAEpC,MAAM4xD,EAAsBjxD,KAAKqE,MAAMpD,OAEvC,IAAIiwD,EAAoBD,EAAsB,EAC1CE,EAAoB,EACpBC,EAAezB,EAASwB,GAC5BnxD,KAAKqE,MAAMpD,OAASwS,KAAKC,IAAI1T,KAAKqE,MAAM4pC,UAAWjuC,KAAKqE,MAAMpD,OAAS2uD,GACvE,IAAIyB,EAAqB,EACzB,IAAK,IAAIhyD,EAAIoU,KAAKC,IAAI1T,KAAKqE,MAAM4pC,UAAY,EAAGgjB,EAAsBrB,EAAgB,GAAIvwD,GAAK,EAAGA,IAChG,GAAI+xD,GAAgBA,EAAapvD,MAAQkvD,EAAoBG,EAAoB,CAE/E,IAAK,IAAIC,EAAQF,EAAahB,SAASnvD,OAAS,EAAGqwD,GAAS,EAAGA,IAC7DtxD,KAAKqE,MAAM2E,IAAI3J,IAAK+xD,EAAahB,SAASkB,IAE5CjyD,IAGA0xD,EAAa9sD,KAAK,CAChB6J,MAAOojD,EAAoB,EAC3BrzC,OAAQuzC,EAAahB,SAASnvD,SAGhCowD,GAAsBD,EAAahB,SAASnvD,OAC5CmwD,EAAezB,IAAWwB,E,MAE1BnxD,KAAKqE,MAAM2E,IAAI3J,EAAG2xD,EAAcE,MAKpC,IAAIK,EAAqB,EACzB,IAAK,IAAIlyD,EAAI0xD,EAAa9vD,OAAS,EAAG5B,GAAK,EAAGA,IAC5C0xD,EAAa1xD,GAAGyO,OAASyjD,EACzBvxD,KAAKqE,MAAMqpC,gBAAgBh+B,KAAKqhD,EAAa1xD,IAC7CkyD,GAAsBR,EAAa1xD,GAAGwe,OAExC,MAAM4wC,EAAeh7C,KAAKG,IAAI,EAAGq9C,EAAsBrB,EAAgB5vD,KAAKqE,MAAM4pC,WAC9EwgB,EAAe,GACjBzuD,KAAKqE,MAAMupC,cAAcl+B,KAAK++C,E,CAGpC,CAYO,2BAAAjqD,CAA4BgtD,EAAmBC,EAAoB1+B,EAAmB,EAAGC,GAC9F,MAAMriB,EAAO3Q,KAAKqE,MAAM6E,IAAIsoD,GAC5B,OAAK7gD,EAGEA,EAAK2Z,kBAAkBmnC,EAAW1+B,EAAUC,GAF1C,EAGX,CAEO,sBAAA8W,CAAuB79B,GAC5B,IAAI89B,EAAQ99B,EACR+9B,EAAO/9B,EAEX,KAAO89B,EAAQ,GAAK/pC,KAAKqE,MAAM6E,IAAI6gC,GAAQ1f,WACzC0f,IAGF,KAAOC,EAAO,EAAIhqC,KAAKqE,MAAMpD,QAAUjB,KAAKqE,MAAM6E,IAAI8gC,EAAO,GAAI3f,WAC/D2f,IAEF,MAAO,CAAED,QAAOC,OAClB,CAMO,aAAA4jB,CAAcvuD,GAUnB,IATIA,QACGW,KAAKqkD,KAAKhlD,KACbA,EAAIW,KAAKskD,SAASjlD,KAGpBW,KAAKqkD,KAAO,CAAC,EACbhlD,EAAI,GAGCA,EAAIW,KAAKytD,MAAOpuD,GAAKW,KAAKwQ,gBAAgBrJ,WAAWuqD,aAC1D1xD,KAAKqkD,KAAKhlD,IAAK,CAEnB,CAMO,QAAAilD,CAASt4C,GAId,IAHIA,UACFA,EAAIhM,KAAKgM,IAEHhM,KAAKqkD,OAAOr4C,IAAMA,EAAI,IAC9B,OAAOA,GAAKhM,KAAKytD,MAAQztD,KAAKytD,MAAQ,EAAIzhD,EAAI,EAAI,EAAIA,CACxD,CAMO,QAAA83C,CAAS93C,GAId,IAHIA,UACFA,EAAIhM,KAAKgM,IAEHhM,KAAKqkD,OAAOr4C,IAAMA,EAAIhM,KAAKytD,QACnC,OAAOzhD,GAAKhM,KAAKytD,MAAQztD,KAAKytD,MAAQ,EAAIzhD,EAAI,EAAI,EAAIA,CACxD,CAMO,YAAA44C,CAAa34C,GAClBjM,KAAKstD,aAAc,EACnB,IAAK,IAAIjuD,EAAI,EAAGA,EAAIW,KAAK4iB,QAAQ3hB,OAAQ5B,IACnCW,KAAK4iB,QAAQvjB,GAAGsR,OAAS1E,IAC3BjM,KAAK4iB,QAAQvjB,GAAGsK,UAChB3J,KAAK4iB,QAAQzX,OAAO9L,IAAK,IAG7BW,KAAKstD,aAAc,CACrB,CAKO,eAAAloC,GACLplB,KAAKstD,aAAc,EACnB,IAAK,IAAIjuD,EAAI,EAAGA,EAAIW,KAAK4iB,QAAQ3hB,OAAQ5B,IACvCW,KAAK4iB,QAAQvjB,GAAGsK,UAChB3J,KAAK4iB,QAAQzX,OAAO9L,IAAK,GAE3BW,KAAKstD,aAAc,CACrB,CAEO,SAAAvqC,CAAU9W,GACf,MAAM+f,EAAS,IAAI,EAAA2lC,OAAO1lD,GA0B1B,OAzBAjM,KAAK4iB,QAAQ3e,KAAK+nB,GAClBA,EAAO3qB,SAASrB,KAAKqE,MAAMwhC,QAAOhoB,IAChCmO,EAAOrb,MAAQkN,EAEXmO,EAAOrb,KAAO,GAChBqb,EAAOriB,S,KAGXqiB,EAAO3qB,SAASrB,KAAKqE,MAAMspC,UAASnjC,IAC9BwhB,EAAOrb,MAAQnG,EAAMsD,QACvBke,EAAOrb,MAAQnG,EAAMqT,O,KAGzBmO,EAAO3qB,SAASrB,KAAKqE,MAAMopC,UAASjjC,IAE9BwhB,EAAOrb,MAAQnG,EAAMsD,OAASke,EAAOrb,KAAOnG,EAAMsD,MAAQtD,EAAMqT,QAClEmO,EAAOriB,UAILqiB,EAAOrb,KAAOnG,EAAMsD,QACtBke,EAAOrb,MAAQnG,EAAMqT,O,KAGzBmO,EAAO3qB,SAAS2qB,EAAOG,WAAU,IAAMnsB,KAAK4xD,cAAc5lC,MACnDA,CACT,CAEQ,aAAA4lC,CAAc5lC,GACfhsB,KAAKstD,aACRttD,KAAK4iB,QAAQzX,OAAOnL,KAAK4iB,QAAQ1X,QAAQ8gB,GAAS,EAEtD,E,0GCtoBF,eACA,SACA,SACA,UA4Ba,EAAA1G,kBAAoBtW,OAAOw7B,OAAO,IAAI,EAAAlP,eAGnD,IAAIu2B,EAAc,EAoBlB,MAAa/D,EAMX,WAAAruD,CAAYmO,EAAckkD,EAAiCznC,GAAqB,GAArB,KAAAA,UAAAA,EAJjD,KAAA0nC,UAAuC,CAAC,EACxC,KAAAC,eAAgE,CAAC,EAIzEhyD,KAAKmpD,MAAQ,IAAIxQ,YA9CH,EA8Ce/qC,GAC7B,MAAMzH,EAAO2rD,GAAgB,EAAAhhD,SAASo8C,aAAa,CAAC,EAAG,EAAAC,eAAgB,EAAA5J,gBAAiB,EAAAD,iBACxF,IAAK,IAAIjkD,EAAI,EAAGA,EAAIuO,IAAQvO,EAC1BW,KAAK8wD,QAAQzxD,EAAG8G,GAElBnG,KAAKiB,OAAS2M,CAChB,CAMO,GAAA1E,CAAI4E,GACT,MAAM2yB,EAAUzgC,KAAKmpD,MA3DP,EA2Dar7C,EAAoB,GACzCgxB,EAAe,QAAV2B,EACX,MAAO,CACLzgC,KAAKmpD,MA9DO,EA8DDr7C,EAAoB,GACpB,QAAV2yB,EACGzgC,KAAK+xD,UAAUjkD,GACf,GAAO,IAAAm1C,qBAAoBnkB,GAAM,GACrC2B,GAAW,GACA,QAAVA,EACGzgC,KAAK+xD,UAAUjkD,GAAOsW,WAAWpkB,KAAK+xD,UAAUjkD,GAAO7M,OAAS,GAChE69B,EAER,CAMO,GAAA91B,CAAI8E,EAAexG,GACxBtH,KAAKmpD,MA9ES,EA8EHr7C,EAAoB,GAAWxG,EAAM,EAAA2qD,sBAC5C3qD,EAAM,EAAA4qD,sBAAsBjxD,OAAS,GACvCjB,KAAK+xD,UAAUjkD,GAASxG,EAAM,GAC9BtH,KAAKmpD,MAjFO,EAiFDr7C,EAAoB,GAAwB,QAARA,EAAoCxG,EAAM,EAAA6qD,wBAA0B,IAEnHnyD,KAAKmpD,MAnFO,EAmFDr7C,EAAoB,GAAgBxG,EAAM,EAAA4qD,sBAAsB9tC,WAAW,GAAM9c,EAAM,EAAA6qD,wBAA0B,EAEhI,CAMO,QAAAp4C,CAASjM,GACd,OAAO9N,KAAKmpD,MA5FE,EA4FIr7C,EAAoB,IAAiB,EACzD,CAGO,QAAAg6B,CAASh6B,GACd,OAAsD,SAA/C9N,KAAKmpD,MAjGE,EAiGIr7C,EAAoB,EACxC,CAGO,KAAA0zB,CAAM1zB,GACX,OAAO9N,KAAKmpD,MAtGE,EAsGIr7C,EAAoB,EACxC,CAGO,KAAA4zB,CAAM5zB,GACX,OAAO9N,KAAKmpD,MA3GE,EA2GIr7C,EAAoB,EACxC,CAOO,UAAAsD,CAAWtD,GAChB,OAAsD,QAA/C9N,KAAKmpD,MApHE,EAoHIr7C,EAAoB,EACxC,CAOO,YAAAw7B,CAAax7B,GAClB,MAAM2yB,EAAUzgC,KAAKmpD,MA7HP,EA6Har7C,EAAoB,GAC/C,OAAc,QAAV2yB,EACKzgC,KAAK+xD,UAAUjkD,GAAOsW,WAAWpkB,KAAK+xD,UAAUjkD,GAAO7M,OAAS,GAExD,QAAVw/B,CACT,CAGO,UAAAE,CAAW7yB,GAChB,OAAsD,QAA/C9N,KAAKmpD,MAtIE,EAsIIr7C,EAAoB,EACxC,CAGO,SAAAw0B,CAAUx0B,GACf,MAAM2yB,EAAUzgC,KAAKmpD,MA3IP,EA2Iar7C,EAAoB,GAC/C,OAAc,QAAV2yB,EACKzgC,KAAK+xD,UAAUjkD,GAEV,QAAV2yB,GACK,IAAAwiB,qBAA8B,QAAVxiB,GAGtB,EACT,CAGO,WAAAsoB,CAAYj7C,GACjB,OAAiD,UAA1C9N,KAAKmpD,MAxJE,EAwJIr7C,EAAoB,EACxC,CAMO,QAAAuD,CAASvD,EAAe3H,GAW7B,OAVA0rD,EAhKc,EAgKA/jD,EACd3H,EAAKs6B,QAAUzgC,KAAKmpD,MAAM0I,EAAc,GACxC1rD,EAAK4C,GAAK/I,KAAKmpD,MAAM0I,EAAc,GACnC1rD,EAAK2C,GAAK9I,KAAKmpD,MAAM0I,EAAc,GAChB,QAAf1rD,EAAKs6B,UACPt6B,EAAKu6B,aAAe1gC,KAAK+xD,UAAUjkD,IAEvB,UAAV3H,EAAK2C,KACP3C,EAAKoL,SAAWvR,KAAKgyD,eAAelkD,IAE/B3H,CACT,CAKO,OAAA2qD,CAAQhjD,EAAe3H,GACT,QAAfA,EAAKs6B,UACPzgC,KAAK+xD,UAAUjkD,GAAS3H,EAAKu6B,cAEjB,UAAVv6B,EAAK2C,KACP9I,KAAKgyD,eAAelkD,GAAS3H,EAAKoL,UAEpCvR,KAAKmpD,MAvLS,EAuLHr7C,EAAoB,GAAgB3H,EAAKs6B,QACpDzgC,KAAKmpD,MAxLS,EAwLHr7C,EAAoB,GAAW3H,EAAK4C,GAC/C/I,KAAKmpD,MAzLS,EAyLHr7C,EAAoB,GAAW3H,EAAK2C,EACjD,CAOO,oBAAAg6C,CAAqBh1C,EAAeskD,EAAmB9rD,EAAeyC,EAAYD,EAAYupD,GAC1F,UAALvpD,IACF9I,KAAKgyD,eAAelkD,GAASukD,GAE/BryD,KAAKmpD,MArMS,EAqMHr7C,EAAoB,GAAgBskD,EAAa9rD,GAAS,GACrEtG,KAAKmpD,MAtMS,EAsMHr7C,EAAoB,GAAW/E,EAC1C/I,KAAKmpD,MAvMS,EAuMHr7C,EAAoB,GAAWhF,CAC5C,CAQO,kBAAA06C,CAAmB11C,EAAeskD,GACvC,IAAI3xB,EAAUzgC,KAAKmpD,MAjNL,EAiNWr7C,EAAoB,GAC/B,QAAV2yB,EAEFzgC,KAAK+xD,UAAUjkD,KAAU,IAAAm1C,qBAAoBmP,IAE/B,QAAV3xB,GAIFzgC,KAAK+xD,UAAUjkD,IAAS,IAAAm1C,qBAA8B,QAAVxiB,IAAoC,IAAAwiB,qBAAoBmP,GACpG3xB,IAAW,QACXA,GAAW,SAIXA,EAAU2xB,EAAa,GAAK,GAE9BpyD,KAAKmpD,MAlOO,EAkODr7C,EAAoB,GAAgB2yB,EAEnD,CAEO,WAAA2iB,CAAY17C,EAAaivC,EAAWmb,EAAyBjd,GAQlE,IAPAntC,GAAO1H,KAAKiB,SAG0B,IAA3BjB,KAAK+Z,SAASrS,EAAM,IAC7B1H,KAAK8iD,qBAAqBp7C,EAAM,EAAG,EAAG,GAAGmtC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,eAG1GpV,EAAI32C,KAAKiB,OAASyG,EAAK,CACzB,MAAMvB,EAAO,IAAI,EAAA2K,SACjB,IAAK,IAAIzR,EAAIW,KAAKiB,OAASyG,EAAMivC,EAAI,EAAGt3C,GAAK,IAAKA,EAChDW,KAAK8wD,QAAQppD,EAAMivC,EAAIt3C,EAAGW,KAAKqR,SAAS3J,EAAMrI,EAAG8G,IAEnD,IAAK,IAAI9G,EAAI,EAAGA,EAAIs3C,IAAKt3C,EACvBW,KAAK8wD,QAAQppD,EAAMrI,EAAGyyD,E,MAGxB,IAAK,IAAIzyD,EAAIqI,EAAKrI,EAAIW,KAAKiB,SAAU5B,EACnCW,KAAK8wD,QAAQzxD,EAAGyyD,GAKmB,IAAnC9xD,KAAK+Z,SAAS/Z,KAAKiB,OAAS,IAC9BjB,KAAK8iD,qBAAqB9iD,KAAKiB,OAAS,EAAG,EAAG,GAAG4zC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,cAExH,CAEO,WAAA/G,CAAYt9C,EAAaivC,EAAWmb,EAAyBjd,GAElE,GADAntC,GAAO1H,KAAKiB,OACR01C,EAAI32C,KAAKiB,OAASyG,EAAK,CACzB,MAAMvB,EAAO,IAAI,EAAA2K,SACjB,IAAK,IAAIzR,EAAI,EAAGA,EAAIW,KAAKiB,OAASyG,EAAMivC,IAAKt3C,EAC3CW,KAAK8wD,QAAQppD,EAAMrI,EAAGW,KAAKqR,SAAS3J,EAAMivC,EAAIt3C,EAAG8G,IAEnD,IAAK,IAAI9G,EAAIW,KAAKiB,OAAS01C,EAAGt3C,EAAIW,KAAKiB,SAAU5B,EAC/CW,KAAK8wD,QAAQzxD,EAAGyyD,E,MAGlB,IAAK,IAAIzyD,EAAIqI,EAAKrI,EAAIW,KAAKiB,SAAU5B,EACnCW,KAAK8wD,QAAQzxD,EAAGyyD,GAOhBpqD,GAAkC,IAA3B1H,KAAK+Z,SAASrS,EAAM,IAC7B1H,KAAK8iD,qBAAqBp7C,EAAM,EAAG,EAAG,GAAGmtC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,eAEnF,IAAvB/rD,KAAK+Z,SAASrS,IAAe1H,KAAKoR,WAAW1J,IAC/C1H,KAAK8iD,qBAAqBp7C,EAAK,EAAG,GAAGmtC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,cAE5G,CAEO,YAAArH,CAAa1iD,EAAeC,EAAa6vD,EAAyBjd,EAA4B4P,GAA0B,GAE7H,GAAIA,EAOF,IANIziD,GAAsC,IAA7BhC,KAAK+Z,SAAS/X,EAAQ,KAAahC,KAAK+oD,YAAY/mD,EAAQ,IACvEhC,KAAK8iD,qBAAqB9gD,EAAQ,EAAG,EAAG,GAAG6yC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,eAE5G9pD,EAAMjC,KAAKiB,QAAqC,IAA3BjB,KAAK+Z,SAAS9X,EAAM,KAAajC,KAAK+oD,YAAY9mD,IACzEjC,KAAK8iD,qBAAqB7gD,EAAK,EAAG,GAAG4yC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,eAEnG/pD,EAAQC,GAAQD,EAAQhC,KAAKiB,QAC7BjB,KAAK+oD,YAAY/mD,IACpBhC,KAAK8wD,QAAQ9uD,EAAO8vD,GAEtB9vD,SAcJ,IARIA,GAAsC,IAA7BhC,KAAK+Z,SAAS/X,EAAQ,IACjChC,KAAK8iD,qBAAqB9gD,EAAQ,EAAG,EAAG,GAAG6yC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,eAG5G9pD,EAAMjC,KAAKiB,QAAqC,IAA3BjB,KAAK+Z,SAAS9X,EAAM,IAC3CjC,KAAK8iD,qBAAqB7gD,EAAK,EAAG,GAAG4yC,aAAS,EAATA,EAAW9rC,KAAM,GAAG8rC,aAAS,EAATA,EAAW/rC,KAAM,GAAG+rC,aAAS,EAATA,EAAWtjC,WAAY,IAAI,EAAAw6C,eAGnG/pD,EAAQC,GAAQD,EAAQhC,KAAKiB,QAClCjB,KAAK8wD,QAAQ9uD,IAAS8vD,EAE1B,CASO,MAAA50C,CAAOtP,EAAckkD,GAC1B,GAAIlkD,IAAS5N,KAAKiB,OAChB,OAA2B,EAApBjB,KAAKmpD,MAAMloD,OAhTE,EAgT+BjB,KAAKmpD,MAAMhlD,OAAOmuD,WAEvE,MAAMC,EAxUQ,EAwUM3kD,EACpB,GAAIA,EAAO5N,KAAKiB,OAAQ,CACtB,GAAIjB,KAAKmpD,MAAMhlD,OAAOmuD,YAA4B,EAAdC,EAElCvyD,KAAKmpD,MAAQ,IAAIxQ,YAAY34C,KAAKmpD,MAAMhlD,OAAQ,EAAGouD,OAC9C,CAEL,MAAM3wC,EAAO,IAAI+2B,YAAY4Z,GAC7B3wC,EAAK5Y,IAAIhJ,KAAKmpD,OACdnpD,KAAKmpD,MAAQvnC,C,CAEf,IAAK,IAAIviB,EAAIW,KAAKiB,OAAQ5B,EAAIuO,IAAQvO,EACpCW,KAAK8wD,QAAQzxD,EAAGyyD,E,KAEb,CAEL9xD,KAAKmpD,MAAQnpD,KAAKmpD,MAAM/G,SAAS,EAAGmQ,GAEpC,MAAMC,EAAOxjD,OAAOwjD,KAAKxyD,KAAK+xD,WAC9B,IAAK,IAAI1yD,EAAI,EAAGA,EAAImzD,EAAKvxD,OAAQ5B,IAAK,CACpC,MAAMuD,EAAM6uB,SAAS+gC,EAAKnzD,GAAI,IAC1BuD,GAAOgL,UACF5N,KAAK+xD,UAAUnvD,E,CAI1B,MAAM6vD,EAAUzjD,OAAOwjD,KAAKxyD,KAAKgyD,gBACjC,IAAK,IAAI3yD,EAAI,EAAGA,EAAIozD,EAAQxxD,OAAQ5B,IAAK,CACvC,MAAMuD,EAAM6uB,SAASghC,EAAQpzD,GAAI,IAC7BuD,GAAOgL,UACF5N,KAAKgyD,eAAepvD,E,EAKjC,OADA5C,KAAKiB,OAAS2M,EACO,EAAd2kD,EArVe,EAqVuBvyD,KAAKmpD,MAAMhlD,OAAOmuD,UACjE,CAQO,aAAAvD,GACL,GAAwB,EAApB/uD,KAAKmpD,MAAMloD,OA/VO,EA+V0BjB,KAAKmpD,MAAMhlD,OAAOmuD,WAAY,CAC5E,MAAM1wC,EAAO,IAAI+2B,YAAY34C,KAAKmpD,MAAMloD,QAGxC,OAFA2gB,EAAK5Y,IAAIhJ,KAAKmpD,OACdnpD,KAAKmpD,MAAQvnC,EACN,C,CAET,OAAO,CACT,CAGO,IAAA8c,CAAKozB,EAAyBrN,GAA0B,GAE7D,GAAIA,EACF,IAAK,IAAIplD,EAAI,EAAGA,EAAIW,KAAKiB,SAAU5B,EAC5BW,KAAK+oD,YAAY1pD,IACpBW,KAAK8wD,QAAQzxD,EAAGyyD,OAHtB,CAQA9xD,KAAK+xD,UAAY,CAAC,EAClB/xD,KAAKgyD,eAAiB,CAAC,EACvB,IAAK,IAAI3yD,EAAI,EAAGA,EAAIW,KAAKiB,SAAU5B,EACjCW,KAAK8wD,QAAQzxD,EAAGyyD,E,CAEpB,CAGO,QAAAY,CAAS/hD,GACV3Q,KAAKiB,SAAW0P,EAAK1P,OACvBjB,KAAKmpD,MAAQ,IAAIxQ,YAAYhoC,EAAKw4C,OAGlCnpD,KAAKmpD,MAAMngD,IAAI2H,EAAKw4C,OAEtBnpD,KAAKiB,OAAS0P,EAAK1P,OACnBjB,KAAK+xD,UAAY,CAAC,EAClB,IAAK,MAAMryC,KAAM/O,EAAKohD,UACpB/xD,KAAK+xD,UAAUryC,GAAM/O,EAAKohD,UAAUryC,GAEtC1f,KAAKgyD,eAAiB,CAAC,EACvB,IAAK,MAAMtyC,KAAM/O,EAAKqhD,eACpBhyD,KAAKgyD,eAAetyC,GAAM/O,EAAKqhD,eAAetyC,GAEhD1f,KAAKqqB,UAAY1Z,EAAK0Z,SACxB,CAGO,KAAAykB,GACL,MAAMuhB,EAAU,IAAIvC,EAAW,GAC/BuC,EAAQlH,MAAQ,IAAIxQ,YAAY34C,KAAKmpD,OACrCkH,EAAQpvD,OAASjB,KAAKiB,OACtB,IAAK,MAAMye,KAAM1f,KAAK+xD,UACpB1B,EAAQ0B,UAAUryC,GAAM1f,KAAK+xD,UAAUryC,GAEzC,IAAK,MAAMA,KAAM1f,KAAKgyD,eACpB3B,EAAQ2B,eAAetyC,GAAM1f,KAAKgyD,eAAetyC,GAGnD,OADA2wC,EAAQhmC,UAAYrqB,KAAKqqB,UAClBgmC,CACT,CAEO,gBAAAr/C,GACL,IAAK,IAAI3R,EAAIW,KAAKiB,OAAS,EAAG5B,GAAK,IAAKA,EACtC,GAAgD,QAA3CW,KAAKmpD,MArbE,EAqbI9pD,EAAgB,GAC9B,OAAOA,GAAKW,KAAKmpD,MAtbP,EAsba9pD,EAAgB,IAAiB,IAG5D,OAAO,CACT,CAEO,oBAAA45B,GACL,IAAK,IAAI55B,EAAIW,KAAKiB,OAAS,EAAG5B,GAAK,IAAKA,EACtC,GAAgD,QAA3CW,KAAKmpD,MA9bE,EA8bI9pD,EAAgB,IAAoF,SAAtCW,KAAKmpD,MA9bvE,EA8b6E9pD,EAAgB,GACvG,OAAOA,GAAKW,KAAKmpD,MA/bP,EA+ba9pD,EAAgB,IAAiB,IAG5D,OAAO,CACT,CAEO,aAAAsxD,CAAcgC,EAAiBlC,EAAgBF,EAAiBtvD,EAAgB2xD,GACrF,MAAMC,EAAUF,EAAIxJ,MACpB,GAAIyJ,EACF,IAAK,IAAIzsD,EAAOlF,EAAS,EAAGkF,GAAQ,EAAGA,IAAQ,CAC7C,IAAK,IAAI9G,EAAI,EAAGA,EAzcN,EAycqBA,IAC7BW,KAAKmpD,MA1cG,GA0cIoH,EAAUpqD,GAAoB9G,GAAKwzD,EA1cvC,GA0cgDpC,EAAStqD,GAAoB9G,GAElC,UAAjDwzD,EA5cM,GA4cGpC,EAAStqD,GAAoB,KACxCnG,KAAKgyD,eAAezB,EAAUpqD,GAAQwsD,EAAIX,eAAevB,EAAStqD,G,MAItE,IAAK,IAAIA,EAAO,EAAGA,EAAOlF,EAAQkF,IAAQ,CACxC,IAAK,IAAI9G,EAAI,EAAGA,EAldN,EAkdqBA,IAC7BW,KAAKmpD,MAndG,GAmdIoH,EAAUpqD,GAAoB9G,GAAKwzD,EAndvC,GAmdgDpC,EAAStqD,GAAoB9G,GAElC,UAAjDwzD,EArdM,GAqdGpC,EAAStqD,GAAoB,KACxCnG,KAAKgyD,eAAezB,EAAUpqD,GAAQwsD,EAAIX,eAAevB,EAAStqD,G,CAMxE,MAAM2sD,EAAkB9jD,OAAOwjD,KAAKG,EAAIZ,WACxC,IAAK,IAAI1yD,EAAI,EAAGA,EAAIyzD,EAAgB7xD,OAAQ5B,IAAK,CAC/C,MAAMuD,EAAM6uB,SAASqhC,EAAgBzzD,GAAI,IACrCuD,GAAO6tD,IACTzwD,KAAK+xD,UAAUnvD,EAAM6tD,EAASF,GAAWoC,EAAIZ,UAAUnvD,G,CAG7D,CAEO,iBAAA0nB,CAAkBmnC,GAAqB,EAAO1+B,EAAmB,EAAGC,EAAiBhzB,KAAKiB,QAC3FwwD,IACFz+B,EAASvf,KAAKC,IAAIsf,EAAQhzB,KAAKgR,qBAEjC,IAAIJ,EAAS,GACb,KAAOmiB,EAAWC,GAAQ,CACxB,MAAMyN,EAAUzgC,KAAKmpD,MA3eT,EA2eep2B,EAAuB,GAC5C+L,EAAe,QAAV2B,EACX7vB,GAAqB,QAAV6vB,EAAsCzgC,KAAK+xD,UAAUh/B,GAAY,GAAO,IAAAkwB,qBAAoBnkB,GAAM,EAAAvE,qBAC7GxH,GAAa0N,GAAW,IAAwB,C,CAElD,OAAO7vB,CACT,EA1cF,c,wFCrDA,0BAA+BlD,EAAqBqlD,GAClD,GAAIrlD,EAAM1L,MAAMiK,EAAIyB,EAAMzL,IAAIgK,EAC5B,MAAM,IAAIvK,MAAM,qBAAqBgM,EAAMzL,IAAI+J,MAAM0B,EAAMzL,IAAIgK,8BAA8ByB,EAAM1L,MAAMgK,MAAM0B,EAAM1L,MAAMiK,MAE7H,OAAO8mD,GAAcrlD,EAAMzL,IAAIgK,EAAIyB,EAAM1L,MAAMiK,IAAMyB,EAAMzL,IAAI+J,EAAI0B,EAAM1L,MAAMgK,EAAI,EACrF,C,eCoMA,SAAgB6kD,EAA4BxsD,EAAqBhF,EAAWuO,GAE1E,GAAIvO,IAAMgF,EAAMpD,OAAS,EACvB,OAAOoD,EAAMhF,GAAG2R,mBAKlB,MAAMgiD,GAAe3uD,EAAMhF,GAAG+R,WAAWxD,EAAO,IAAuC,IAAhCvJ,EAAMhF,GAAG0a,SAASnM,EAAO,GAC1EqlD,EAA2D,IAA7B5uD,EAAMhF,EAAI,GAAG0a,SAAS,GAC1D,OAAIi5C,GAAcC,EACTrlD,EAAO,EAETA,CACT,C,iNAvMA,wCAA6CvJ,EAAkC6uD,EAAiB9E,EAAiB+E,EAAyB7E,GAGxI,MAAMY,EAAqB,GAE3B,IAAK,IAAIjjD,EAAI,EAAGA,EAAI5H,EAAMpD,OAAS,EAAGgL,IAAK,CAEzC,IAAI5M,EAAI4M,EACJszC,EAAWl7C,EAAM6E,MAAM7J,GAC3B,IAAKkgD,EAASl1B,UACZ,SAIF,MAAMwlC,EAA6B,CAACxrD,EAAM6E,IAAI+C,IAC9C,KAAO5M,EAAIgF,EAAMpD,QAAUs+C,EAASl1B,WAClCwlC,EAAa5rD,KAAKs7C,GAClBA,EAAWl7C,EAAM6E,MAAM7J,GAKzB,GAAI8zD,GAAmBlnD,GAAKknD,EAAkB9zD,EAAG,CAC/C4M,GAAK4jD,EAAa5uD,OAAS,EAC3B,Q,CAIF,IAAIqvD,EAAgB,EAChBC,EAAUM,EAA4BhB,EAAcS,EAAe4C,GACnE1C,EAAe,EACfC,EAAS,EACb,KAAOD,EAAeX,EAAa5uD,QAAQ,CACzC,MAAMmyD,EAAuBvC,EAA4BhB,EAAcW,EAAc0C,GAC/EG,EAAoBD,EAAuB3C,EAC3C6C,EAAqBlF,EAAUmC,EAC/BG,EAAcj9C,KAAKC,IAAI2/C,EAAmBC,GAEhDzD,EAAaS,GAAeK,cAAcd,EAAaW,GAAeC,EAAQF,EAASG,GAAa,GAEpGH,GAAWG,EACPH,IAAYnC,IACdkC,IACAC,EAAU,GAEZE,GAAUC,EACND,IAAW2C,IACb5C,IACAC,EAAS,GAIK,IAAZF,GAAmC,IAAlBD,GAC2C,IAA1DT,EAAaS,EAAgB,GAAGv2C,SAASq0C,EAAU,KACrDyB,EAAaS,GAAeK,cAAcd,EAAaS,EAAgB,GAAIlC,EAAU,EAAGmC,IAAW,GAAG,GAEtGV,EAAaS,EAAgB,GAAGQ,QAAQ1C,EAAU,EAAGE,G,CAM3DuB,EAAaS,GAAe5L,aAAa6L,EAASnC,EAASE,GAG3D,IAAIiF,EAAgB,EACpB,IAAK,IAAIl0D,EAAIwwD,EAAa5uD,OAAS,EAAG5B,EAAI,IACpCA,EAAIixD,GAAwD,IAAvCT,EAAaxwD,GAAG2R,oBADE3R,IAEzCk0D,IAMAA,EAAgB,IAClBrE,EAASjrD,KAAKgI,EAAI4jD,EAAa5uD,OAASsyD,GACxCrE,EAASjrD,KAAKsvD,IAGhBtnD,GAAK4jD,EAAa5uD,OAAS,C,CAE7B,OAAOiuD,CACT,EAOA,uCAA4C7qD,EAAkC6qD,GAC5E,MAAMK,EAAmB,GAEzB,IAAIiE,EAAoB,EACpBC,EAAoBvE,EAASsE,GAC7BE,EAAoB,EACxB,IAAK,IAAIr0D,EAAI,EAAGA,EAAIgF,EAAMpD,OAAQ5B,IAChC,GAAIo0D,IAAsBp0D,EAAG,CAC3B,MAAMk0D,EAAgBrE,IAAWsE,GAGjCnvD,EAAMmpC,gBAAgB99B,KAAK,CACzB5B,MAAOzO,EAAIq0D,EACX71C,OAAQ01C,IAGVl0D,GAAKk0D,EAAgB,EACrBG,GAAqBH,EACrBE,EAAoBvE,IAAWsE,E,MAE/BjE,EAAOtrD,KAAK5E,GAGhB,MAAO,CACLkwD,SACAE,aAAciE,EAElB,EAQA,sCAA2CrvD,EAAkCsvD,GAE3E,MAAMC,EAA+B,GACrC,IAAK,IAAIv0D,EAAI,EAAGA,EAAIs0D,EAAU1yD,OAAQ5B,IACpCu0D,EAAe3vD,KAAKI,EAAM6E,IAAIyqD,EAAUt0D,KAI1C,IAAK,IAAIA,EAAI,EAAGA,EAAIu0D,EAAe3yD,OAAQ5B,IACzCgF,EAAM2E,IAAI3J,EAAGu0D,EAAev0D,IAE9BgF,EAAMpD,OAAS0yD,EAAU1yD,MAC3B,EAgBA,0CAA+C4uD,EAA4BqD,EAAiB9E,GAC1F,MAAMyF,EAA2B,GAC3BC,EAAcjE,EAAa3iD,KAAI,CAACg6C,EAAG7nD,IAAMwxD,EAA4BhB,EAAcxwD,EAAG6zD,KAAUa,QAAO,CAAC1S,EAAG9qB,IAAM8qB,EAAI9qB,IAI3H,IAAIk6B,EAAS,EACTuD,EAAU,EACVC,EAAiB,EACrB,KAAOA,EAAiBH,GAAa,CACnC,GAAIA,EAAcG,EAAiB7F,EAAS,CAE1CyF,EAAe5vD,KAAK6vD,EAAcG,GAClC,K,CAEFxD,GAAUrC,EACV,MAAM8F,EAAmBrD,EAA4BhB,EAAcmE,EAASd,GACxEzC,EAASyD,IACXzD,GAAUyD,EACVF,KAEF,MAAMG,EAA8D,IAA/CtE,EAAamE,GAASj6C,SAAS02C,EAAS,GACzD0D,GACF1D,IAEF,MAAM1/C,EAAaojD,EAAe/F,EAAU,EAAIA,EAChDyF,EAAe5vD,KAAK8M,GACpBkjD,GAAkBljD,C,CAGpB,OAAO8iD,CACT,EAEA,+B,qFCzMA,gBACA,UAEA,SAMA,MAAaO,UAAkB,EAAA50D,WAW7B,WAAAC,CACmB+Q,EACAzG,GAEjBpK,QAHiB,KAAA6Q,gBAAAA,EACA,KAAAzG,eAAAA,EARF,KAAAsqD,kBAAoBr0D,KAAKqB,SAAS,IAAI,EAAAiJ,cACvC,KAAAwd,iBAAmB9nB,KAAKq0D,kBAAkB7pD,MAUxDxK,KAAKgX,QACLhX,KAAKqB,SAASrB,KAAKwQ,gBAAgB2O,uBAAuB,cAAc,IAAMnf,KAAKkd,OAAOld,KAAK+J,eAAe6D,KAAM5N,KAAK+J,eAAetJ,SACxIT,KAAKqB,SAASrB,KAAKwQ,gBAAgB2O,uBAAuB,gBAAgB,IAAMnf,KAAK4tD,kBACvF,CAEO,KAAA52C,GACLhX,KAAKs0D,QAAU,IAAI,EAAAC,QAAO,EAAMv0D,KAAKwQ,gBAAiBxQ,KAAK+J,gBAC3D/J,KAAKs0D,QAAQpG,mBAIbluD,KAAKw0D,KAAO,IAAI,EAAAD,QAAO,EAAOv0D,KAAKwQ,gBAAiBxQ,KAAK+J,gBACzD/J,KAAK6nB,cAAgB7nB,KAAKs0D,QAC1Bt0D,KAAKq0D,kBAAkB3kD,KAAK,CAC1BqY,aAAc/nB,KAAKs0D,QACnBG,eAAgBz0D,KAAKw0D,OAGvBx0D,KAAK4tD,eACP,CAKA,OAAWptC,GACT,OAAOxgB,KAAKw0D,IACd,CAKA,UAAW57C,GACT,OAAO5Y,KAAK6nB,aACd,CAKA,UAAWgH,GACT,OAAO7uB,KAAKs0D,OACd,CAKO,oBAAA7O,GACDzlD,KAAK6nB,gBAAkB7nB,KAAKs0D,UAGhCt0D,KAAKs0D,QAAQtoD,EAAIhM,KAAKw0D,KAAKxoD,EAC3BhM,KAAKs0D,QAAQroD,EAAIjM,KAAKw0D,KAAKvoD,EAI3BjM,KAAKw0D,KAAKpvC,kBACVplB,KAAKw0D,KAAKnrD,QACVrJ,KAAK6nB,cAAgB7nB,KAAKs0D,QAC1Bt0D,KAAKq0D,kBAAkB3kD,KAAK,CAC1BqY,aAAc/nB,KAAKs0D,QACnBG,eAAgBz0D,KAAKw0D,OAEzB,CAKO,iBAAAhP,CAAkB2I,GACnBnuD,KAAK6nB,gBAAkB7nB,KAAKw0D,OAKhCx0D,KAAKw0D,KAAKtG,iBAAiBC,GAC3BnuD,KAAKw0D,KAAKxoD,EAAIhM,KAAKs0D,QAAQtoD,EAC3BhM,KAAKw0D,KAAKvoD,EAAIjM,KAAKs0D,QAAQroD,EAC3BjM,KAAK6nB,cAAgB7nB,KAAKw0D,KAC1Bx0D,KAAKq0D,kBAAkB3kD,KAAK,CAC1BqY,aAAc/nB,KAAKw0D,KACnBC,eAAgBz0D,KAAKs0D,UAEzB,CAOO,MAAAp3C,CAAOkxC,EAAiBC,GAC7BruD,KAAKs0D,QAAQp3C,OAAOkxC,EAASC,GAC7BruD,KAAKw0D,KAAKt3C,OAAOkxC,EAASC,GAC1BruD,KAAK4tD,cAAcQ,EACrB,CAMO,aAAAR,CAAcvuD,GACnBW,KAAKs0D,QAAQ1G,cAAcvuD,GAC3BW,KAAKw0D,KAAK5G,cAAcvuD,EAC1B,EApHF,a,mFCVA,eACA,SACA,UAKA,MAAayR,UAAiB,EAAAwqB,cAA9B,c,oBAQS,KAAAmF,QAAU,EACV,KAAA13B,GAAK,EACL,KAAAD,GAAK,EACL,KAAAyI,SAA2B,IAAI,EAAAw6C,cAC/B,KAAArrB,aAAe,EAoExB,CA9ES,mBAAOwsB,CAAa5lD,GACzB,MAAMotD,EAAM,IAAI5jD,EAEhB,OADA4jD,EAAI9zB,gBAAgBt5B,GACbotD,CACT,CAQO,UAAA/zB,GACL,OAAsB,QAAf3gC,KAAKygC,OACd,CAEO,QAAA1mB,GACL,OAAO/Z,KAAKygC,SAAW,EACzB,CAEO,QAAAnG,GACL,OAAmB,QAAft6B,KAAKygC,QACAzgC,KAAK0gC,aAEK,QAAf1gC,KAAKygC,SACA,IAAAwiB,qBAAmC,QAAfjjD,KAAKygC,SAE3B,EACT,CAOO,OAAAxD,GACL,OAAQj9B,KAAK2gC,aACT3gC,KAAK0gC,aAAatc,WAAWpkB,KAAK0gC,aAAaz/B,OAAS,GACzC,QAAfjB,KAAKygC,OACX,CAEO,eAAAG,CAAgBt5B,GACrBtH,KAAK+I,GAAKzB,EAAM,EAAA2qD,sBAChBjyD,KAAK8I,GAAK,EACV,IAAI6rD,GAAW,EAEf,GAAIrtD,EAAM,EAAA4qD,sBAAsBjxD,OAAS,EACvC0zD,GAAW,OAER,GAA2C,IAAvCrtD,EAAM,EAAA4qD,sBAAsBjxD,OAAc,CACjD,MAAM45C,EAAOvzC,EAAM,EAAA4qD,sBAAsB9tC,WAAW,GAGpD,GAAI,OAAUy2B,GAAQA,GAAQ,MAAQ,CACpC,MAAM4M,EAASngD,EAAM,EAAA4qD,sBAAsB9tC,WAAW,GAClD,OAAUqjC,GAAUA,GAAU,MAChCznD,KAAKygC,QAA6B,MAAjBoa,EAAO,OAAkB4M,EAAS,MAAS,MAAYngD,EAAM,EAAA6qD,wBAA0B,GAGxGwC,GAAW,C,MAIbA,GAAW,C,MAIb30D,KAAKygC,QAAUn5B,EAAM,EAAA4qD,sBAAsB9tC,WAAW,GAAM9c,EAAM,EAAA6qD,wBAA0B,GAE1FwC,IACF30D,KAAK0gC,aAAep5B,EAAM,EAAA4qD,sBAC1BlyD,KAAKygC,QAAU,QAA4Bn5B,EAAM,EAAA6qD,wBAA0B,GAE/E,CAEO,aAAAtxB,GACL,MAAO,CAAC7gC,KAAK+I,GAAI/I,KAAKs6B,WAAYt6B,KAAK+Z,WAAY/Z,KAAKi9B,UAC1D,EA/EF,Y,0UCRa,EAAA23B,cAAgB,EAChB,EAAAC,aAAe,IAAa,EAAAD,eAAiB,EAC7C,EAAAE,YAAc,EAEd,EAAA7C,qBAAuB,EACvB,EAAAC,qBAAuB,EACvB,EAAAC,sBAAwB,EACxB,EAAAtG,qBAAuB,EAOvB,EAAAsB,eAAiB,GACjB,EAAA5J,gBAAkB,EAClB,EAAAD,eAAiB,EAOjB,EAAA/oB,qBAAuB,IACvB,EAAA8yB,sBAAwB,EACxB,EAAAvB,qBAAuB,E,kFCzBpC,gBACA,SAGA,MAAa6F,EAOX,MAAW1wB,GAAe,OAAOjhC,KAAK+0D,GAAK,CAK3C,WAAAt1D,CACSkR,GAAA,KAAAA,KAAAA,EAVF,KAAAqkD,YAAsB,EACZ,KAAAhM,aAA8B,GAE9B,KAAA+L,IAAcpD,EAAOsD,UAGrB,KAAAC,WAAal1D,KAAKqB,SAAS,IAAI,EAAAiJ,cAChC,KAAA6hB,UAAYnsB,KAAKk1D,WAAW1qD,KAK5C,CAEO,OAAAb,GACD3J,KAAKg1D,aAGTh1D,KAAKg1D,YAAa,EAClBh1D,KAAK2Q,MAAQ,EAEb3Q,KAAKk1D,WAAWxlD,QAChB,IAAAjB,cAAazO,KAAKgpD,cAClBhpD,KAAKgpD,aAAa/nD,OAAS,EAC7B,CAEO,QAAAI,CAAgC8zD,GAErC,OADAn1D,KAAKgpD,aAAa/kD,KAAKkxD,GAChBA,CACT,EAhCF,WACiB,EAAAF,QAAU,C,oGCEd,EAAApU,SAAoD,CAAC,EAKrD,EAAAwE,gBAAwC,EAAAxE,SAAY,EAYjE,EAAAA,SAAA,GAAgB,CACd,IAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,KAOP,EAAAA,SAAA,OAAgBh2C,EAOhB,EAAAg2C,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAAuU,EACA,EAAAvU,SAAA,GAAgB,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EACA,EAAAA,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,EACA,EAAAA,SAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAA,KAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,I,eCrPP,IAAiB5oC,EA2EAmnC,EAkEAhnC,E,+EA7IjB,SAAiBH,GAEF,EAAAo9C,IAAM,KAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAlxC,IAAM,IAEN,EAAAmxC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAArX,IAAM,IAEN,EAAAO,GAAM,KAEN,EAAAE,GAAM,KAEN,EAAAP,GAAM,KAEN,EAAAE,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAp6B,GAAM,KAEN,EAAA06B,GAAM,IAEN,EAAAE,GAAM,IAEN,EAAAyW,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAn+C,IAAM,IAEN,EAAAo+C,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAA5lC,IAAM,GACpB,CArED,CAAiB7Y,IAAE,KAAFA,EAAE,KA2EnB,SAAiBmnC,GAEF,EAAAuX,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAzX,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAyX,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAxX,IAAM,IAEN,EAAAyX,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,KAAO,IAEP,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAA9/C,GAAK,IAEL,EAAA+/C,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,GACpB,CAjED,CAAiBlZ,IAAE,KAAFA,EAAE,KAkEnB,SAAiBhnC,GACF,EAAAC,GAAK,GAAGJ,EAAGC,OACzB,CAFD,CAAiBE,IAAU,aAAVA,EAAU,I,iGC/I3B,gBAGMmgD,EAA2D,CAE/D,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KAGV,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,KAAM,KACZ,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAM,MAGd,iCACE/wD,EACAgxD,EACA50D,EACAggB,GAEA,MAAMhT,EAA0B,CAC9BrH,KAAM,EAGN0X,QAAQ,EAERre,SAAKiI,GAED4tD,GAAajxD,EAAGkZ,SAAW,EAAI,IAAMlZ,EAAGiZ,OAAS,EAAI,IAAMjZ,EAAG+Y,QAAU,EAAI,IAAM/Y,EAAG2c,QAAU,EAAI,GACzG,OAAQ3c,EAAGmd,SACT,KAAK,EACY,sBAAXnd,EAAG5E,IAEHgO,EAAOhO,IADL41D,EACW,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAGN,wBAAX1Q,EAAG5E,IAERgO,EAAOhO,IADL41D,EACW,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAGN,yBAAX1Q,EAAG5E,IAERgO,EAAOhO,IADL41D,EACW,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAGN,wBAAX1Q,EAAG5E,MAERgO,EAAOhO,IADL41D,EACW,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,MAG1B,MACF,KAAK,EAEH,GAAI1Q,EAAGiZ,OAAQ,CACb7P,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,EAAAD,GAAG6Y,IACzB,K,CAEFlgB,EAAOhO,IAAM,EAAAqV,GAAG6Y,IAChB,MACF,KAAK,EAEH,GAAItpB,EAAGkZ,SAAU,CACf9P,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,KACtB,K,CAEFtH,EAAOhO,IAAM,EAAAqV,GAAG6mC,GAChBluC,EAAOqQ,QAAS,EAChB,MACF,KAAK,GAEHrQ,EAAOhO,IAAM4E,EAAGiZ,OAAS,EAAAxI,GAAGC,IAAM,EAAAD,GAAGqM,GAAK,EAAArM,GAAGqM,GAC7C1T,EAAOqQ,QAAS,EAChB,MACF,KAAK,GAEHrQ,EAAOhO,IAAM,EAAAqV,GAAGC,IACZ1Q,EAAGiZ,SACL7P,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,EAAAD,GAAGC,KAE3BtH,EAAOqQ,QAAS,EAChB,MACF,KAAK,GAEH,GAAIzZ,EAAG2c,QACL,MAEEs0C,GACF7nD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAI5C7nD,EAAOhO,MAAQ,EAAAqV,GAAGC,IAAM,UAC1BtH,EAAOhO,IAAM,EAAAqV,GAAGC,KAAOtU,EAAQ,IAAM,WAGvCgN,EAAOhO,IADE41D,EACI,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAI1Q,EAAG2c,QACL,MAEEs0C,GACF7nD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAI5C7nD,EAAOhO,MAAQ,EAAAqV,GAAGC,IAAM,UAC1BtH,EAAOhO,IAAM,EAAAqV,GAAGC,KAAOtU,EAAQ,IAAM,WAGvCgN,EAAOhO,IADE41D,EACI,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAI1Q,EAAG2c,QACL,MAEEs0C,GACF7nD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAI3C70D,GAASgN,EAAOhO,MAAQ,EAAAqV,GAAGC,IAAM,UACpCtH,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,UAGxBtH,EAAOhO,IADE41D,EACI,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEH,GAAI1Q,EAAG2c,QACL,MAEEs0C,GACF7nD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAI3C70D,GAASgN,EAAOhO,MAAQ,EAAAqV,GAAGC,IAAM,UACpCtH,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,UAGxBtH,EAAOhO,IADE41D,EACI,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEE1Q,EAAGkZ,UAAalZ,EAAG+Y,UAGtB3P,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAExB,MACF,KAAK,GAGDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEnC,EAAAxgD,GAAGC,IAAM,MAExB,MACF,KAAK,GAGDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IACvCD,EACI,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAGDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IACvCD,EACI,EAAAvgD,GAAGC,IAAM,KAET,EAAAD,GAAGC,IAAM,KAExB,MACF,KAAK,GAEC1Q,EAAGkZ,SACL9P,EAAOrH,KAAO,EACL/B,EAAG+Y,QACZ3P,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEhD7nD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,MAExB,MACF,KAAK,GAEC1Q,EAAGkZ,SACL9P,EAAOrH,KAAO,EACL/B,EAAG+Y,QACZ3P,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEhD7nD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAM,MAExB,MACF,KAAK,IAGDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEnC,EAAAxgD,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEnC,EAAAxgD,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEnC,EAAAxgD,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,OAASugD,EAAY,GAAK,IAEnC,EAAAxgD,GAAGC,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAOhO,IADL61D,EACW,EAAAxgD,GAAGC,IAAM,QAAUugD,EAAY,GAAK,IAEpC,EAAAxgD,GAAGC,IAAM,OAExB,MACF,QAEE,IAAI1Q,EAAG+Y,SAAY/Y,EAAGkZ,UAAalZ,EAAGiZ,QAAWjZ,EAAG2c,QAiB7C,GAAMvgB,IAASggB,IAAoBpc,EAAGiZ,QAAWjZ,EAAG2c,SA4BhDvgB,GAAU4D,EAAGiZ,QAAWjZ,EAAG+Y,SAAY/Y,EAAGkZ,WAAYlZ,EAAG2c,QAIzD3c,EAAG5E,MAAQ4E,EAAG+Y,UAAY/Y,EAAGiZ,SAAWjZ,EAAG2c,SAAW3c,EAAGmd,SAAW,IAAwB,IAAlBnd,EAAG5E,IAAI3B,OAG1F2P,EAAOhO,IAAM4E,EAAG5E,IACP4E,EAAG5E,KAAO4E,EAAG+Y,UACP,MAAX/Y,EAAG5E,MACLgO,EAAOhO,IAAM,EAAAqV,GAAGw+C,IAEH,MAAXjvD,EAAG5E,MACLgO,EAAOhO,IAAM,EAAAqV,GAAGo9C,MAZC,KAAf7tD,EAAGmd,UACL/T,EAAOrH,KAAO,OA9BkD,CAElE,MAAMmvD,EAAaH,EAAqB/wD,EAAGmd,SACrC/hB,EAAM81D,aAAU,EAAVA,EAAclxD,EAAGkZ,SAAe,EAAJ,GACxC,GAAI9d,EACFgO,EAAOhO,IAAM,EAAAqV,GAAGC,IAAMtV,OACjB,GAAI4E,EAAGmd,SAAW,IAAMnd,EAAGmd,SAAW,GAAI,CAC/C,MAAMA,EAAUnd,EAAG+Y,QAAU/Y,EAAGmd,QAAU,GAAKnd,EAAGmd,QAAU,GAC5D,IAAIg0C,EAAY5zC,OAAOC,aAAaL,GAChCnd,EAAGkZ,WACLi4C,EAAYA,EAAUC,eAExBhoD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAMygD,C,MACjB,GAAmB,KAAfnxD,EAAGmd,QACZ/T,EAAOhO,IAAM,EAAAqV,GAAGC,KAAO1Q,EAAG+Y,QAAU,EAAAtI,GAAGo9C,IAAM,UACxC,GAAe,SAAX7tD,EAAG5E,KAAkB4E,EAAGqzC,KAAKyN,WAAW,OAAQ,CAMzD,IAAIqQ,EAAYnxD,EAAGqzC,KAAKzR,MAAM,EAAG,GAC5B5hC,EAAGkZ,WACNi4C,EAAYA,EAAUE,eAExBjoD,EAAOhO,IAAM,EAAAqV,GAAGC,IAAMygD,EACtB/nD,EAAOqQ,QAAS,C,OA1CdzZ,EAAGmd,SAAW,IAAMnd,EAAGmd,SAAW,GACpC/T,EAAOhO,IAAMmiB,OAAOC,aAAaxd,EAAGmd,QAAU,IACtB,KAAfnd,EAAGmd,QACZ/T,EAAOhO,IAAM,EAAAqV,GAAGo9C,IACP7tD,EAAGmd,SAAW,IAAMnd,EAAGmd,SAAW,GAE3C/T,EAAOhO,IAAMmiB,OAAOC,aAAaxd,EAAGmd,QAAU,GAAK,IAC3B,KAAfnd,EAAGmd,QACZ/T,EAAOhO,IAAM,EAAAqV,GAAG6Y,IACQ,MAAftpB,EAAGmd,QACZ/T,EAAOhO,IAAM,EAAAqV,GAAGC,IACQ,MAAf1Q,EAAGmd,QACZ/T,EAAOhO,IAAM,EAAAqV,GAAGq+C,GACQ,MAAf9uD,EAAGmd,UACZ/T,EAAOhO,IAAM,EAAAqV,GAAGs+C,IAiDxB,OAAO3lD,CACT,C,0ICjYA,+BAAoCwhD,GAClC,OAAIA,EAAY,OACdA,GAAa,MACNrtC,OAAOC,aAAiC,OAAnBotC,GAAa,KAAgBrtC,OAAOC,aAAcotC,EAAY,KAAS,QAE9FrtC,OAAOC,aAAaotC,EAC7B,EAOA,yBAA8BxwC,EAAmB5f,EAAgB,EAAGC,EAAc2f,EAAK3gB,QACrF,IAAI2P,EAAS,GACb,IAAK,IAAIvR,EAAI2C,EAAO3C,EAAI4C,IAAO5C,EAAG,CAChC,IAAIggC,EAAYzd,EAAKviB,GACjBggC,EAAY,OAMdA,GAAa,MACbzuB,GAAUmU,OAAOC,aAAiC,OAAnBqa,GAAa,KAAgBta,OAAOC,aAAcqa,EAAY,KAAS,QAEtGzuB,GAAUmU,OAAOC,aAAaqa,E,CAGlC,OAAOzuB,CACT,EAMA,oCACU,KAAAkoD,SAAmB,CAkE7B,CA7DS,KAAAzvD,GACLrJ,KAAK84D,SAAW,CAClB,CAUO,MAAA3W,CAAOzxB,EAAe3rB,GAC3B,MAAM9D,EAASyvB,EAAMzvB,OAErB,IAAKA,EACH,OAAO,EAGT,IAAIkM,EAAO,EACP4rD,EAAW,EAGf,GAAI/4D,KAAK84D,SAAU,CACjB,MAAMrR,EAAS/2B,EAAMtM,WAAW20C,KAC5B,OAAUtR,GAAUA,GAAU,MAChC1iD,EAAOoI,KAAqC,MAA1BnN,KAAK84D,SAAW,OAAkBrR,EAAS,MAAS,OAGtE1iD,EAAOoI,KAAUnN,KAAK84D,SACtB/zD,EAAOoI,KAAUs6C,GAEnBznD,KAAK84D,SAAW,C,CAGlB,IAAK,IAAIz5D,EAAI05D,EAAU15D,EAAI4B,IAAU5B,EAAG,CACtC,MAAMw7C,EAAOnqB,EAAMtM,WAAW/kB,GAE9B,GAAI,OAAUw7C,GAAQA,GAAQ,MAA9B,CACE,KAAMx7C,GAAK4B,EAET,OADAjB,KAAK84D,SAAWje,EACT1tC,EAET,MAAMs6C,EAAS/2B,EAAMtM,WAAW/kB,GAC5B,OAAUooD,GAAUA,GAAU,MAChC1iD,EAAOoI,KAA4B,MAAjB0tC,EAAO,OAAkB4M,EAAS,MAAS,OAG7D1iD,EAAOoI,KAAU0tC,EACjB91C,EAAOoI,KAAUs6C,E,MAIR,QAAT5M,IAIJ91C,EAAOoI,KAAU0tC,E,CAEnB,OAAO1tC,CACT,GAMF,kCACS,KAAA6rD,QAAsB,IAAIC,WAAW,EAgO9C,CA3NS,KAAA5vD,GACLrJ,KAAKg5D,QAAQt6B,KAAK,EACpB,CAUO,MAAAyjB,CAAOzxB,EAAmB3rB,GAC/B,MAAM9D,EAASyvB,EAAMzvB,OAErB,IAAKA,EACH,OAAO,EAGT,IACIi4D,EACAC,EACAC,EACAC,EAJAlsD,EAAO,EAKPkyB,EAAY,EACZ05B,EAAW,EAGf,GAAI/4D,KAAKg5D,QAAQ,GAAI,CACnB,IAAIM,GAAiB,EACjBx6B,EAAK9+B,KAAKg5D,QAAQ,GACtBl6B,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAC3E,IACIy6B,EADA7xD,EAAM,EAEV,MAAQ6xD,EAA4B,GAAtBv5D,KAAKg5D,UAAUtxD,KAAgBA,EAAM,GACjDo3B,IAAO,EACPA,GAAMy6B,EAGR,MAAMhwD,EAAsC,MAAV,IAAlBvJ,KAAKg5D,QAAQ,IAAwB,EAAmC,MAAV,IAAlBh5D,KAAKg5D,QAAQ,IAAwB,EAAI,EAC/FQ,EAAUjwD,EAAO7B,EACvB,KAAOqxD,EAAWS,GAAS,CACzB,GAAIT,GAAY93D,EACd,OAAO,EAGT,GADAs4D,EAAM7oC,EAAMqoC,KACS,MAAV,IAANQ,GAAsB,CAEzBR,IACAO,GAAiB,EACjB,K,CAGAt5D,KAAKg5D,QAAQtxD,KAAS6xD,EACtBz6B,IAAO,EACPA,GAAY,GAANy6B,C,CAGLD,IAEU,IAAT/vD,EACEu1B,EAAK,IAEPi6B,IAEAh0D,EAAOoI,KAAU2xB,EAED,IAATv1B,EACLu1B,EAAK,MAAWA,GAAM,OAAUA,GAAM,OAAkB,QAAPA,IAGnD/5B,EAAOoI,KAAU2xB,GAGfA,EAAK,OAAYA,EAAK,UAGxB/5B,EAAOoI,KAAU2xB,IAIvB9+B,KAAKg5D,QAAQt6B,KAAK,E,CAIpB,MAAM+6B,EAAWx4D,EAAS,EAC1B,IAAI5B,EAAI05D,EACR,KAAO15D,EAAI4B,GAAQ,CAejB,SAAO5B,EAAIo6D,IACiB,KAApBP,EAAQxoC,EAAMrxB,KACU,KAAxB85D,EAAQzoC,EAAMrxB,EAAI,KACM,KAAxB+5D,EAAQ1oC,EAAMrxB,EAAI,KACM,KAAxBg6D,EAAQ3oC,EAAMrxB,EAAI,MAExB0F,EAAOoI,KAAU+rD,EACjBn0D,EAAOoI,KAAUgsD,EACjBp0D,EAAOoI,KAAUisD,EACjBr0D,EAAOoI,KAAUksD,EACjBh6D,GAAK,EAOP,GAHA65D,EAAQxoC,EAAMrxB,KAGV65D,EAAQ,IACVn0D,EAAOoI,KAAU+rD,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAI75D,GAAK4B,EAEP,OADAjB,KAAKg5D,QAAQ,GAAKE,EACX/rD,EAGT,GADAgsD,EAAQzoC,EAAMrxB,KACS,MAAV,IAAR85D,GAAwB,CAE3B95D,IACA,Q,CAGF,GADAggC,GAAqB,GAAR65B,IAAiB,EAAa,GAARC,EAC/B95B,EAAY,IAAM,CAEpBhgC,IACA,Q,CAEF0F,EAAOoI,KAAUkyB,C,MAGZ,GAAuB,MAAV,IAAR65B,GAAwB,CAClC,GAAI75D,GAAK4B,EAEP,OADAjB,KAAKg5D,QAAQ,GAAKE,EACX/rD,EAGT,GADAgsD,EAAQzoC,EAAMrxB,KACS,MAAV,IAAR85D,GAAwB,CAE3B95D,IACA,Q,CAEF,GAAIA,GAAK4B,EAGP,OAFAjB,KAAKg5D,QAAQ,GAAKE,EAClBl5D,KAAKg5D,QAAQ,GAAKG,EACXhsD,EAGT,GADAisD,EAAQ1oC,EAAMrxB,KACS,MAAV,IAAR+5D,GAAwB,CAE3B/5D,IACA,Q,CAGF,GADAggC,GAAqB,GAAR65B,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,EACtD/5B,EAAY,MAAWA,GAAa,OAAUA,GAAa,OAAyB,QAAdA,EAExE,SAEFt6B,EAAOoI,KAAUkyB,C,MAGZ,GAAuB,MAAV,IAAR65B,GAAwB,CAClC,GAAI75D,GAAK4B,EAEP,OADAjB,KAAKg5D,QAAQ,GAAKE,EACX/rD,EAGT,GADAgsD,EAAQzoC,EAAMrxB,KACS,MAAV,IAAR85D,GAAwB,CAE3B95D,IACA,Q,CAEF,GAAIA,GAAK4B,EAGP,OAFAjB,KAAKg5D,QAAQ,GAAKE,EAClBl5D,KAAKg5D,QAAQ,GAAKG,EACXhsD,EAGT,GADAisD,EAAQ1oC,EAAMrxB,KACS,MAAV,IAAR+5D,GAAwB,CAE3B/5D,IACA,Q,CAEF,GAAIA,GAAK4B,EAIP,OAHAjB,KAAKg5D,QAAQ,GAAKE,EAClBl5D,KAAKg5D,QAAQ,GAAKG,EAClBn5D,KAAKg5D,QAAQ,GAAKI,EACXjsD,EAGT,GADAksD,EAAQ3oC,EAAMrxB,KACS,MAAV,IAARg6D,GAAwB,CAE3Bh6D,IACA,Q,CAGF,GADAggC,GAAqB,EAAR65B,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,EAC7Eh6B,EAAY,OAAYA,EAAY,QAEtC,SAEFt6B,EAAOoI,KAAUkyB,C,EAKrB,OAAOlyB,CACT,E,kFChVF,MAAMusD,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MA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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/dom/WidthCache.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange, IBufferElementProvider } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { EventEmitter } from 'common/EventEmitter';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || (!(isInSelection && oldIsInSelection && colors.selectionForeground) && cell.fg === oldFg)\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, SpecialColorIndex, IColor, AllColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsWrappingHeuristics?.dispose();\n      this._windowsWrappingHeuristics = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics?.dispose();\n      this._windowsWrappingHeuristics = undefined;\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration, IBufferElementProvider, ITerminalInitOnlyOptions } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","super","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","push","refresh","buffer","setSize","lines","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","position","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","disposed","dispose","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","_clearCurrentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","registerMarker","cursorYOffset","addMarker","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","onDispose","delete","anchor","right","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","replaceChildren","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","rowElement","createRow","_setCellUnderline","enabled","maxY","bufferline","IInstantiationService","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","d","chars","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isCursorHidden","isFocused","isDim","isInvisible","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","cache","_getContrastCache","adjustedColor","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","body","_holey","fill","font","weight","weightBold","cp","_measure","variant","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","Number","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_colors","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsWrappingHeuristics","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}